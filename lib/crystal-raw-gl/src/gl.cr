{% if flag?(:darwin) %}
  @[Link(framework: "OpenGL")]
{% else %}
  @[Link("GL")]
{% end %}

lib GL
  VERSION_1_1 = 1
  VERSION_1_2 = 1
  VERSION_1_3 = 1
  ARB_IMAGING = 1
  alias Enum = UInt32
  alias Boolean = UInt8
  alias Bitfield = UInt32
  alias Byte = Int8
  alias Short = Int16
  alias Int = Int32
  alias Ubyte = UInt8
  alias Ushort = UInt16
  alias Uint = UInt32
  alias Sizei = Int32
  alias Float = Float32
  alias Clampf = Float32
  alias Double = Float64
  alias Clampd = Float64
  FALSE = 0u8
  TRUE = 1u8
  BYTE = 0x1400_u32
  UNSIGNED_BYTE = 0x1401_u32
  SHORT = 0x1402_u32
  UNSIGNED_SHORT = 0x1403_u32
  INT = 0x1404_u32
  UNSIGNED_INT = 0x1405_u32
  FLOAT = 0x1406_u32
  GL_2_BYTES = 0x1407_u32
  GL_3_BYTES = 0x1408_u32
  GL_4_BYTES = 0x1409_u32
  DOUBLE = 0x140A_u32
  POINTS = 0x0000_u32
  LINES = 0x0001_u32
  LINE_LOOP = 0x0002_u32
  LINE_STRIP = 0x0003_u32
  TRIANGLES = 0x0004_u32
  TRIANGLE_STRIP = 0x0005_u32
  TRIANGLE_FAN = 0x0006_u32
  QUADS = 0x0007_u32
  QUAD_STRIP = 0x0008_u32
  POLYGON = 0x0009_u32
  VERTEX_ARRAY = 0x8074_u32
  NORMAL_ARRAY = 0x8075_u32
  COLOR_ARRAY = 0x8076_u32
  INDEX_ARRAY = 0x8077_u32
  TEXTURE_COORD_ARRAY = 0x8078_u32
  EDGE_FLAG_ARRAY = 0x8079_u32
  VERTEX_ARRAY_SIZE = 0x807A_u32
  VERTEX_ARRAY_TYPE = 0x807B_u32
  VERTEX_ARRAY_STRIDE = 0x807C_u32
  NORMAL_ARRAY_TYPE = 0x807E_u32
  NORMAL_ARRAY_STRIDE = 0x807F_u32
  COLOR_ARRAY_SIZE = 0x8081_u32
  COLOR_ARRAY_TYPE = 0x8082_u32
  COLOR_ARRAY_STRIDE = 0x8083_u32
  INDEX_ARRAY_TYPE = 0x8085_u32
  INDEX_ARRAY_STRIDE = 0x8086_u32
  TEXTURE_COORD_ARRAY_SIZE = 0x8088_u32
  TEXTURE_COORD_ARRAY_TYPE = 0x8089_u32
  TEXTURE_COORD_ARRAY_STRIDE = 0x808A_u32
  EDGE_FLAG_ARRAY_STRIDE = 0x808C_u32
  VERTEX_ARRAY_POINTER = 0x808E_u32
  NORMAL_ARRAY_POINTER = 0x808F_u32
  COLOR_ARRAY_POINTER = 0x8090_u32
  INDEX_ARRAY_POINTER = 0x8091_u32
  TEXTURE_COORD_ARRAY_POINTER = 0x8092_u32
  EDGE_FLAG_ARRAY_POINTER = 0x8093_u32
  V2F = 0x2A20_u32
  V3F = 0x2A21_u32
  C4UB_V2F = 0x2A22_u32
  C4UB_V3F = 0x2A23_u32
  C3F_V3F = 0x2A24_u32
  N3F_V3F = 0x2A25_u32
  C4F_N3F_V3F = 0x2A26_u32
  T2F_V3F = 0x2A27_u32
  T4F_V4F = 0x2A28_u32
  T2F_C4UB_V3F = 0x2A29_u32
  T2F_C3F_V3F = 0x2A2A_u32
  T2F_N3F_V3F = 0x2A2B_u32
  T2F_C4F_N3F_V3F = 0x2A2C_u32
  T4F_C4F_N3F_V4F = 0x2A2D_u32
  MATRIX_MODE = 0x0BA0_u32
  MODELVIEW = 0x1700_u32
  PROJECTION = 0x1701_u32
  TEXTURE = 0x1702_u32
  POINT_SMOOTH = 0x0B10_u32
  POINT_SIZE = 0x0B11_u32
  POINT_SIZE_GRANULARITY = 0x0B13_u32
  POINT_SIZE_RANGE = 0x0B12_u32
  LINE_SMOOTH = 0x0B20_u32
  LINE_STIPPLE = 0x0B24_u32
  LINE_STIPPLE_PATTERN = 0x0B25_u32
  LINE_STIPPLE_REPEAT = 0x0B26_u32
  LINE_WIDTH = 0x0B21_u32
  LINE_WIDTH_GRANULARITY = 0x0B23_u32
  LINE_WIDTH_RANGE = 0x0B22_u32
  POINT = 0x1B00_u32
  LINE = 0x1B01_u32
  FILL = 0x1B02_u32
  CW = 0x0900_u32
  CCW = 0x0901_u32
  FRONT = 0x0404_u32
  BACK = 0x0405_u32
  POLYGON_MODE = 0x0B40_u32
  POLYGON_SMOOTH = 0x0B41_u32
  POLYGON_STIPPLE = 0x0B42_u32
  EDGE_FLAG = 0x0B43_u32
  CULL_FACE = 0x0B44_u32
  CULL_FACE_MODE = 0x0B45_u32
  FRONT_FACE = 0x0B46_u32
  POLYGON_OFFSET_FACTOR = 0x8038_u32
  POLYGON_OFFSET_UNITS = 0x2A00_u32
  POLYGON_OFFSET_POINT = 0x2A01_u32
  POLYGON_OFFSET_LINE = 0x2A02_u32
  POLYGON_OFFSET_FILL = 0x8037_u32
  COMPILE = 0x1300_u32
  COMPILE_AND_EXECUTE = 0x1301_u32
  LIST_BASE = 0x0B32_u32
  LIST_INDEX = 0x0B33_u32
  LIST_MODE = 0x0B30_u32
  NEVER = 0x0200_u32
  LESS = 0x0201_u32
  EQUAL = 0x0202_u32
  LEQUAL = 0x0203_u32
  GREATER = 0x0204_u32
  NOTEQUAL = 0x0205_u32
  GEQUAL = 0x0206_u32
  ALWAYS = 0x0207_u32
  DEPTH_TEST = 0x0B71_u32
  DEPTH_BITS = 0x0D56_u32
  DEPTH_CLEAR_VALUE = 0x0B73_u32
  DEPTH_FUNC = 0x0B74_u32
  DEPTH_RANGE = 0x0B70_u32
  DEPTH_WRITEMASK = 0x0B72_u32
  DEPTH_COMPONENT = 0x1902_u32
  LIGHTING = 0x0B50_u32
  LIGHT0 = 0x4000_u32
  LIGHT1 = 0x4001_u32
  LIGHT2 = 0x4002_u32
  LIGHT3 = 0x4003_u32
  LIGHT4 = 0x4004_u32
  LIGHT5 = 0x4005_u32
  LIGHT6 = 0x4006_u32
  LIGHT7 = 0x4007_u32
  SPOT_EXPONENT = 0x1205_u32
  SPOT_CUTOFF = 0x1206_u32
  CONSTANT_ATTENUATION = 0x1207_u32
  LINEAR_ATTENUATION = 0x1208_u32
  QUADRATIC_ATTENUATION = 0x1209_u32
  AMBIENT = 0x1200_u32
  DIFFUSE = 0x1201_u32
  SPECULAR = 0x1202_u32
  SHININESS = 0x1601_u32
  EMISSION = 0x1600_u32
  POSITION = 0x1203_u32
  SPOT_DIRECTION = 0x1204_u32
  AMBIENT_AND_DIFFUSE = 0x1602_u32
  COLOR_INDEXES = 0x1603_u32
  LIGHT_MODEL_TWO_SIDE = 0x0B52_u32
  LIGHT_MODEL_LOCAL_VIEWER = 0x0B51_u32
  LIGHT_MODEL_AMBIENT = 0x0B53_u32
  FRONT_AND_BACK = 0x0408_u32
  SHADE_MODEL = 0x0B54_u32
  FLAT = 0x1D00_u32
  SMOOTH = 0x1D01_u32
  COLOR_MATERIAL = 0x0B57_u32
  COLOR_MATERIAL_FACE = 0x0B55_u32
  COLOR_MATERIAL_PARAMETER = 0x0B56_u32
  NORMALIZE = 0x0BA1_u32
  CLIP_PLANE0 = 0x3000_u32
  CLIP_PLANE1 = 0x3001_u32
  CLIP_PLANE2 = 0x3002_u32
  CLIP_PLANE3 = 0x3003_u32
  CLIP_PLANE4 = 0x3004_u32
  CLIP_PLANE5 = 0x3005_u32
  ACCUM_RED_BITS = 0x0D58_u32
  ACCUM_GREEN_BITS = 0x0D59_u32
  ACCUM_BLUE_BITS = 0x0D5A_u32
  ACCUM_ALPHA_BITS = 0x0D5B_u32
  ACCUM_CLEAR_VALUE = 0x0B80_u32
  ACCUM = 0x0100_u32
  ADD = 0x0104_u32
  LOAD = 0x0101_u32
  MULT = 0x0103_u32
  RETURN = 0x0102_u32
  ALPHA_TEST = 0x0BC0_u32
  ALPHA_TEST_REF = 0x0BC2_u32
  ALPHA_TEST_FUNC = 0x0BC1_u32
  BLEND = 0x0BE2_u32
  BLEND_SRC = 0x0BE1_u32
  BLEND_DST = 0x0BE0_u32
  ZERO = 0
  ONE = 1
  SRC_COLOR = 0x0300_u32
  ONE_MINUS_SRC_COLOR = 0x0301_u32
  SRC_ALPHA = 0x0302_u32
  ONE_MINUS_SRC_ALPHA = 0x0303_u32
  DST_ALPHA = 0x0304_u32
  ONE_MINUS_DST_ALPHA = 0x0305_u32
  DST_COLOR = 0x0306_u32
  ONE_MINUS_DST_COLOR = 0x0307_u32
  SRC_ALPHA_SATURATE = 0x0308_u32
  FEEDBACK = 0x1C01_u32
  RENDER = 0x1C00_u32
  SELECT = 0x1C02_u32
  GL_2D = 0x0600_u32
  GL_3D = 0x0601_u32
  GL_3D_COLOR = 0x0602_u32
  GL_3D_COLOR_TEXTURE = 0x0603_u32
  GL_4D_COLOR_TEXTURE = 0x0604_u32
  POINT_TOKEN = 0x0701_u32
  LINE_TOKEN = 0x0702_u32
  LINE_RESET_TOKEN = 0x0707_u32
  POLYGON_TOKEN = 0x0703_u32
  BITMAP_TOKEN = 0x0704_u32
  DRAW_PIXEL_TOKEN = 0x0705_u32
  COPY_PIXEL_TOKEN = 0x0706_u32
  PASS_THROUGH_TOKEN = 0x0700_u32
  FEEDBACK_BUFFER_POINTER = 0x0DF0_u32
  FEEDBACK_BUFFER_SIZE = 0x0DF1_u32
  FEEDBACK_BUFFER_TYPE = 0x0DF2_u32
  SELECTION_BUFFER_POINTER = 0x0DF3_u32
  SELECTION_BUFFER_SIZE = 0x0DF4_u32
  FOG = 0x0B60_u32
  FOG_MODE = 0x0B65_u32
  FOG_DENSITY = 0x0B62_u32
  FOG_COLOR = 0x0B66_u32
  FOG_INDEX = 0x0B61_u32
  FOG_START = 0x0B63_u32
  FOG_END = 0x0B64_u32
  LINEAR = 0x2601_u32
  EXP = 0x0800_u32
  EXP2 = 0x0801_u32
  LOGIC_OP = 0x0BF1_u32
  INDEX_LOGIC_OP = 0x0BF1_u32
  COLOR_LOGIC_OP = 0x0BF2_u32
  LOGIC_OP_MODE = 0x0BF0_u32
  CLEAR = 0x1500_u32
  SET = 0x150F_u32
  COPY = 0x1503_u32
  COPY_INVERTED = 0x150C_u32
  NOOP = 0x1505_u32
  INVERT = 0x150A_u32
  AND = 0x1501_u32
  NAND = 0x150E_u32
  OR = 0x1507_u32
  NOR = 0x1508_u32
  XOR = 0x1506_u32
  EQUIV = 0x1509_u32
  AND_REVERSE = 0x1502_u32
  AND_INVERTED = 0x1504_u32
  OR_REVERSE = 0x150B_u32
  OR_INVERTED = 0x150D_u32
  STENCIL_BITS = 0x0D57_u32
  STENCIL_TEST = 0x0B90_u32
  STENCIL_CLEAR_VALUE = 0x0B91_u32
  STENCIL_FUNC = 0x0B92_u32
  STENCIL_VALUE_MASK = 0x0B93_u32
  STENCIL_FAIL = 0x0B94_u32
  STENCIL_PASS_DEPTH_FAIL = 0x0B95_u32
  STENCIL_PASS_DEPTH_PASS = 0x0B96_u32
  STENCIL_REF = 0x0B97_u32
  STENCIL_WRITEMASK = 0x0B98_u32
  STENCIL_INDEX = 0x1901_u32
  KEEP = 0x1E00_u32
  REPLACE = 0x1E01_u32
  INCR = 0x1E02_u32
  DECR = 0x1E03_u32
  NONE = 0
  LEFT = 0x0406_u32
  RIGHT = 0x0407_u32
  FRONT_LEFT = 0x0400_u32
  FRONT_RIGHT = 0x0401_u32
  BACK_LEFT = 0x0402_u32
  BACK_RIGHT = 0x0403_u32
  AUX0 = 0x0409_u32
  AUX1 = 0x040A_u32
  AUX2 = 0x040B_u32
  AUX3 = 0x040C_u32
  COLOR_INDEX = 0x1900_u32
  RED = 0x1903_u32
  GREEN = 0x1904_u32
  BLUE = 0x1905_u32
  ALPHA = 0x1906_u32
  LUMINANCE = 0x1909_u32
  LUMINANCE_ALPHA = 0x190A_u32
  ALPHA_BITS = 0x0D55_u32
  RED_BITS = 0x0D52_u32
  GREEN_BITS = 0x0D53_u32
  BLUE_BITS = 0x0D54_u32
  INDEX_BITS = 0x0D51_u32
  SUBPIXEL_BITS = 0x0D50_u32
  AUX_BUFFERS = 0x0C00_u32
  READ_BUFFER = 0x0C02_u32
  DRAW_BUFFER = 0x0C01_u32
  DOUBLEBUFFER = 0x0C32_u32
  STEREO = 0x0C33_u32
  BITMAP = 0x1A00_u32
  COLOR = 0x1800_u32
  DEPTH = 0x1801_u32
  STENCIL = 0x1802_u32
  DITHER = 0x0BD0_u32
  RGB = 0x1907_u32
  RGBA = 0x1908_u32
  MAX_LIST_NESTING = 0x0B31_u32
  MAX_EVAL_ORDER = 0x0D30_u32
  MAX_LIGHTS = 0x0D31_u32
  MAX_CLIP_PLANES = 0x0D32_u32
  MAX_TEXTURE_SIZE = 0x0D33_u32
  MAX_PIXEL_MAP_TABLE = 0x0D34_u32
  MAX_ATTRIB_STACK_DEPTH = 0x0D35_u32
  MAX_MODELVIEW_STACK_DEPTH = 0x0D36_u32
  MAX_NAME_STACK_DEPTH = 0x0D37_u32
  MAX_PROJECTION_STACK_DEPTH = 0x0D38_u32
  MAX_TEXTURE_STACK_DEPTH = 0x0D39_u32
  MAX_VIEWPORT_DIMS = 0x0D3A_u32
  MAX_CLIENT_ATTRIB_STACK_DEPTH = 0x0D3B_u32
  ATTRIB_STACK_DEPTH = 0x0BB0_u32
  CLIENT_ATTRIB_STACK_DEPTH = 0x0BB1_u32
  COLOR_CLEAR_VALUE = 0x0C22_u32
  COLOR_WRITEMASK = 0x0C23_u32
  CURRENT_INDEX = 0x0B01_u32
  CURRENT_COLOR = 0x0B00_u32
  CURRENT_NORMAL = 0x0B02_u32
  CURRENT_RASTER_COLOR = 0x0B04_u32
  CURRENT_RASTER_DISTANCE = 0x0B09_u32
  CURRENT_RASTER_INDEX = 0x0B05_u32
  CURRENT_RASTER_POSITION = 0x0B07_u32
  CURRENT_RASTER_TEXTURE_COORDS = 0x0B06_u32
  CURRENT_RASTER_POSITION_VALID = 0x0B08_u32
  CURRENT_TEXTURE_COORDS = 0x0B03_u32
  INDEX_CLEAR_VALUE = 0x0C20_u32
  INDEX_MODE = 0x0C30_u32
  INDEX_WRITEMASK = 0x0C21_u32
  MODELVIEW_MATRIX = 0x0BA6_u32
  MODELVIEW_STACK_DEPTH = 0x0BA3_u32
  NAME_STACK_DEPTH = 0x0D70_u32
  PROJECTION_MATRIX = 0x0BA7_u32
  PROJECTION_STACK_DEPTH = 0x0BA4_u32
  RENDER_MODE = 0x0C40_u32
  RGBA_MODE = 0x0C31_u32
  TEXTURE_MATRIX = 0x0BA8_u32
  TEXTURE_STACK_DEPTH = 0x0BA5_u32
  VIEWPORT = 0x0BA2_u32
  AUTO_NORMAL = 0x0D80_u32
  MAP1_COLOR_4 = 0x0D90_u32
  MAP1_INDEX = 0x0D91_u32
  MAP1_NORMAL = 0x0D92_u32
  MAP1_TEXTURE_COORD_1 = 0x0D93_u32
  MAP1_TEXTURE_COORD_2 = 0x0D94_u32
  MAP1_TEXTURE_COORD_3 = 0x0D95_u32
  MAP1_TEXTURE_COORD_4 = 0x0D96_u32
  MAP1_VERTEX_3 = 0x0D97_u32
  MAP1_VERTEX_4 = 0x0D98_u32
  MAP2_COLOR_4 = 0x0DB0_u32
  MAP2_INDEX = 0x0DB1_u32
  MAP2_NORMAL = 0x0DB2_u32
  MAP2_TEXTURE_COORD_1 = 0x0DB3_u32
  MAP2_TEXTURE_COORD_2 = 0x0DB4_u32
  MAP2_TEXTURE_COORD_3 = 0x0DB5_u32
  MAP2_TEXTURE_COORD_4 = 0x0DB6_u32
  MAP2_VERTEX_3 = 0x0DB7_u32
  MAP2_VERTEX_4 = 0x0DB8_u32
  MAP1_GRID_DOMAIN = 0x0DD0_u32
  MAP1_GRID_SEGMENTS = 0x0DD1_u32
  MAP2_GRID_DOMAIN = 0x0DD2_u32
  MAP2_GRID_SEGMENTS = 0x0DD3_u32
  COEFF = 0x0A00_u32
  ORDER = 0x0A01_u32
  DOMAIN = 0x0A02_u32
  PERSPECTIVE_CORRECTION_HINT = 0x0C50_u32
  POINT_SMOOTH_HINT = 0x0C51_u32
  LINE_SMOOTH_HINT = 0x0C52_u32
  POLYGON_SMOOTH_HINT = 0x0C53_u32
  FOG_HINT = 0x0C54_u32
  DONT_CARE = 0x1100_u32
  FASTEST = 0x1101_u32
  NICEST = 0x1102_u32
  SCISSOR_BOX = 0x0C10_u32
  SCISSOR_TEST = 0x0C11_u32
  MAP_COLOR = 0x0D10_u32
  MAP_STENCIL = 0x0D11_u32
  INDEX_SHIFT = 0x0D12_u32
  INDEX_OFFSET = 0x0D13_u32
  RED_SCALE = 0x0D14_u32
  RED_BIAS = 0x0D15_u32
  GREEN_SCALE = 0x0D18_u32
  GREEN_BIAS = 0x0D19_u32
  BLUE_SCALE = 0x0D1A_u32
  BLUE_BIAS = 0x0D1B_u32
  ALPHA_SCALE = 0x0D1C_u32
  ALPHA_BIAS = 0x0D1D_u32
  DEPTH_SCALE = 0x0D1E_u32
  DEPTH_BIAS = 0x0D1F_u32
  PIXEL_MAP_S_TO_S_SIZE = 0x0CB1_u32
  PIXEL_MAP_I_TO_I_SIZE = 0x0CB0_u32
  PIXEL_MAP_I_TO_R_SIZE = 0x0CB2_u32
  PIXEL_MAP_I_TO_G_SIZE = 0x0CB3_u32
  PIXEL_MAP_I_TO_B_SIZE = 0x0CB4_u32
  PIXEL_MAP_I_TO_A_SIZE = 0x0CB5_u32
  PIXEL_MAP_R_TO_R_SIZE = 0x0CB6_u32
  PIXEL_MAP_G_TO_G_SIZE = 0x0CB7_u32
  PIXEL_MAP_B_TO_B_SIZE = 0x0CB8_u32
  PIXEL_MAP_A_TO_A_SIZE = 0x0CB9_u32
  PIXEL_MAP_S_TO_S = 0x0C71_u32
  PIXEL_MAP_I_TO_I = 0x0C70_u32
  PIXEL_MAP_I_TO_R = 0x0C72_u32
  PIXEL_MAP_I_TO_G = 0x0C73_u32
  PIXEL_MAP_I_TO_B = 0x0C74_u32
  PIXEL_MAP_I_TO_A = 0x0C75_u32
  PIXEL_MAP_R_TO_R = 0x0C76_u32
  PIXEL_MAP_G_TO_G = 0x0C77_u32
  PIXEL_MAP_B_TO_B = 0x0C78_u32
  PIXEL_MAP_A_TO_A = 0x0C79_u32
  PACK_ALIGNMENT = 0x0D05_u32
  PACK_LSB_FIRST = 0x0D01_u32
  PACK_ROW_LENGTH = 0x0D02_u32
  PACK_SKIP_PIXELS = 0x0D04_u32
  PACK_SKIP_ROWS = 0x0D03_u32
  PACK_SWAP_BYTES = 0x0D00_u32
  UNPACK_ALIGNMENT = 0x0CF5_u32
  UNPACK_LSB_FIRST = 0x0CF1_u32
  UNPACK_ROW_LENGTH = 0x0CF2_u32
  UNPACK_SKIP_PIXELS = 0x0CF4_u32
  UNPACK_SKIP_ROWS = 0x0CF3_u32
  UNPACK_SWAP_BYTES = 0x0CF0_u32
  ZOOM_X = 0x0D16_u32
  ZOOM_Y = 0x0D17_u32
  TEXTURE_ENV = 0x2300_u32
  TEXTURE_ENV_MODE = 0x2200_u32
  TEXTURE_1D = 0x0DE0_u32
  TEXTURE_2D = 0x0DE1_u32
  TEXTURE_WRAP_S = 0x2802_u32
  TEXTURE_WRAP_T = 0x2803_u32
  TEXTURE_MAG_FILTER = 0x2800_u32
  TEXTURE_MIN_FILTER = 0x2801_u32
  TEXTURE_ENV_COLOR = 0x2201_u32
  TEXTURE_GEN_S = 0x0C60_u32
  TEXTURE_GEN_T = 0x0C61_u32
  TEXTURE_GEN_R = 0x0C62_u32
  TEXTURE_GEN_Q = 0x0C63_u32
  TEXTURE_GEN_MODE = 0x2500_u32
  TEXTURE_BORDER_COLOR = 0x1004_u32
  TEXTURE_WIDTH = 0x1000_u32
  TEXTURE_HEIGHT = 0x1001_u32
  TEXTURE_BORDER = 0x1005_u32
  TEXTURE_COMPONENTS = 0x1003_u32
  TEXTURE_RED_SIZE = 0x805C_u32
  TEXTURE_GREEN_SIZE = 0x805D_u32
  TEXTURE_BLUE_SIZE = 0x805E_u32
  TEXTURE_ALPHA_SIZE = 0x805F_u32
  TEXTURE_LUMINANCE_SIZE = 0x8060_u32
  TEXTURE_INTENSITY_SIZE = 0x8061_u32
  NEAREST_MIPMAP_NEAREST = 0x2700_u32
  NEAREST_MIPMAP_LINEAR = 0x2702_u32
  LINEAR_MIPMAP_NEAREST = 0x2701_u32
  LINEAR_MIPMAP_LINEAR = 0x2703_u32
  OBJECT_LINEAR = 0x2401_u32
  OBJECT_PLANE = 0x2501_u32
  EYE_LINEAR = 0x2400_u32
  EYE_PLANE = 0x2502_u32
  SPHERE_MAP = 0x2402_u32
  DECAL = 0x2101_u32
  MODULATE = 0x2100_u32
  NEAREST = 0x2600_u32
  REPEAT = 0x2901_u32
  CLAMP = 0x2900_u32
  S = 0x2000_u32
  T = 0x2001_u32
  R = 0x2002_u32
  Q = 0x2003_u32
  VENDOR = 0x1F00_u32
  RENDERER = 0x1F01_u32
  VERSION = 0x1F02_u32
  EXTENSIONS = 0x1F03_u32
  NO_ERROR = 0
  INVALID_ENUM = 0x0500_u32
  INVALID_VALUE = 0x0501_u32
  INVALID_OPERATION = 0x0502_u32
  STACK_OVERFLOW = 0x0503_u32
  STACK_UNDERFLOW = 0x0504_u32
  OUT_OF_MEMORY = 0x0505_u32
  CURRENT_BIT = 0x00000001_u32
  POINT_BIT = 0x00000002_u32
  LINE_BIT = 0x00000004_u32
  POLYGON_BIT = 0x00000008_u32
  POLYGON_STIPPLE_BIT = 0x00000010_u32
  PIXEL_MODE_BIT = 0x00000020_u32
  LIGHTING_BIT = 0x00000040_u32
  FOG_BIT = 0x00000080_u32
  DEPTH_BUFFER_BIT = 0x00000100_u32
  ACCUM_BUFFER_BIT = 0x00000200_u32
  STENCIL_BUFFER_BIT = 0x00000400_u32
  VIEWPORT_BIT = 0x00000800_u32
  TRANSFORM_BIT = 0x00001000_u32
  ENABLE_BIT = 0x00002000_u32
  COLOR_BUFFER_BIT = 0x00004000_u32
  HINT_BIT = 0x00008000_u32
  EVAL_BIT = 0x00010000_u32
  LIST_BIT = 0x00020000_u32
  TEXTURE_BIT = 0x00040000_u32
  SCISSOR_BIT = 0x00080000_u32
  ALL_ATTRIB_BITS = 0xFFFFFFFF_u32
  PROXY_TEXTURE_1D = 0x8063_u32
  PROXY_TEXTURE_2D = 0x8064_u32
  TEXTURE_PRIORITY = 0x8066_u32
  TEXTURE_RESIDENT = 0x8067_u32
  TEXTURE_BINDING_1D = 0x8068_u32
  TEXTURE_BINDING_2D = 0x8069_u32
  TEXTURE_INTERNAL_FORMAT = 0x1003_u32
  ALPHA4 = 0x803B_u32
  ALPHA8 = 0x803C_u32
  ALPHA12 = 0x803D_u32
  ALPHA16 = 0x803E_u32
  LUMINANCE4 = 0x803F_u32
  LUMINANCE8 = 0x8040_u32
  LUMINANCE12 = 0x8041_u32
  LUMINANCE16 = 0x8042_u32
  LUMINANCE4_ALPHA4 = 0x8043_u32
  LUMINANCE6_ALPHA2 = 0x8044_u32
  LUMINANCE8_ALPHA8 = 0x8045_u32
  LUMINANCE12_ALPHA4 = 0x8046_u32
  LUMINANCE12_ALPHA12 = 0x8047_u32
  LUMINANCE16_ALPHA16 = 0x8048_u32
  INTENSITY = 0x8049_u32
  INTENSITY4 = 0x804A_u32
  INTENSITY8 = 0x804B_u32
  INTENSITY12 = 0x804C_u32
  INTENSITY16 = 0x804D_u32
  R3_G3_B2 = 0x2A10_u32
  RGB4 = 0x804F_u32
  RGB5 = 0x8050_u32
  RGB8 = 0x8051_u32
  RGB10 = 0x8052_u32
  RGB12 = 0x8053_u32
  RGB16 = 0x8054_u32
  RGBA2 = 0x8055_u32
  RGBA4 = 0x8056_u32
  RGB5_A1 = 0x8057_u32
  RGBA8 = 0x8058_u32
  RGB10_A2 = 0x8059_u32
  RGBA12 = 0x805A_u32
  RGBA16 = 0x805B_u32
  CLIENT_PIXEL_STORE_BIT = 0x00000001_u32
  CLIENT_VERTEX_ARRAY_BIT = 0x00000002_u32
  ALL_CLIENT_ATTRIB_BITS = 0xFFFFFFFF_u32
  CLIENT_ALL_ATTRIB_BITS = 0xFFFFFFFF_u32
  fun clear_index = "glClearIndex"(c : Float) : Void
  fun clear_color = "glClearColor"(red : Clampf, green : Clampf, blue : Clampf, alpha : Clampf) : Void
  fun clear = "glClear"(mask : Bitfield) : Void
  fun index_mask = "glIndexMask"(mask : Uint) : Void
  fun color_mask = "glColorMask"(red : Boolean, green : Boolean, blue : Boolean, alpha : Boolean) : Void
  fun alpha_func = "glAlphaFunc"(func : Enum, ref : Clampf) : Void
  fun blend_func = "glBlendFunc"(sfactor : Enum, dfactor : Enum) : Void
  fun logic_op = "glLogicOp"(opcode : Enum) : Void
  fun cull_face = "glCullFace"(mode : Enum) : Void
  fun front_face = "glFrontFace"(mode : Enum) : Void
  fun point_size = "glPointSize"(size : Float) : Void
  fun line_width = "glLineWidth"(width : Float) : Void
  fun line_stipple = "glLineStipple"(factor : Int, pattern : Ushort) : Void
  fun polygon_mode = "glPolygonMode"(face : Enum, mode : Enum) : Void
  fun polygon_offset = "glPolygonOffset"(factor : Float, units : Float) : Void
  fun polygon_stipple = "glPolygonStipple"(mask : Ubyte*) : Void
  fun get_polygon_stipple = "glGetPolygonStipple"(mask : Ubyte*) : Void
  fun edge_flag = "glEdgeFlag"(flag : Boolean) : Void
  fun edge_flagv = "glEdgeFlagv"(flag : Boolean*) : Void
  fun scissor = "glScissor"(x : Int, y : Int, width : Sizei, height : Sizei) : Void
  fun clip_plane = "glClipPlane"(plane : Enum, equation : Double*) : Void
  fun get_clip_plane = "glGetClipPlane"(plane : Enum, equation : Double*) : Void
  fun draw_buffer = "glDrawBuffer"(mode : Enum) : Void
  fun read_buffer = "glReadBuffer"(mode : Enum) : Void
  fun enable = "glEnable"(cap : Enum) : Void
  fun disable = "glDisable"(cap : Enum) : Void
  fun is_enabled = "glIsEnabled"(cap : Enum) : Boolean
  fun enable_client_state = "glEnableClientState"(cap : Enum) : Void
  fun disable_client_state = "glDisableClientState"(cap : Enum) : Void
  fun get_booleanv = "glGetBooleanv"(pname : Enum, params : Boolean*) : Void
  fun get_doublev = "glGetDoublev"(pname : Enum, params : Double*) : Void
  fun get_floatv = "glGetFloatv"(pname : Enum, params : Float*) : Void
  fun get_integerv = "glGetIntegerv"(pname : Enum, params : Int*) : Void
  fun push_attrib = "glPushAttrib"(mask : Bitfield) : Void
  fun pop_attrib = "glPopAttrib"() : Void
  fun push_client_attrib = "glPushClientAttrib"(mask : Bitfield) : Void
  fun pop_client_attrib = "glPopClientAttrib"() : Void
  fun render_mode = "glRenderMode"(mode : Enum) : Int
  fun get_error = "glGetError"() : Enum
  fun get_string = "glGetString"(name : Enum) : Ubyte*
  fun finish = "glFinish"() : Void
  fun flush = "glFlush"() : Void
  fun hint = "glHint"(target : Enum, mode : Enum) : Void
  fun clear_depth = "glClearDepth"(depth : Clampd) : Void
  fun depth_func = "glDepthFunc"(func : Enum) : Void
  fun depth_mask = "glDepthMask"(flag : Boolean) : Void
  fun depth_range = "glDepthRange"(near_val : Clampd, far_val : Clampd) : Void
  fun clear_accum = "glClearAccum"(red : Float, green : Float, blue : Float, alpha : Float) : Void
  fun accum = "glAccum"(op : Enum, value : Float) : Void
  fun matrix_mode = "glMatrixMode"(mode : Enum) : Void
  fun ortho = "glOrtho"(left : Double, right : Double, bottom : Double, top : Double, near_val : Double, far_val : Double) : Void
  fun frustum = "glFrustum"(left : Double, right : Double, bottom : Double, top : Double, near_val : Double, far_val : Double) : Void
  fun viewport = "glViewport"(x : Int, y : Int, width : Sizei, height : Sizei) : Void
  fun push_matrix = "glPushMatrix"() : Void
  fun pop_matrix = "glPopMatrix"() : Void
  fun load_identity = "glLoadIdentity"() : Void
  fun load_matrixd = "glLoadMatrixd"(m : Double*) : Void
  fun load_matrixf = "glLoadMatrixf"(m : Float*) : Void
  fun mult_matrixd = "glMultMatrixd"(m : Double*) : Void
  fun mult_matrixf = "glMultMatrixf"(m : Float*) : Void
  fun rotated = "glRotated"(angle : Double, x : Double, y : Double, z : Double) : Void
  fun rotatef = "glRotatef"(angle : Float, x : Float, y : Float, z : Float) : Void
  fun scaled = "glScaled"(x : Double, y : Double, z : Double) : Void
  fun scalef = "glScalef"(x : Float, y : Float, z : Float) : Void
  fun translated = "glTranslated"(x : Double, y : Double, z : Double) : Void
  fun translatef = "glTranslatef"(x : Float, y : Float, z : Float) : Void
  fun is_list = "glIsList"(list : Uint) : Boolean
  fun delete_lists = "glDeleteLists"(list : Uint, range : Sizei) : Void
  fun gen_lists = "glGenLists"(range : Sizei) : Uint
  fun new_list = "glNewList"(list : Uint, mode : Enum) : Void
  fun end_list = "glEndList"() : Void
  fun call_list = "glCallList"(list : Uint) : Void
  fun call_lists = "glCallLists"(n : Sizei, type : Enum, lists : Void*) : Void
  fun list_base = "glListBase"(base : Uint) : Void
  fun begin_ = "glBegin"(mode : Enum) : Void
  fun end_ = "glEnd"() : Void
  fun vertex2d = "glVertex2d"(x : Double, y : Double) : Void
  fun vertex2f = "glVertex2f"(x : Float, y : Float) : Void
  fun vertex2i = "glVertex2i"(x : Int, y : Int) : Void
  fun vertex2s = "glVertex2s"(x : Short, y : Short) : Void
  fun vertex3d = "glVertex3d"(x : Double, y : Double, z : Double) : Void
  fun vertex3f = "glVertex3f"(x : Float, y : Float, z : Float) : Void
  fun vertex3i = "glVertex3i"(x : Int, y : Int, z : Int) : Void
  fun vertex3s = "glVertex3s"(x : Short, y : Short, z : Short) : Void
  fun vertex4d = "glVertex4d"(x : Double, y : Double, z : Double, w : Double) : Void
  fun vertex4f = "glVertex4f"(x : Float, y : Float, z : Float, w : Float) : Void
  fun vertex4i = "glVertex4i"(x : Int, y : Int, z : Int, w : Int) : Void
  fun vertex4s = "glVertex4s"(x : Short, y : Short, z : Short, w : Short) : Void
  fun vertex2dv = "glVertex2dv"(v : Double*) : Void
  fun vertex2fv = "glVertex2fv"(v : Float*) : Void
  fun vertex2iv = "glVertex2iv"(v : Int*) : Void
  fun vertex2sv = "glVertex2sv"(v : Short*) : Void
  fun vertex3dv = "glVertex3dv"(v : Double*) : Void
  fun vertex3fv = "glVertex3fv"(v : Float*) : Void
  fun vertex3iv = "glVertex3iv"(v : Int*) : Void
  fun vertex3sv = "glVertex3sv"(v : Short*) : Void
  fun vertex4dv = "glVertex4dv"(v : Double*) : Void
  fun vertex4fv = "glVertex4fv"(v : Float*) : Void
  fun vertex4iv = "glVertex4iv"(v : Int*) : Void
  fun vertex4sv = "glVertex4sv"(v : Short*) : Void
  fun normal3b = "glNormal3b"(nx : Byte, ny : Byte, nz : Byte) : Void
  fun normal3d = "glNormal3d"(nx : Double, ny : Double, nz : Double) : Void
  fun normal3f = "glNormal3f"(nx : Float, ny : Float, nz : Float) : Void
  fun normal3i = "glNormal3i"(nx : Int, ny : Int, nz : Int) : Void
  fun normal3s = "glNormal3s"(nx : Short, ny : Short, nz : Short) : Void
  fun normal3bv = "glNormal3bv"(v : Byte*) : Void
  fun normal3dv = "glNormal3dv"(v : Double*) : Void
  fun normal3fv = "glNormal3fv"(v : Float*) : Void
  fun normal3iv = "glNormal3iv"(v : Int*) : Void
  fun normal3sv = "glNormal3sv"(v : Short*) : Void
  fun indexd = "glIndexd"(c : Double) : Void
  fun indexf = "glIndexf"(c : Float) : Void
  fun indexi = "glIndexi"(c : Int) : Void
  fun indexs = "glIndexs"(c : Short) : Void
  fun indexub = "glIndexub"(c : Ubyte) : Void
  fun indexdv = "glIndexdv"(c : Double*) : Void
  fun indexfv = "glIndexfv"(c : Float*) : Void
  fun indexiv = "glIndexiv"(c : Int*) : Void
  fun indexsv = "glIndexsv"(c : Short*) : Void
  fun indexubv = "glIndexubv"(c : Ubyte*) : Void
  fun color3b = "glColor3b"(red : Byte, green : Byte, blue : Byte) : Void
  fun color3d = "glColor3d"(red : Double, green : Double, blue : Double) : Void
  fun color3f = "glColor3f"(red : Float, green : Float, blue : Float) : Void
  fun color3i = "glColor3i"(red : Int, green : Int, blue : Int) : Void
  fun color3s = "glColor3s"(red : Short, green : Short, blue : Short) : Void
  fun color3ub = "glColor3ub"(red : Ubyte, green : Ubyte, blue : Ubyte) : Void
  fun color3ui = "glColor3ui"(red : Uint, green : Uint, blue : Uint) : Void
  fun color3us = "glColor3us"(red : Ushort, green : Ushort, blue : Ushort) : Void
  fun color4b = "glColor4b"(red : Byte, green : Byte, blue : Byte, alpha : Byte) : Void
  fun color4d = "glColor4d"(red : Double, green : Double, blue : Double, alpha : Double) : Void
  fun color4f = "glColor4f"(red : Float, green : Float, blue : Float, alpha : Float) : Void
  fun color4i = "glColor4i"(red : Int, green : Int, blue : Int, alpha : Int) : Void
  fun color4s = "glColor4s"(red : Short, green : Short, blue : Short, alpha : Short) : Void
  fun color4ub = "glColor4ub"(red : Ubyte, green : Ubyte, blue : Ubyte, alpha : Ubyte) : Void
  fun color4ui = "glColor4ui"(red : Uint, green : Uint, blue : Uint, alpha : Uint) : Void
  fun color4us = "glColor4us"(red : Ushort, green : Ushort, blue : Ushort, alpha : Ushort) : Void
  fun color3bv = "glColor3bv"(v : Byte*) : Void
  fun color3dv = "glColor3dv"(v : Double*) : Void
  fun color3fv = "glColor3fv"(v : Float*) : Void
  fun color3iv = "glColor3iv"(v : Int*) : Void
  fun color3sv = "glColor3sv"(v : Short*) : Void
  fun color3ubv = "glColor3ubv"(v : Ubyte*) : Void
  fun color3uiv = "glColor3uiv"(v : Uint*) : Void
  fun color3usv = "glColor3usv"(v : Ushort*) : Void
  fun color4bv = "glColor4bv"(v : Byte*) : Void
  fun color4dv = "glColor4dv"(v : Double*) : Void
  fun color4fv = "glColor4fv"(v : Float*) : Void
  fun color4iv = "glColor4iv"(v : Int*) : Void
  fun color4sv = "glColor4sv"(v : Short*) : Void
  fun color4ubv = "glColor4ubv"(v : Ubyte*) : Void
  fun color4uiv = "glColor4uiv"(v : Uint*) : Void
  fun color4usv = "glColor4usv"(v : Ushort*) : Void
  fun tex_coord1d = "glTexCoord1d"(s : Double) : Void
  fun tex_coord1f = "glTexCoord1f"(s : Float) : Void
  fun tex_coord1i = "glTexCoord1i"(s : Int) : Void
  fun tex_coord1s = "glTexCoord1s"(s : Short) : Void
  fun tex_coord2d = "glTexCoord2d"(s : Double, t : Double) : Void
  fun tex_coord2f = "glTexCoord2f"(s : Float, t : Float) : Void
  fun tex_coord2i = "glTexCoord2i"(s : Int, t : Int) : Void
  fun tex_coord2s = "glTexCoord2s"(s : Short, t : Short) : Void
  fun tex_coord3d = "glTexCoord3d"(s : Double, t : Double, r : Double) : Void
  fun tex_coord3f = "glTexCoord3f"(s : Float, t : Float, r : Float) : Void
  fun tex_coord3i = "glTexCoord3i"(s : Int, t : Int, r : Int) : Void
  fun tex_coord3s = "glTexCoord3s"(s : Short, t : Short, r : Short) : Void
  fun tex_coord4d = "glTexCoord4d"(s : Double, t : Double, r : Double, q : Double) : Void
  fun tex_coord4f = "glTexCoord4f"(s : Float, t : Float, r : Float, q : Float) : Void
  fun tex_coord4i = "glTexCoord4i"(s : Int, t : Int, r : Int, q : Int) : Void
  fun tex_coord4s = "glTexCoord4s"(s : Short, t : Short, r : Short, q : Short) : Void
  fun tex_coord1dv = "glTexCoord1dv"(v : Double*) : Void
  fun tex_coord1fv = "glTexCoord1fv"(v : Float*) : Void
  fun tex_coord1iv = "glTexCoord1iv"(v : Int*) : Void
  fun tex_coord1sv = "glTexCoord1sv"(v : Short*) : Void
  fun tex_coord2dv = "glTexCoord2dv"(v : Double*) : Void
  fun tex_coord2fv = "glTexCoord2fv"(v : Float*) : Void
  fun tex_coord2iv = "glTexCoord2iv"(v : Int*) : Void
  fun tex_coord2sv = "glTexCoord2sv"(v : Short*) : Void
  fun tex_coord3dv = "glTexCoord3dv"(v : Double*) : Void
  fun tex_coord3fv = "glTexCoord3fv"(v : Float*) : Void
  fun tex_coord3iv = "glTexCoord3iv"(v : Int*) : Void
  fun tex_coord3sv = "glTexCoord3sv"(v : Short*) : Void
  fun tex_coord4dv = "glTexCoord4dv"(v : Double*) : Void
  fun tex_coord4fv = "glTexCoord4fv"(v : Float*) : Void
  fun tex_coord4iv = "glTexCoord4iv"(v : Int*) : Void
  fun tex_coord4sv = "glTexCoord4sv"(v : Short*) : Void
  fun raster_pos2d = "glRasterPos2d"(x : Double, y : Double) : Void
  fun raster_pos2f = "glRasterPos2f"(x : Float, y : Float) : Void
  fun raster_pos2i = "glRasterPos2i"(x : Int, y : Int) : Void
  fun raster_pos2s = "glRasterPos2s"(x : Short, y : Short) : Void
  fun raster_pos3d = "glRasterPos3d"(x : Double, y : Double, z : Double) : Void
  fun raster_pos3f = "glRasterPos3f"(x : Float, y : Float, z : Float) : Void
  fun raster_pos3i = "glRasterPos3i"(x : Int, y : Int, z : Int) : Void
  fun raster_pos3s = "glRasterPos3s"(x : Short, y : Short, z : Short) : Void
  fun raster_pos4d = "glRasterPos4d"(x : Double, y : Double, z : Double, w : Double) : Void
  fun raster_pos4f = "glRasterPos4f"(x : Float, y : Float, z : Float, w : Float) : Void
  fun raster_pos4i = "glRasterPos4i"(x : Int, y : Int, z : Int, w : Int) : Void
  fun raster_pos4s = "glRasterPos4s"(x : Short, y : Short, z : Short, w : Short) : Void
  fun raster_pos2dv = "glRasterPos2dv"(v : Double*) : Void
  fun raster_pos2fv = "glRasterPos2fv"(v : Float*) : Void
  fun raster_pos2iv = "glRasterPos2iv"(v : Int*) : Void
  fun raster_pos2sv = "glRasterPos2sv"(v : Short*) : Void
  fun raster_pos3dv = "glRasterPos3dv"(v : Double*) : Void
  fun raster_pos3fv = "glRasterPos3fv"(v : Float*) : Void
  fun raster_pos3iv = "glRasterPos3iv"(v : Int*) : Void
  fun raster_pos3sv = "glRasterPos3sv"(v : Short*) : Void
  fun raster_pos4dv = "glRasterPos4dv"(v : Double*) : Void
  fun raster_pos4fv = "glRasterPos4fv"(v : Float*) : Void
  fun raster_pos4iv = "glRasterPos4iv"(v : Int*) : Void
  fun raster_pos4sv = "glRasterPos4sv"(v : Short*) : Void
  fun rectd = "glRectd"(x1 : Double, y1 : Double, x2 : Double, y2 : Double) : Void
  fun rectf = "glRectf"(x1 : Float, y1 : Float, x2 : Float, y2 : Float) : Void
  fun recti = "glRecti"(x1 : Int, y1 : Int, x2 : Int, y2 : Int) : Void
  fun rects = "glRects"(x1 : Short, y1 : Short, x2 : Short, y2 : Short) : Void
  fun rectdv = "glRectdv"(v1 : Double*, v2 : Double*) : Void
  fun rectfv = "glRectfv"(v1 : Float*, v2 : Float*) : Void
  fun rectiv = "glRectiv"(v1 : Int*, v2 : Int*) : Void
  fun rectsv = "glRectsv"(v1 : Short*, v2 : Short*) : Void
  fun vertex_pointer = "glVertexPointer"(size : Int, type : Enum, stride : Sizei, ptr : Void*) : Void
  fun normal_pointer = "glNormalPointer"(type : Enum, stride : Sizei, ptr : Void*) : Void
  fun color_pointer = "glColorPointer"(size : Int, type : Enum, stride : Sizei, ptr : Void*) : Void
  fun index_pointer = "glIndexPointer"(type : Enum, stride : Sizei, ptr : Void*) : Void
  fun tex_coord_pointer = "glTexCoordPointer"(size : Int, type : Enum, stride : Sizei, ptr : Void*) : Void
  fun edge_flag_pointer = "glEdgeFlagPointer"(stride : Sizei, ptr : Void*) : Void
  fun get_pointerv = "glGetPointerv"(pname : Enum, params : Void**) : Void
  fun array_element = "glArrayElement"(i : Int) : Void
  fun draw_arrays = "glDrawArrays"(mode : Enum, first : Int, count : Sizei) : Void
  fun draw_elements = "glDrawElements"(mode : Enum, count : Sizei, type : Enum, indices : Void*) : Void
  fun interleaved_arrays = "glInterleavedArrays"(format : Enum, stride : Sizei, pointer : Void*) : Void
  fun shade_model = "glShadeModel"(mode : Enum) : Void
  fun lightf = "glLightf"(light : Enum, pname : Enum, param : Float) : Void
  fun lighti = "glLighti"(light : Enum, pname : Enum, param : Int) : Void
  fun lightfv = "glLightfv"(light : Enum, pname : Enum, params : Float*) : Void
  fun lightiv = "glLightiv"(light : Enum, pname : Enum, params : Int*) : Void
  fun get_lightfv = "glGetLightfv"(light : Enum, pname : Enum, params : Float*) : Void
  fun get_lightiv = "glGetLightiv"(light : Enum, pname : Enum, params : Int*) : Void
  fun light_modelf = "glLightModelf"(pname : Enum, param : Float) : Void
  fun light_modeli = "glLightModeli"(pname : Enum, param : Int) : Void
  fun light_modelfv = "glLightModelfv"(pname : Enum, params : Float*) : Void
  fun light_modeliv = "glLightModeliv"(pname : Enum, params : Int*) : Void
  fun materialf = "glMaterialf"(face : Enum, pname : Enum, param : Float) : Void
  fun materiali = "glMateriali"(face : Enum, pname : Enum, param : Int) : Void
  fun materialfv = "glMaterialfv"(face : Enum, pname : Enum, params : Float*) : Void
  fun materialiv = "glMaterialiv"(face : Enum, pname : Enum, params : Int*) : Void
  fun get_materialfv = "glGetMaterialfv"(face : Enum, pname : Enum, params : Float*) : Void
  fun get_materialiv = "glGetMaterialiv"(face : Enum, pname : Enum, params : Int*) : Void
  fun color_material = "glColorMaterial"(face : Enum, mode : Enum) : Void
  fun pixel_zoom = "glPixelZoom"(xfactor : Float, yfactor : Float) : Void
  fun pixel_storef = "glPixelStoref"(pname : Enum, param : Float) : Void
  fun pixel_storei = "glPixelStorei"(pname : Enum, param : Int) : Void
  fun pixel_transferf = "glPixelTransferf"(pname : Enum, param : Float) : Void
  fun pixel_transferi = "glPixelTransferi"(pname : Enum, param : Int) : Void
  fun pixel_mapfv = "glPixelMapfv"(map : Enum, mapsize : Sizei, values : Float*) : Void
  fun pixel_mapuiv = "glPixelMapuiv"(map : Enum, mapsize : Sizei, values : Uint*) : Void
  fun pixel_mapusv = "glPixelMapusv"(map : Enum, mapsize : Sizei, values : Ushort*) : Void
  fun get_pixel_mapfv = "glGetPixelMapfv"(map : Enum, values : Float*) : Void
  fun get_pixel_mapuiv = "glGetPixelMapuiv"(map : Enum, values : Uint*) : Void
  fun get_pixel_mapusv = "glGetPixelMapusv"(map : Enum, values : Ushort*) : Void
  fun bitmap = "glBitmap"(width : Sizei, height : Sizei, xorig : Float, yorig : Float, xmove : Float, ymove : Float, bitmap : Ubyte*) : Void
  fun read_pixels = "glReadPixels"(x : Int, y : Int, width : Sizei, height : Sizei, format : Enum, type : Enum, pixels : Void*) : Void
  fun draw_pixels = "glDrawPixels"(width : Sizei, height : Sizei, format : Enum, type : Enum, pixels : Void*) : Void
  fun copy_pixels = "glCopyPixels"(x : Int, y : Int, width : Sizei, height : Sizei, type : Enum) : Void
  fun stencil_func = "glStencilFunc"(func : Enum, ref : Int, mask : Uint) : Void
  fun stencil_mask = "glStencilMask"(mask : Uint) : Void
  fun stencil_op = "glStencilOp"(fail : Enum, zfail : Enum, zpass : Enum) : Void
  fun clear_stencil = "glClearStencil"(s : Int) : Void
  fun tex_gend = "glTexGend"(coord : Enum, pname : Enum, param : Double) : Void
  fun tex_genf = "glTexGenf"(coord : Enum, pname : Enum, param : Float) : Void
  fun tex_geni = "glTexGeni"(coord : Enum, pname : Enum, param : Int) : Void
  fun tex_gendv = "glTexGendv"(coord : Enum, pname : Enum, params : Double*) : Void
  fun tex_genfv = "glTexGenfv"(coord : Enum, pname : Enum, params : Float*) : Void
  fun tex_geniv = "glTexGeniv"(coord : Enum, pname : Enum, params : Int*) : Void
  fun get_tex_gendv = "glGetTexGendv"(coord : Enum, pname : Enum, params : Double*) : Void
  fun get_tex_genfv = "glGetTexGenfv"(coord : Enum, pname : Enum, params : Float*) : Void
  fun get_tex_geniv = "glGetTexGeniv"(coord : Enum, pname : Enum, params : Int*) : Void
  fun tex_envf = "glTexEnvf"(target : Enum, pname : Enum, param : Float) : Void
  fun tex_envi = "glTexEnvi"(target : Enum, pname : Enum, param : Int) : Void
  fun tex_envfv = "glTexEnvfv"(target : Enum, pname : Enum, params : Float*) : Void
  fun tex_enviv = "glTexEnviv"(target : Enum, pname : Enum, params : Int*) : Void
  fun get_tex_envfv = "glGetTexEnvfv"(target : Enum, pname : Enum, params : Float*) : Void
  fun get_tex_enviv = "glGetTexEnviv"(target : Enum, pname : Enum, params : Int*) : Void
  fun tex_parameterf = "glTexParameterf"(target : Enum, pname : Enum, param : Float) : Void
  fun tex_parameteri = "glTexParameteri"(target : Enum, pname : Enum, param : Int) : Void
  fun tex_parameterfv = "glTexParameterfv"(target : Enum, pname : Enum, params : Float*) : Void
  fun tex_parameteriv = "glTexParameteriv"(target : Enum, pname : Enum, params : Int*) : Void
  fun get_tex_parameterfv = "glGetTexParameterfv"(target : Enum, pname : Enum, params : Float*) : Void
  fun get_tex_parameteriv = "glGetTexParameteriv"(target : Enum, pname : Enum, params : Int*) : Void
  fun get_tex_level_parameterfv = "glGetTexLevelParameterfv"(target : Enum, level : Int, pname : Enum, params : Float*) : Void
  fun get_tex_level_parameteriv = "glGetTexLevelParameteriv"(target : Enum, level : Int, pname : Enum, params : Int*) : Void
  fun tex_image1_d = "glTexImage1D"(target : Enum, level : Int, internal_format : Int, width : Sizei, border : Int, format : Enum, type : Enum, pixels : Void*) : Void
  fun tex_image2_d = "glTexImage2D"(target : Enum, level : Int, internal_format : Int, width : Sizei, height : Sizei, border : Int, format : Enum, type : Enum, pixels : Void*) : Void
  fun get_tex_image = "glGetTexImage"(target : Enum, level : Int, format : Enum, type : Enum, pixels : Void*) : Void
  fun gen_textures = "glGenTextures"(n : Sizei, textures : Uint*) : Void
  fun delete_textures = "glDeleteTextures"(n : Sizei, textures : Uint*) : Void
  fun bind_texture = "glBindTexture"(target : Enum, texture : Uint) : Void
  fun prioritize_textures = "glPrioritizeTextures"(n : Sizei, textures : Uint*, priorities : Clampf*) : Void
  fun are_textures_resident = "glAreTexturesResident"(n : Sizei, textures : Uint*, residences : Boolean*) : Boolean
  fun is_texture = "glIsTexture"(texture : Uint) : Boolean
  fun tex_sub_image1_d = "glTexSubImage1D"(target : Enum, level : Int, xoffset : Int, width : Sizei, format : Enum, type : Enum, pixels : Void*) : Void
  fun tex_sub_image2_d = "glTexSubImage2D"(target : Enum, level : Int, xoffset : Int, yoffset : Int, width : Sizei, height : Sizei, format : Enum, type : Enum, pixels : Void*) : Void
  fun copy_tex_image1_d = "glCopyTexImage1D"(target : Enum, level : Int, internalformat : Enum, x : Int, y : Int, width : Sizei, border : Int) : Void
  fun copy_tex_image2_d = "glCopyTexImage2D"(target : Enum, level : Int, internalformat : Enum, x : Int, y : Int, width : Sizei, height : Sizei, border : Int) : Void
  fun copy_tex_sub_image1_d = "glCopyTexSubImage1D"(target : Enum, level : Int, xoffset : Int, x : Int, y : Int, width : Sizei) : Void
  fun copy_tex_sub_image2_d = "glCopyTexSubImage2D"(target : Enum, level : Int, xoffset : Int, yoffset : Int, x : Int, y : Int, width : Sizei, height : Sizei) : Void
  fun map1d = "glMap1d"(target : Enum, u1 : Double, u2 : Double, stride : Int, order : Int, points : Double*) : Void
  fun map1f = "glMap1f"(target : Enum, u1 : Float, u2 : Float, stride : Int, order : Int, points : Float*) : Void
  fun map2d = "glMap2d"(target : Enum, u1 : Double, u2 : Double, ustride : Int, uorder : Int, v1 : Double, v2 : Double, vstride : Int, vorder : Int, points : Double*) : Void
  fun map2f = "glMap2f"(target : Enum, u1 : Float, u2 : Float, ustride : Int, uorder : Int, v1 : Float, v2 : Float, vstride : Int, vorder : Int, points : Float*) : Void
  fun get_mapdv = "glGetMapdv"(target : Enum, query : Enum, v : Double*) : Void
  fun get_mapfv = "glGetMapfv"(target : Enum, query : Enum, v : Float*) : Void
  fun get_mapiv = "glGetMapiv"(target : Enum, query : Enum, v : Int*) : Void
  fun eval_coord1d = "glEvalCoord1d"(u : Double) : Void
  fun eval_coord1f = "glEvalCoord1f"(u : Float) : Void
  fun eval_coord1dv = "glEvalCoord1dv"(u : Double*) : Void
  fun eval_coord1fv = "glEvalCoord1fv"(u : Float*) : Void
  fun eval_coord2d = "glEvalCoord2d"(u : Double, v : Double) : Void
  fun eval_coord2f = "glEvalCoord2f"(u : Float, v : Float) : Void
  fun eval_coord2dv = "glEvalCoord2dv"(u : Double*) : Void
  fun eval_coord2fv = "glEvalCoord2fv"(u : Float*) : Void
  fun map_grid1d = "glMapGrid1d"(un : Int, u1 : Double, u2 : Double) : Void
  fun map_grid1f = "glMapGrid1f"(un : Int, u1 : Float, u2 : Float) : Void
  fun map_grid2d = "glMapGrid2d"(un : Int, u1 : Double, u2 : Double, vn : Int, v1 : Double, v2 : Double) : Void
  fun map_grid2f = "glMapGrid2f"(un : Int, u1 : Float, u2 : Float, vn : Int, v1 : Float, v2 : Float) : Void
  fun eval_point1 = "glEvalPoint1"(i : Int) : Void
  fun eval_point2 = "glEvalPoint2"(i : Int, j : Int) : Void
  fun eval_mesh1 = "glEvalMesh1"(mode : Enum, i1 : Int, i2 : Int) : Void
  fun eval_mesh2 = "glEvalMesh2"(mode : Enum, i1 : Int, i2 : Int, j1 : Int, j2 : Int) : Void
  fun fogf = "glFogf"(pname : Enum, param : Float) : Void
  fun fogi = "glFogi"(pname : Enum, param : Int) : Void
  fun fogfv = "glFogfv"(pname : Enum, params : Float*) : Void
  fun fogiv = "glFogiv"(pname : Enum, params : Int*) : Void
  fun feedback_buffer = "glFeedbackBuffer"(size : Sizei, type : Enum, buffer : Float*) : Void
  fun pass_through = "glPassThrough"(token : Float) : Void
  fun select_buffer = "glSelectBuffer"(size : Sizei, buffer : Uint*) : Void
  fun init_names = "glInitNames"() : Void
  fun load_name = "glLoadName"(name : Uint) : Void
  fun push_name = "glPushName"(name : Uint) : Void
  fun pop_name = "glPopName"() : Void
  RESCALE_NORMAL = 0x803A_u32
  CLAMP_TO_EDGE = 0x812F_u32
  MAX_ELEMENTS_VERTICES = 0x80E8_u32
  MAX_ELEMENTS_INDICES = 0x80E9_u32
  BGR = 0x80E0_u32
  BGRA = 0x80E1_u32
  UNSIGNED_BYTE_3_3_2 = 0x8032_u32
  UNSIGNED_BYTE_2_3_3_REV = 0x8362_u32
  UNSIGNED_SHORT_5_6_5 = 0x8363_u32
  UNSIGNED_SHORT_5_6_5_REV = 0x8364_u32
  UNSIGNED_SHORT_4_4_4_4 = 0x8033_u32
  UNSIGNED_SHORT_4_4_4_4_REV = 0x8365_u32
  UNSIGNED_SHORT_5_5_5_1 = 0x8034_u32
  UNSIGNED_SHORT_1_5_5_5_REV = 0x8366_u32
  UNSIGNED_INT_8_8_8_8 = 0x8035_u32
  UNSIGNED_INT_8_8_8_8_REV = 0x8367_u32
  UNSIGNED_INT_10_10_10_2 = 0x8036_u32
  UNSIGNED_INT_2_10_10_10_REV = 0x8368_u32
  LIGHT_MODEL_COLOR_CONTROL = 0x81F8_u32
  SINGLE_COLOR = 0x81F9_u32
  SEPARATE_SPECULAR_COLOR = 0x81FA_u32
  TEXTURE_MIN_LOD = 0x813A_u32
  TEXTURE_MAX_LOD = 0x813B_u32
  TEXTURE_BASE_LEVEL = 0x813C_u32
  TEXTURE_MAX_LEVEL = 0x813D_u32
  SMOOTH_POINT_SIZE_RANGE = 0x0B12_u32
  SMOOTH_POINT_SIZE_GRANULARITY = 0x0B13_u32
  SMOOTH_LINE_WIDTH_RANGE = 0x0B22_u32
  SMOOTH_LINE_WIDTH_GRANULARITY = 0x0B23_u32
  ALIASED_POINT_SIZE_RANGE = 0x846D_u32
  ALIASED_LINE_WIDTH_RANGE = 0x846E_u32
  PACK_SKIP_IMAGES = 0x806B_u32
  PACK_IMAGE_HEIGHT = 0x806C_u32
  UNPACK_SKIP_IMAGES = 0x806D_u32
  UNPACK_IMAGE_HEIGHT = 0x806E_u32
  TEXTURE_3D = 0x806F_u32
  PROXY_TEXTURE_3D = 0x8070_u32
  TEXTURE_DEPTH = 0x8071_u32
  TEXTURE_WRAP_R = 0x8072_u32
  MAX_3D_TEXTURE_SIZE = 0x8073_u32
  TEXTURE_BINDING_3D = 0x806A_u32
  fun draw_range_elements = "glDrawRangeElements"(mode : Enum, start : Uint, end_ : Uint, count : Sizei, type : Enum, indices : Void*) : Void
  fun tex_image3_d = "glTexImage3D"(target : Enum, level : Int, internal_format : Int, width : Sizei, height : Sizei, depth : Sizei, border : Int, format : Enum, type : Enum, pixels : Void*) : Void
  fun tex_sub_image3_d = "glTexSubImage3D"(target : Enum, level : Int, xoffset : Int, yoffset : Int, zoffset : Int, width : Sizei, height : Sizei, depth : Sizei, format : Enum, type : Enum, pixels : Void*) : Void
  fun copy_tex_sub_image3_d = "glCopyTexSubImage3D"(target : Enum, level : Int, xoffset : Int, yoffset : Int, zoffset : Int, x : Int, y : Int, width : Sizei, height : Sizei) : Void
  alias PFNGLDRAWRANGEELEMENTSPROC = (Enum, Uint, Uint, Sizei, Enum, Void*) -> Void
  alias PFNGLTEXIMAGE3DPROC = (Enum, Int, Int, Sizei, Sizei, Sizei, Int, Enum, Enum, Void*) -> Void
  alias PFNGLTEXSUBIMAGE3DPROC = (Enum, Int, Int, Int, Int, Sizei, Sizei, Sizei, Enum, Enum, Void*) -> Void
  alias PFNGLCOPYTEXSUBIMAGE3DPROC = (Enum, Int, Int, Int, Int, Int, Int, Sizei, Sizei) -> Void
  CONSTANT_COLOR = 0x8001_u32
  ONE_MINUS_CONSTANT_COLOR = 0x8002_u32
  CONSTANT_ALPHA = 0x8003_u32
  ONE_MINUS_CONSTANT_ALPHA = 0x8004_u32
  COLOR_TABLE = 0x80D0_u32
  POST_CONVOLUTION_COLOR_TABLE = 0x80D1_u32
  POST_COLOR_MATRIX_COLOR_TABLE = 0x80D2_u32
  PROXY_COLOR_TABLE = 0x80D3_u32
  PROXY_POST_CONVOLUTION_COLOR_TABLE = 0x80D4_u32
  PROXY_POST_COLOR_MATRIX_COLOR_TABLE = 0x80D5_u32
  COLOR_TABLE_SCALE = 0x80D6_u32
  COLOR_TABLE_BIAS = 0x80D7_u32
  COLOR_TABLE_FORMAT = 0x80D8_u32
  COLOR_TABLE_WIDTH = 0x80D9_u32
  COLOR_TABLE_RED_SIZE = 0x80DA_u32
  COLOR_TABLE_GREEN_SIZE = 0x80DB_u32
  COLOR_TABLE_BLUE_SIZE = 0x80DC_u32
  COLOR_TABLE_ALPHA_SIZE = 0x80DD_u32
  COLOR_TABLE_LUMINANCE_SIZE = 0x80DE_u32
  COLOR_TABLE_INTENSITY_SIZE = 0x80DF_u32
  CONVOLUTION_1D = 0x8010_u32
  CONVOLUTION_2D = 0x8011_u32
  SEPARABLE_2D = 0x8012_u32
  CONVOLUTION_BORDER_MODE = 0x8013_u32
  CONVOLUTION_FILTER_SCALE = 0x8014_u32
  CONVOLUTION_FILTER_BIAS = 0x8015_u32
  REDUCE = 0x8016_u32
  CONVOLUTION_FORMAT = 0x8017_u32
  CONVOLUTION_WIDTH = 0x8018_u32
  CONVOLUTION_HEIGHT = 0x8019_u32
  MAX_CONVOLUTION_WIDTH = 0x801A_u32
  MAX_CONVOLUTION_HEIGHT = 0x801B_u32
  POST_CONVOLUTION_RED_SCALE = 0x801C_u32
  POST_CONVOLUTION_GREEN_SCALE = 0x801D_u32
  POST_CONVOLUTION_BLUE_SCALE = 0x801E_u32
  POST_CONVOLUTION_ALPHA_SCALE = 0x801F_u32
  POST_CONVOLUTION_RED_BIAS = 0x8020_u32
  POST_CONVOLUTION_GREEN_BIAS = 0x8021_u32
  POST_CONVOLUTION_BLUE_BIAS = 0x8022_u32
  POST_CONVOLUTION_ALPHA_BIAS = 0x8023_u32
  CONSTANT_BORDER = 0x8151_u32
  REPLICATE_BORDER = 0x8153_u32
  CONVOLUTION_BORDER_COLOR = 0x8154_u32
  COLOR_MATRIX = 0x80B1_u32
  COLOR_MATRIX_STACK_DEPTH = 0x80B2_u32
  MAX_COLOR_MATRIX_STACK_DEPTH = 0x80B3_u32
  POST_COLOR_MATRIX_RED_SCALE = 0x80B4_u32
  POST_COLOR_MATRIX_GREEN_SCALE = 0x80B5_u32
  POST_COLOR_MATRIX_BLUE_SCALE = 0x80B6_u32
  POST_COLOR_MATRIX_ALPHA_SCALE = 0x80B7_u32
  POST_COLOR_MATRIX_RED_BIAS = 0x80B8_u32
  POST_COLOR_MATRIX_GREEN_BIAS = 0x80B9_u32
  POST_COLOR_MATRIX_BLUE_BIAS = 0x80BA_u32
  POST_COLOR_MATRIX_ALPHA_BIAS = 0x80BB_u32
  HISTOGRAM = 0x8024_u32
  PROXY_HISTOGRAM = 0x8025_u32
  HISTOGRAM_WIDTH = 0x8026_u32
  HISTOGRAM_FORMAT = 0x8027_u32
  HISTOGRAM_RED_SIZE = 0x8028_u32
  HISTOGRAM_GREEN_SIZE = 0x8029_u32
  HISTOGRAM_BLUE_SIZE = 0x802A_u32
  HISTOGRAM_ALPHA_SIZE = 0x802B_u32
  HISTOGRAM_LUMINANCE_SIZE = 0x802C_u32
  HISTOGRAM_SINK = 0x802D_u32
  MINMAX = 0x802E_u32
  MINMAX_FORMAT = 0x802F_u32
  MINMAX_SINK = 0x8030_u32
  TABLE_TOO_LARGE = 0x8031_u32
  BLEND_EQUATION = 0x8009_u32
  MIN = 0x8007_u32
  MAX = 0x8008_u32
  FUNC_ADD = 0x8006_u32
  FUNC_SUBTRACT = 0x800A_u32
  FUNC_REVERSE_SUBTRACT = 0x800B_u32
  BLEND_COLOR = 0x8005_u32
  fun color_table = "glColorTable"(target : Enum, internalformat : Enum, width : Sizei, format : Enum, type : Enum, table : Void*) : Void
  fun color_sub_table = "glColorSubTable"(target : Enum, start : Sizei, count : Sizei, format : Enum, type : Enum, data : Void*) : Void
  fun color_table_parameteriv = "glColorTableParameteriv"(target : Enum, pname : Enum, params : Int*) : Void
  fun color_table_parameterfv = "glColorTableParameterfv"(target : Enum, pname : Enum, params : Float*) : Void
  fun copy_color_sub_table = "glCopyColorSubTable"(target : Enum, start : Sizei, x : Int, y : Int, width : Sizei) : Void
  fun copy_color_table = "glCopyColorTable"(target : Enum, internalformat : Enum, x : Int, y : Int, width : Sizei) : Void
  fun get_color_table = "glGetColorTable"(target : Enum, format : Enum, type : Enum, table : Void*) : Void
  fun get_color_table_parameterfv = "glGetColorTableParameterfv"(target : Enum, pname : Enum, params : Float*) : Void
  fun get_color_table_parameteriv = "glGetColorTableParameteriv"(target : Enum, pname : Enum, params : Int*) : Void
  fun blend_equation = "glBlendEquation"(mode : Enum) : Void
  fun blend_color = "glBlendColor"(red : Clampf, green : Clampf, blue : Clampf, alpha : Clampf) : Void
  fun histogram = "glHistogram"(target : Enum, width : Sizei, internalformat : Enum, sink : Boolean) : Void
  fun reset_histogram = "glResetHistogram"(target : Enum) : Void
  fun get_histogram = "glGetHistogram"(target : Enum, reset : Boolean, format : Enum, type : Enum, values : Void*) : Void
  fun get_histogram_parameterfv = "glGetHistogramParameterfv"(target : Enum, pname : Enum, params : Float*) : Void
  fun get_histogram_parameteriv = "glGetHistogramParameteriv"(target : Enum, pname : Enum, params : Int*) : Void
  fun minmax = "glMinmax"(target : Enum, internalformat : Enum, sink : Boolean) : Void
  fun reset_minmax = "glResetMinmax"(target : Enum) : Void
  fun get_minmax = "glGetMinmax"(target : Enum, reset : Boolean, format : Enum, types : Enum, values : Void*) : Void
  fun get_minmax_parameterfv = "glGetMinmaxParameterfv"(target : Enum, pname : Enum, params : Float*) : Void
  fun get_minmax_parameteriv = "glGetMinmaxParameteriv"(target : Enum, pname : Enum, params : Int*) : Void
  fun convolution_filter1_d = "glConvolutionFilter1D"(target : Enum, internalformat : Enum, width : Sizei, format : Enum, type : Enum, image : Void*) : Void
  fun convolution_filter2_d = "glConvolutionFilter2D"(target : Enum, internalformat : Enum, width : Sizei, height : Sizei, format : Enum, type : Enum, image : Void*) : Void
  fun convolution_parameterf = "glConvolutionParameterf"(target : Enum, pname : Enum, params : Float) : Void
  fun convolution_parameterfv = "glConvolutionParameterfv"(target : Enum, pname : Enum, params : Float*) : Void
  fun convolution_parameteri = "glConvolutionParameteri"(target : Enum, pname : Enum, params : Int) : Void
  fun convolution_parameteriv = "glConvolutionParameteriv"(target : Enum, pname : Enum, params : Int*) : Void
  fun copy_convolution_filter1_d = "glCopyConvolutionFilter1D"(target : Enum, internalformat : Enum, x : Int, y : Int, width : Sizei) : Void
  fun copy_convolution_filter2_d = "glCopyConvolutionFilter2D"(target : Enum, internalformat : Enum, x : Int, y : Int, width : Sizei, height : Sizei) : Void
  fun get_convolution_filter = "glGetConvolutionFilter"(target : Enum, format : Enum, type : Enum, image : Void*) : Void
  fun get_convolution_parameterfv = "glGetConvolutionParameterfv"(target : Enum, pname : Enum, params : Float*) : Void
  fun get_convolution_parameteriv = "glGetConvolutionParameteriv"(target : Enum, pname : Enum, params : Int*) : Void
  fun separable_filter2_d = "glSeparableFilter2D"(target : Enum, internalformat : Enum, width : Sizei, height : Sizei, format : Enum, type : Enum, row : Void*, column : Void*) : Void
  fun get_separable_filter = "glGetSeparableFilter"(target : Enum, format : Enum, type : Enum, row : Void*, column : Void*, span : Void*) : Void
  TEXTURE0 = 0x84C0_u32
  TEXTURE1 = 0x84C1_u32
  TEXTURE2 = 0x84C2_u32
  TEXTURE3 = 0x84C3_u32
  TEXTURE4 = 0x84C4_u32
  TEXTURE5 = 0x84C5_u32
  TEXTURE6 = 0x84C6_u32
  TEXTURE7 = 0x84C7_u32
  TEXTURE8 = 0x84C8_u32
  TEXTURE9 = 0x84C9_u32
  TEXTURE10 = 0x84CA_u32
  TEXTURE11 = 0x84CB_u32
  TEXTURE12 = 0x84CC_u32
  TEXTURE13 = 0x84CD_u32
  TEXTURE14 = 0x84CE_u32
  TEXTURE15 = 0x84CF_u32
  TEXTURE16 = 0x84D0_u32
  TEXTURE17 = 0x84D1_u32
  TEXTURE18 = 0x84D2_u32
  TEXTURE19 = 0x84D3_u32
  TEXTURE20 = 0x84D4_u32
  TEXTURE21 = 0x84D5_u32
  TEXTURE22 = 0x84D6_u32
  TEXTURE23 = 0x84D7_u32
  TEXTURE24 = 0x84D8_u32
  TEXTURE25 = 0x84D9_u32
  TEXTURE26 = 0x84DA_u32
  TEXTURE27 = 0x84DB_u32
  TEXTURE28 = 0x84DC_u32
  TEXTURE29 = 0x84DD_u32
  TEXTURE30 = 0x84DE_u32
  TEXTURE31 = 0x84DF_u32
  ACTIVE_TEXTURE = 0x84E0_u32
  CLIENT_ACTIVE_TEXTURE = 0x84E1_u32
  MAX_TEXTURE_UNITS = 0x84E2_u32
  NORMAL_MAP = 0x8511_u32
  REFLECTION_MAP = 0x8512_u32
  TEXTURE_CUBE_MAP = 0x8513_u32
  TEXTURE_BINDING_CUBE_MAP = 0x8514_u32
  TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515_u32
  TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516_u32
  TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517_u32
  TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518_u32
  TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519_u32
  TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851A_u32
  PROXY_TEXTURE_CUBE_MAP = 0x851B_u32
  MAX_CUBE_MAP_TEXTURE_SIZE = 0x851C_u32
  COMPRESSED_ALPHA = 0x84E9_u32
  COMPRESSED_LUMINANCE = 0x84EA_u32
  COMPRESSED_LUMINANCE_ALPHA = 0x84EB_u32
  COMPRESSED_INTENSITY = 0x84EC_u32
  COMPRESSED_RGB = 0x84ED_u32
  COMPRESSED_RGBA = 0x84EE_u32
  TEXTURE_COMPRESSION_HINT = 0x84EF_u32
  TEXTURE_COMPRESSED_IMAGE_SIZE = 0x86A0_u32
  TEXTURE_COMPRESSED = 0x86A1_u32
  NUM_COMPRESSED_TEXTURE_FORMATS = 0x86A2_u32
  COMPRESSED_TEXTURE_FORMATS = 0x86A3_u32
  MULTISAMPLE = 0x809D_u32
  SAMPLE_ALPHA_TO_COVERAGE = 0x809E_u32
  SAMPLE_ALPHA_TO_ONE = 0x809F_u32
  SAMPLE_COVERAGE = 0x80A0_u32
  SAMPLE_BUFFERS = 0x80A8_u32
  SAMPLES = 0x80A9_u32
  SAMPLE_COVERAGE_VALUE = 0x80AA_u32
  SAMPLE_COVERAGE_INVERT = 0x80AB_u32
  MULTISAMPLE_BIT = 0x20000000_u32
  TRANSPOSE_MODELVIEW_MATRIX = 0x84E3_u32
  TRANSPOSE_PROJECTION_MATRIX = 0x84E4_u32
  TRANSPOSE_TEXTURE_MATRIX = 0x84E5_u32
  TRANSPOSE_COLOR_MATRIX = 0x84E6_u32
  COMBINE = 0x8570_u32
  COMBINE_RGB = 0x8571_u32
  COMBINE_ALPHA = 0x8572_u32
  SOURCE0_RGB = 0x8580_u32
  SOURCE1_RGB = 0x8581_u32
  SOURCE2_RGB = 0x8582_u32
  SOURCE0_ALPHA = 0x8588_u32
  SOURCE1_ALPHA = 0x8589_u32
  SOURCE2_ALPHA = 0x858A_u32
  OPERAND0_RGB = 0x8590_u32
  OPERAND1_RGB = 0x8591_u32
  OPERAND2_RGB = 0x8592_u32
  OPERAND0_ALPHA = 0x8598_u32
  OPERAND1_ALPHA = 0x8599_u32
  OPERAND2_ALPHA = 0x859A_u32
  RGB_SCALE = 0x8573_u32
  ADD_SIGNED = 0x8574_u32
  INTERPOLATE = 0x8575_u32
  SUBTRACT = 0x84E7_u32
  CONSTANT = 0x8576_u32
  PRIMARY_COLOR = 0x8577_u32
  PREVIOUS = 0x8578_u32
  DOT3_RGB = 0x86AE_u32
  DOT3_RGBA = 0x86AF_u32
  CLAMP_TO_BORDER = 0x812D_u32
  fun active_texture = "glActiveTexture"(texture : Enum) : Void
  fun client_active_texture = "glClientActiveTexture"(texture : Enum) : Void
  fun compressed_tex_image1_d = "glCompressedTexImage1D"(target : Enum, level : Int, internalformat : Enum, width : Sizei, border : Int, image_size : Sizei, data : Void*) : Void
  fun compressed_tex_image2_d = "glCompressedTexImage2D"(target : Enum, level : Int, internalformat : Enum, width : Sizei, height : Sizei, border : Int, image_size : Sizei, data : Void*) : Void
  fun compressed_tex_image3_d = "glCompressedTexImage3D"(target : Enum, level : Int, internalformat : Enum, width : Sizei, height : Sizei, depth : Sizei, border : Int, image_size : Sizei, data : Void*) : Void
  fun compressed_tex_sub_image1_d = "glCompressedTexSubImage1D"(target : Enum, level : Int, xoffset : Int, width : Sizei, format : Enum, image_size : Sizei, data : Void*) : Void
  fun compressed_tex_sub_image2_d = "glCompressedTexSubImage2D"(target : Enum, level : Int, xoffset : Int, yoffset : Int, width : Sizei, height : Sizei, format : Enum, image_size : Sizei, data : Void*) : Void
  fun compressed_tex_sub_image3_d = "glCompressedTexSubImage3D"(target : Enum, level : Int, xoffset : Int, yoffset : Int, zoffset : Int, width : Sizei, height : Sizei, depth : Sizei, format : Enum, image_size : Sizei, data : Void*) : Void
  fun get_compressed_tex_image = "glGetCompressedTexImage"(target : Enum, lod : Int, img : Void*) : Void
  fun multi_tex_coord1d = "glMultiTexCoord1d"(target : Enum, s : Double) : Void
  fun multi_tex_coord1dv = "glMultiTexCoord1dv"(target : Enum, v : Double*) : Void
  fun multi_tex_coord1f = "glMultiTexCoord1f"(target : Enum, s : Float) : Void
  fun multi_tex_coord1fv = "glMultiTexCoord1fv"(target : Enum, v : Float*) : Void
  fun multi_tex_coord1i = "glMultiTexCoord1i"(target : Enum, s : Int) : Void
  fun multi_tex_coord1iv = "glMultiTexCoord1iv"(target : Enum, v : Int*) : Void
  fun multi_tex_coord1s = "glMultiTexCoord1s"(target : Enum, s : Short) : Void
  fun multi_tex_coord1sv = "glMultiTexCoord1sv"(target : Enum, v : Short*) : Void
  fun multi_tex_coord2d = "glMultiTexCoord2d"(target : Enum, s : Double, t : Double) : Void
  fun multi_tex_coord2dv = "glMultiTexCoord2dv"(target : Enum, v : Double*) : Void
  fun multi_tex_coord2f = "glMultiTexCoord2f"(target : Enum, s : Float, t : Float) : Void
  fun multi_tex_coord2fv = "glMultiTexCoord2fv"(target : Enum, v : Float*) : Void
  fun multi_tex_coord2i = "glMultiTexCoord2i"(target : Enum, s : Int, t : Int) : Void
  fun multi_tex_coord2iv = "glMultiTexCoord2iv"(target : Enum, v : Int*) : Void
  fun multi_tex_coord2s = "glMultiTexCoord2s"(target : Enum, s : Short, t : Short) : Void
  fun multi_tex_coord2sv = "glMultiTexCoord2sv"(target : Enum, v : Short*) : Void
  fun multi_tex_coord3d = "glMultiTexCoord3d"(target : Enum, s : Double, t : Double, r : Double) : Void
  fun multi_tex_coord3dv = "glMultiTexCoord3dv"(target : Enum, v : Double*) : Void
  fun multi_tex_coord3f = "glMultiTexCoord3f"(target : Enum, s : Float, t : Float, r : Float) : Void
  fun multi_tex_coord3fv = "glMultiTexCoord3fv"(target : Enum, v : Float*) : Void
  fun multi_tex_coord3i = "glMultiTexCoord3i"(target : Enum, s : Int, t : Int, r : Int) : Void
  fun multi_tex_coord3iv = "glMultiTexCoord3iv"(target : Enum, v : Int*) : Void
  fun multi_tex_coord3s = "glMultiTexCoord3s"(target : Enum, s : Short, t : Short, r : Short) : Void
  fun multi_tex_coord3sv = "glMultiTexCoord3sv"(target : Enum, v : Short*) : Void
  fun multi_tex_coord4d = "glMultiTexCoord4d"(target : Enum, s : Double, t : Double, r : Double, q : Double) : Void
  fun multi_tex_coord4dv = "glMultiTexCoord4dv"(target : Enum, v : Double*) : Void
  fun multi_tex_coord4f = "glMultiTexCoord4f"(target : Enum, s : Float, t : Float, r : Float, q : Float) : Void
  fun multi_tex_coord4fv = "glMultiTexCoord4fv"(target : Enum, v : Float*) : Void
  fun multi_tex_coord4i = "glMultiTexCoord4i"(target : Enum, s : Int, t : Int, r : Int, q : Int) : Void
  fun multi_tex_coord4iv = "glMultiTexCoord4iv"(target : Enum, v : Int*) : Void
  fun multi_tex_coord4s = "glMultiTexCoord4s"(target : Enum, s : Short, t : Short, r : Short, q : Short) : Void
  fun multi_tex_coord4sv = "glMultiTexCoord4sv"(target : Enum, v : Short*) : Void
  fun load_transpose_matrixd = "glLoadTransposeMatrixd"(m : Double[16]) : Void
  fun load_transpose_matrixf = "glLoadTransposeMatrixf"(m : Float[16]) : Void
  fun mult_transpose_matrixd = "glMultTransposeMatrixd"(m : Double[16]) : Void
  fun mult_transpose_matrixf = "glMultTransposeMatrixf"(m : Float[16]) : Void
  fun sample_coverage = "glSampleCoverage"(value : Clampf, invert : Boolean) : Void
  alias PFNGLACTIVETEXTUREPROC = Enum -> Void
  alias PFNGLSAMPLECOVERAGEPROC = (Clampf, Boolean) -> Void
  alias PFNGLCOMPRESSEDTEXIMAGE3DPROC = (Enum, Int, Enum, Sizei, Sizei, Sizei, Int, Sizei, Void*) -> Void
  alias PFNGLCOMPRESSEDTEXIMAGE2DPROC = (Enum, Int, Enum, Sizei, Sizei, Int, Sizei, Void*) -> Void
  alias PFNGLCOMPRESSEDTEXIMAGE1DPROC = (Enum, Int, Enum, Sizei, Int, Sizei, Void*) -> Void
  alias PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC = (Enum, Int, Int, Int, Int, Sizei, Sizei, Sizei, Enum, Sizei, Void*) -> Void
  alias PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC = (Enum, Int, Int, Int, Sizei, Sizei, Enum, Sizei, Void*) -> Void
  alias PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC = (Enum, Int, Int, Sizei, Enum, Sizei, Void*) -> Void
  alias PFNGLGETCOMPRESSEDTEXIMAGEPROC = (Enum, Int, Void*) -> Void
  ARB_MULTITEXTURE = 1
  TEXTURE0_ARB = 0x84C0_u32
  TEXTURE1_ARB = 0x84C1_u32
  TEXTURE2_ARB = 0x84C2_u32
  TEXTURE3_ARB = 0x84C3_u32
  TEXTURE4_ARB = 0x84C4_u32
  TEXTURE5_ARB = 0x84C5_u32
  TEXTURE6_ARB = 0x84C6_u32
  TEXTURE7_ARB = 0x84C7_u32
  TEXTURE8_ARB = 0x84C8_u32
  TEXTURE9_ARB = 0x84C9_u32
  TEXTURE10_ARB = 0x84CA_u32
  TEXTURE11_ARB = 0x84CB_u32
  TEXTURE12_ARB = 0x84CC_u32
  TEXTURE13_ARB = 0x84CD_u32
  TEXTURE14_ARB = 0x84CE_u32
  TEXTURE15_ARB = 0x84CF_u32
  TEXTURE16_ARB = 0x84D0_u32
  TEXTURE17_ARB = 0x84D1_u32
  TEXTURE18_ARB = 0x84D2_u32
  TEXTURE19_ARB = 0x84D3_u32
  TEXTURE20_ARB = 0x84D4_u32
  TEXTURE21_ARB = 0x84D5_u32
  TEXTURE22_ARB = 0x84D6_u32
  TEXTURE23_ARB = 0x84D7_u32
  TEXTURE24_ARB = 0x84D8_u32
  TEXTURE25_ARB = 0x84D9_u32
  TEXTURE26_ARB = 0x84DA_u32
  TEXTURE27_ARB = 0x84DB_u32
  TEXTURE28_ARB = 0x84DC_u32
  TEXTURE29_ARB = 0x84DD_u32
  TEXTURE30_ARB = 0x84DE_u32
  TEXTURE31_ARB = 0x84DF_u32
  ACTIVE_TEXTURE_ARB = 0x84E0_u32
  CLIENT_ACTIVE_TEXTURE_ARB = 0x84E1_u32
  MAX_TEXTURE_UNITS_ARB = 0x84E2_u32
  fun active_texture_arb = "glActiveTextureARB"(texture : Enum) : Void
  fun client_active_texture_arb = "glClientActiveTextureARB"(texture : Enum) : Void
  fun multi_tex_coord1d_arb = "glMultiTexCoord1dARB"(target : Enum, s : Double) : Void
  fun multi_tex_coord1dv_arb = "glMultiTexCoord1dvARB"(target : Enum, v : Double*) : Void
  fun multi_tex_coord1f_arb = "glMultiTexCoord1fARB"(target : Enum, s : Float) : Void
  fun multi_tex_coord1fv_arb = "glMultiTexCoord1fvARB"(target : Enum, v : Float*) : Void
  fun multi_tex_coord1i_arb = "glMultiTexCoord1iARB"(target : Enum, s : Int) : Void
  fun multi_tex_coord1iv_arb = "glMultiTexCoord1ivARB"(target : Enum, v : Int*) : Void
  fun multi_tex_coord1s_arb = "glMultiTexCoord1sARB"(target : Enum, s : Short) : Void
  fun multi_tex_coord1sv_arb = "glMultiTexCoord1svARB"(target : Enum, v : Short*) : Void
  fun multi_tex_coord2d_arb = "glMultiTexCoord2dARB"(target : Enum, s : Double, t : Double) : Void
  fun multi_tex_coord2dv_arb = "glMultiTexCoord2dvARB"(target : Enum, v : Double*) : Void
  fun multi_tex_coord2f_arb = "glMultiTexCoord2fARB"(target : Enum, s : Float, t : Float) : Void
  fun multi_tex_coord2fv_arb = "glMultiTexCoord2fvARB"(target : Enum, v : Float*) : Void
  fun multi_tex_coord2i_arb = "glMultiTexCoord2iARB"(target : Enum, s : Int, t : Int) : Void
  fun multi_tex_coord2iv_arb = "glMultiTexCoord2ivARB"(target : Enum, v : Int*) : Void
  fun multi_tex_coord2s_arb = "glMultiTexCoord2sARB"(target : Enum, s : Short, t : Short) : Void
  fun multi_tex_coord2sv_arb = "glMultiTexCoord2svARB"(target : Enum, v : Short*) : Void
  fun multi_tex_coord3d_arb = "glMultiTexCoord3dARB"(target : Enum, s : Double, t : Double, r : Double) : Void
  fun multi_tex_coord3dv_arb = "glMultiTexCoord3dvARB"(target : Enum, v : Double*) : Void
  fun multi_tex_coord3f_arb = "glMultiTexCoord3fARB"(target : Enum, s : Float, t : Float, r : Float) : Void
  fun multi_tex_coord3fv_arb = "glMultiTexCoord3fvARB"(target : Enum, v : Float*) : Void
  fun multi_tex_coord3i_arb = "glMultiTexCoord3iARB"(target : Enum, s : Int, t : Int, r : Int) : Void
  fun multi_tex_coord3iv_arb = "glMultiTexCoord3ivARB"(target : Enum, v : Int*) : Void
  fun multi_tex_coord3s_arb = "glMultiTexCoord3sARB"(target : Enum, s : Short, t : Short, r : Short) : Void
  fun multi_tex_coord3sv_arb = "glMultiTexCoord3svARB"(target : Enum, v : Short*) : Void
  fun multi_tex_coord4d_arb = "glMultiTexCoord4dARB"(target : Enum, s : Double, t : Double, r : Double, q : Double) : Void
  fun multi_tex_coord4dv_arb = "glMultiTexCoord4dvARB"(target : Enum, v : Double*) : Void
  fun multi_tex_coord4f_arb = "glMultiTexCoord4fARB"(target : Enum, s : Float, t : Float, r : Float, q : Float) : Void
  fun multi_tex_coord4fv_arb = "glMultiTexCoord4fvARB"(target : Enum, v : Float*) : Void
  fun multi_tex_coord4i_arb = "glMultiTexCoord4iARB"(target : Enum, s : Int, t : Int, r : Int, q : Int) : Void
  fun multi_tex_coord4iv_arb = "glMultiTexCoord4ivARB"(target : Enum, v : Int*) : Void
  fun multi_tex_coord4s_arb = "glMultiTexCoord4sARB"(target : Enum, s : Short, t : Short, r : Short, q : Short) : Void
  fun multi_tex_coord4sv_arb = "glMultiTexCoord4svARB"(target : Enum, v : Short*) : Void
  alias PFNGLACTIVETEXTUREARBPROC = Enum -> Void
  alias PFNGLCLIENTACTIVETEXTUREARBPROC = Enum -> Void
  alias PFNGLMULTITEXCOORD1DARBPROC = (Enum, Double) -> Void
  alias PFNGLMULTITEXCOORD1DVARBPROC = (Enum, Double*) -> Void
  alias PFNGLMULTITEXCOORD1FARBPROC = (Enum, Float) -> Void
  alias PFNGLMULTITEXCOORD1FVARBPROC = (Enum, Float*) -> Void
  alias PFNGLMULTITEXCOORD1IARBPROC = (Enum, Int) -> Void
  alias PFNGLMULTITEXCOORD1IVARBPROC = (Enum, Int*) -> Void
  alias PFNGLMULTITEXCOORD1SARBPROC = (Enum, Short) -> Void
  alias PFNGLMULTITEXCOORD1SVARBPROC = (Enum, Short*) -> Void
  alias PFNGLMULTITEXCOORD2DARBPROC = (Enum, Double, Double) -> Void
  alias PFNGLMULTITEXCOORD2DVARBPROC = (Enum, Double*) -> Void
  alias PFNGLMULTITEXCOORD2FARBPROC = (Enum, Float, Float) -> Void
  alias PFNGLMULTITEXCOORD2FVARBPROC = (Enum, Float*) -> Void
  alias PFNGLMULTITEXCOORD2IARBPROC = (Enum, Int, Int) -> Void
  alias PFNGLMULTITEXCOORD2IVARBPROC = (Enum, Int*) -> Void
  alias PFNGLMULTITEXCOORD2SARBPROC = (Enum, Short, Short) -> Void
  alias PFNGLMULTITEXCOORD2SVARBPROC = (Enum, Short*) -> Void
  alias PFNGLMULTITEXCOORD3DARBPROC = (Enum, Double, Double, Double) -> Void
  alias PFNGLMULTITEXCOORD3DVARBPROC = (Enum, Double*) -> Void
  alias PFNGLMULTITEXCOORD3FARBPROC = (Enum, Float, Float, Float) -> Void
  alias PFNGLMULTITEXCOORD3FVARBPROC = (Enum, Float*) -> Void
  alias PFNGLMULTITEXCOORD3IARBPROC = (Enum, Int, Int, Int) -> Void
  alias PFNGLMULTITEXCOORD3IVARBPROC = (Enum, Int*) -> Void
  alias PFNGLMULTITEXCOORD3SARBPROC = (Enum, Short, Short, Short) -> Void
  alias PFNGLMULTITEXCOORD3SVARBPROC = (Enum, Short*) -> Void
  alias PFNGLMULTITEXCOORD4DARBPROC = (Enum, Double, Double, Double, Double) -> Void
  alias PFNGLMULTITEXCOORD4DVARBPROC = (Enum, Double*) -> Void
  alias PFNGLMULTITEXCOORD4FARBPROC = (Enum, Float, Float, Float, Float) -> Void
  alias PFNGLMULTITEXCOORD4FVARBPROC = (Enum, Float*) -> Void
  alias PFNGLMULTITEXCOORD4IARBPROC = (Enum, Int, Int, Int, Int) -> Void
  alias PFNGLMULTITEXCOORD4IVARBPROC = (Enum, Int*) -> Void
  alias PFNGLMULTITEXCOORD4SARBPROC = (Enum, Short, Short, Short, Short) -> Void
  alias PFNGLMULTITEXCOORD4SVARBPROC = (Enum, Short*) -> Void
  GLEXT_H = 1
  GLEXT_VERSION = 20140810
  VERSION_1_4 = 1
  BLEND_DST_RGB = 0x80C8_u32
  BLEND_SRC_RGB = 0x80C9_u32
  BLEND_DST_ALPHA = 0x80CA_u32
  BLEND_SRC_ALPHA = 0x80CB_u32
  POINT_FADE_THRESHOLD_SIZE = 0x8128_u32
  DEPTH_COMPONENT16 = 0x81A5_u32
  DEPTH_COMPONENT24 = 0x81A6_u32
  DEPTH_COMPONENT32 = 0x81A7_u32
  MIRRORED_REPEAT = 0x8370_u32
  MAX_TEXTURE_LOD_BIAS = 0x84FD_u32
  TEXTURE_LOD_BIAS = 0x8501_u32
  INCR_WRAP = 0x8507_u32
  DECR_WRAP = 0x8508_u32
  TEXTURE_DEPTH_SIZE = 0x884A_u32
  TEXTURE_COMPARE_MODE = 0x884C_u32
  TEXTURE_COMPARE_FUNC = 0x884D_u32
  POINT_SIZE_MIN = 0x8126_u32
  POINT_SIZE_MAX = 0x8127_u32
  POINT_DISTANCE_ATTENUATION = 0x8129_u32
  GENERATE_MIPMAP = 0x8191_u32
  GENERATE_MIPMAP_HINT = 0x8192_u32
  FOG_COORDINATE_SOURCE = 0x8450_u32
  FOG_COORDINATE = 0x8451_u32
  FRAGMENT_DEPTH = 0x8452_u32
  CURRENT_FOG_COORDINATE = 0x8453_u32
  FOG_COORDINATE_ARRAY_TYPE = 0x8454_u32
  FOG_COORDINATE_ARRAY_STRIDE = 0x8455_u32
  FOG_COORDINATE_ARRAY_POINTER = 0x8456_u32
  FOG_COORDINATE_ARRAY = 0x8457_u32
  COLOR_SUM = 0x8458_u32
  CURRENT_SECONDARY_COLOR = 0x8459_u32
  SECONDARY_COLOR_ARRAY_SIZE = 0x845A_u32
  SECONDARY_COLOR_ARRAY_TYPE = 0x845B_u32
  SECONDARY_COLOR_ARRAY_STRIDE = 0x845C_u32
  SECONDARY_COLOR_ARRAY_POINTER = 0x845D_u32
  SECONDARY_COLOR_ARRAY = 0x845E_u32
  TEXTURE_FILTER_CONTROL = 0x8500_u32
  DEPTH_TEXTURE_MODE = 0x884B_u32
  COMPARE_R_TO_TEXTURE = 0x884E_u32
  #FUNC_ADD = 0x8006_u32
  #FUNC_SUBTRACT = 0x800A_u32
  #FUNC_REVERSE_SUBTRACT = 0x800B_u32
  #MIN = 0x8007_u32
  #MAX = 0x8008_u32
  #CONSTANT_COLOR = 0x8001_u32
  #ONE_MINUS_CONSTANT_COLOR = 0x8002_u32
  #CONSTANT_ALPHA = 0x8003_u32
  #ONE_MINUS_CONSTANT_ALPHA = 0x8004_u32
  alias PFNGLBLENDFUNCSEPARATEPROC = (Enum, Enum, Enum, Enum) -> Void
  alias PFNGLMULTIDRAWARRAYSPROC = (Enum, Int*, Sizei*, Sizei) -> Void
  alias PFNGLMULTIDRAWELEMENTSPROC = (Enum, Sizei*, Enum, Void**, Sizei) -> Void
  alias PFNGLPOINTPARAMETERFPROC = (Enum, Float) -> Void
  alias PFNGLPOINTPARAMETERFVPROC = (Enum, Float*) -> Void
  alias PFNGLPOINTPARAMETERIPROC = (Enum, Int) -> Void
  alias PFNGLPOINTPARAMETERIVPROC = (Enum, Int*) -> Void
  alias PFNGLFOGCOORDFPROC = Float -> Void
  alias PFNGLFOGCOORDFVPROC = Float* -> Void
  alias PFNGLFOGCOORDDPROC = Double -> Void
  alias PFNGLFOGCOORDDVPROC = Double* -> Void
  alias PFNGLFOGCOORDPOINTERPROC = (Enum, Sizei, Void*) -> Void
  alias PFNGLSECONDARYCOLOR3BPROC = (Byte, Byte, Byte) -> Void
  alias PFNGLSECONDARYCOLOR3BVPROC = Byte* -> Void
  alias PFNGLSECONDARYCOLOR3DPROC = (Double, Double, Double) -> Void
  alias PFNGLSECONDARYCOLOR3DVPROC = Double* -> Void
  alias PFNGLSECONDARYCOLOR3FPROC = (Float, Float, Float) -> Void
  alias PFNGLSECONDARYCOLOR3FVPROC = Float* -> Void
  alias PFNGLSECONDARYCOLOR3IPROC = (Int, Int, Int) -> Void
  alias PFNGLSECONDARYCOLOR3IVPROC = Int* -> Void
  alias PFNGLSECONDARYCOLOR3SPROC = (Short, Short, Short) -> Void
  alias PFNGLSECONDARYCOLOR3SVPROC = Short* -> Void
  alias PFNGLSECONDARYCOLOR3UBPROC = (Ubyte, Ubyte, Ubyte) -> Void
  alias PFNGLSECONDARYCOLOR3UBVPROC = Ubyte* -> Void
  alias PFNGLSECONDARYCOLOR3UIPROC = (Uint, Uint, Uint) -> Void
  alias PFNGLSECONDARYCOLOR3UIVPROC = Uint* -> Void
  alias PFNGLSECONDARYCOLOR3USPROC = (Ushort, Ushort, Ushort) -> Void
  alias PFNGLSECONDARYCOLOR3USVPROC = Ushort* -> Void
  alias PFNGLSECONDARYCOLORPOINTERPROC = (Int, Enum, Sizei, Void*) -> Void
  alias PFNGLWINDOWPOS2DPROC = (Double, Double) -> Void
  alias PFNGLWINDOWPOS2DVPROC = Double* -> Void
  alias PFNGLWINDOWPOS2FPROC = (Float, Float) -> Void
  alias PFNGLWINDOWPOS2FVPROC = Float* -> Void
  alias PFNGLWINDOWPOS2IPROC = (Int, Int) -> Void
  alias PFNGLWINDOWPOS2IVPROC = Int* -> Void
  alias PFNGLWINDOWPOS2SPROC = (Short, Short) -> Void
  alias PFNGLWINDOWPOS2SVPROC = Short* -> Void
  alias PFNGLWINDOWPOS3DPROC = (Double, Double, Double) -> Void
  alias PFNGLWINDOWPOS3DVPROC = Double* -> Void
  alias PFNGLWINDOWPOS3FPROC = (Float, Float, Float) -> Void
  alias PFNGLWINDOWPOS3FVPROC = Float* -> Void
  alias PFNGLWINDOWPOS3IPROC = (Int, Int, Int) -> Void
  alias PFNGLWINDOWPOS3IVPROC = Int* -> Void
  alias PFNGLWINDOWPOS3SPROC = (Short, Short, Short) -> Void
  alias PFNGLWINDOWPOS3SVPROC = Short* -> Void
  alias PFNGLBLENDCOLORPROC = (Float, Float, Float, Float) -> Void
  alias PFNGLBLENDEQUATIONPROC = Enum -> Void
  VERSION_1_5 = 1
  alias Sizeiptr = LibC::SSizeT
  alias Intptr = LibC::SSizeT
  BUFFER_SIZE = 0x8764_u32
  BUFFER_USAGE = 0x8765_u32
  QUERY_COUNTER_BITS = 0x8864_u32
  CURRENT_QUERY = 0x8865_u32
  QUERY_RESULT = 0x8866_u32
  QUERY_RESULT_AVAILABLE = 0x8867_u32
  ARRAY_BUFFER = 0x8892_u32
  ELEMENT_ARRAY_BUFFER = 0x8893_u32
  ARRAY_BUFFER_BINDING = 0x8894_u32
  ELEMENT_ARRAY_BUFFER_BINDING = 0x8895_u32
  VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 0x889F_u32
  READ_ONLY = 0x88B8_u32
  WRITE_ONLY = 0x88B9_u32
  READ_WRITE = 0x88BA_u32
  BUFFER_ACCESS = 0x88BB_u32
  BUFFER_MAPPED = 0x88BC_u32
  BUFFER_MAP_POINTER = 0x88BD_u32
  STREAM_DRAW = 0x88E0_u32
  STREAM_READ = 0x88E1_u32
  STREAM_COPY = 0x88E2_u32
  STATIC_DRAW = 0x88E4_u32
  STATIC_READ = 0x88E5_u32
  STATIC_COPY = 0x88E6_u32
  DYNAMIC_DRAW = 0x88E8_u32
  DYNAMIC_READ = 0x88E9_u32
  DYNAMIC_COPY = 0x88EA_u32
  SAMPLES_PASSED = 0x8914_u32
  SRC1_ALPHA = 0x8589_u32
  VERTEX_ARRAY_BUFFER_BINDING = 0x8896_u32
  NORMAL_ARRAY_BUFFER_BINDING = 0x8897_u32
  COLOR_ARRAY_BUFFER_BINDING = 0x8898_u32
  INDEX_ARRAY_BUFFER_BINDING = 0x8899_u32
  TEXTURE_COORD_ARRAY_BUFFER_BINDING = 0x889A_u32
  EDGE_FLAG_ARRAY_BUFFER_BINDING = 0x889B_u32
  SECONDARY_COLOR_ARRAY_BUFFER_BINDING = 0x889C_u32
  FOG_COORDINATE_ARRAY_BUFFER_BINDING = 0x889D_u32
  WEIGHT_ARRAY_BUFFER_BINDING = 0x889E_u32
  FOG_COORD_SRC = 0x8450_u32
  FOG_COORD = 0x8451_u32
  CURRENT_FOG_COORD = 0x8453_u32
  FOG_COORD_ARRAY_TYPE = 0x8454_u32
  FOG_COORD_ARRAY_STRIDE = 0x8455_u32
  FOG_COORD_ARRAY_POINTER = 0x8456_u32
  FOG_COORD_ARRAY = 0x8457_u32
  FOG_COORD_ARRAY_BUFFER_BINDING = 0x889D_u32
  SRC0_RGB = 0x8580_u32
  SRC1_RGB = 0x8581_u32
  SRC2_RGB = 0x8582_u32
  SRC0_ALPHA = 0x8588_u32
  SRC2_ALPHA = 0x858A_u32
  alias PFNGLGENQUERIESPROC = (Sizei, Uint*) -> Void
  alias PFNGLDELETEQUERIESPROC = (Sizei, Uint*) -> Void
  alias PFNGLISQUERYPROC = Uint -> Boolean
  alias PFNGLBEGINQUERYPROC = (Enum, Uint) -> Void
  alias PFNGLENDQUERYPROC = Enum -> Void
  alias PFNGLGETQUERYIVPROC = (Enum, Enum, Int*) -> Void
  alias PFNGLGETQUERYOBJECTIVPROC = (Uint, Enum, Int*) -> Void
  alias PFNGLGETQUERYOBJECTUIVPROC = (Uint, Enum, Uint*) -> Void
  alias PFNGLBINDBUFFERPROC = (Enum, Uint) -> Void
  alias PFNGLDELETEBUFFERSPROC = (Sizei, Uint*) -> Void
  alias PFNGLGENBUFFERSPROC = (Sizei, Uint*) -> Void
  alias PFNGLISBUFFERPROC = Uint -> Boolean
  alias PFNGLBUFFERDATAPROC = (Enum, Sizeiptr, Void*, Enum) -> Void
  alias PFNGLBUFFERSUBDATAPROC = (Enum, Intptr, Sizeiptr, Void*) -> Void
  alias PFNGLGETBUFFERSUBDATAPROC = (Enum, Intptr, Sizeiptr, Void*) -> Void
  alias PFNGLMAPBUFFERPROC = (Enum, Enum) -> Void*
  alias PFNGLUNMAPBUFFERPROC = Enum -> Boolean
  alias PFNGLGETBUFFERPARAMETERIVPROC = (Enum, Enum, Int*) -> Void
  alias PFNGLGETBUFFERPOINTERVPROC = (Enum, Enum, Void**) -> Void
  VERSION_2_0 = 1
  alias Char = UInt8
  BLEND_EQUATION_RGB = 0x8009_u32
  VERTEX_ATTRIB_ARRAY_ENABLED = 0x8622_u32
  VERTEX_ATTRIB_ARRAY_SIZE = 0x8623_u32
  VERTEX_ATTRIB_ARRAY_STRIDE = 0x8624_u32
  VERTEX_ATTRIB_ARRAY_TYPE = 0x8625_u32
  CURRENT_VERTEX_ATTRIB = 0x8626_u32
  VERTEX_PROGRAM_POINT_SIZE = 0x8642_u32
  VERTEX_ATTRIB_ARRAY_POINTER = 0x8645_u32
  STENCIL_BACK_FUNC = 0x8800_u32
  STENCIL_BACK_FAIL = 0x8801_u32
  STENCIL_BACK_PASS_DEPTH_FAIL = 0x8802_u32
  STENCIL_BACK_PASS_DEPTH_PASS = 0x8803_u32
  MAX_DRAW_BUFFERS = 0x8824_u32
  DRAW_BUFFER0 = 0x8825_u32
  DRAW_BUFFER1 = 0x8826_u32
  DRAW_BUFFER2 = 0x8827_u32
  DRAW_BUFFER3 = 0x8828_u32
  DRAW_BUFFER4 = 0x8829_u32
  DRAW_BUFFER5 = 0x882A_u32
  DRAW_BUFFER6 = 0x882B_u32
  DRAW_BUFFER7 = 0x882C_u32
  DRAW_BUFFER8 = 0x882D_u32
  DRAW_BUFFER9 = 0x882E_u32
  DRAW_BUFFER10 = 0x882F_u32
  DRAW_BUFFER11 = 0x8830_u32
  DRAW_BUFFER12 = 0x8831_u32
  DRAW_BUFFER13 = 0x8832_u32
  DRAW_BUFFER14 = 0x8833_u32
  DRAW_BUFFER15 = 0x8834_u32
  BLEND_EQUATION_ALPHA = 0x883D_u32
  MAX_VERTEX_ATTRIBS = 0x8869_u32
  VERTEX_ATTRIB_ARRAY_NORMALIZED = 0x886A_u32
  MAX_TEXTURE_IMAGE_UNITS = 0x8872_u32
  FRAGMENT_SHADER = 0x8B30_u32
  VERTEX_SHADER = 0x8B31_u32
  MAX_FRAGMENT_UNIFORM_COMPONENTS = 0x8B49_u32
  MAX_VERTEX_UNIFORM_COMPONENTS = 0x8B4A_u32
  MAX_VARYING_FLOATS = 0x8B4B_u32
  MAX_VERTEX_TEXTURE_IMAGE_UNITS = 0x8B4C_u32
  MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8B4D_u32
  SHADER_TYPE = 0x8B4F_u32
  FLOAT_VEC2 = 0x8B50_u32
  FLOAT_VEC3 = 0x8B51_u32
  FLOAT_VEC4 = 0x8B52_u32
  INT_VEC2 = 0x8B53_u32
  INT_VEC3 = 0x8B54_u32
  INT_VEC4 = 0x8B55_u32
  BOOL = 0x8B56_u32
  BOOL_VEC2 = 0x8B57_u32
  BOOL_VEC3 = 0x8B58_u32
  BOOL_VEC4 = 0x8B59_u32
  FLOAT_MAT2 = 0x8B5A_u32
  FLOAT_MAT3 = 0x8B5B_u32
  FLOAT_MAT4 = 0x8B5C_u32
  SAMPLER_1D = 0x8B5D_u32
  SAMPLER_2D = 0x8B5E_u32
  SAMPLER_3D = 0x8B5F_u32
  SAMPLER_CUBE = 0x8B60_u32
  SAMPLER_1D_SHADOW = 0x8B61_u32
  SAMPLER_2D_SHADOW = 0x8B62_u32
  DELETE_STATUS = 0x8B80_u32
  COMPILE_STATUS = 0x8B81_u32
  LINK_STATUS = 0x8B82_u32
  VALIDATE_STATUS = 0x8B83_u32
  INFO_LOG_LENGTH = 0x8B84_u32
  ATTACHED_SHADERS = 0x8B85_u32
  ACTIVE_UNIFORMS = 0x8B86_u32
  ACTIVE_UNIFORM_MAX_LENGTH = 0x8B87_u32
  SHADER_SOURCE_LENGTH = 0x8B88_u32
  ACTIVE_ATTRIBUTES = 0x8B89_u32
  ACTIVE_ATTRIBUTE_MAX_LENGTH = 0x8B8A_u32
  FRAGMENT_SHADER_DERIVATIVE_HINT = 0x8B8B_u32
  SHADING_LANGUAGE_VERSION = 0x8B8C_u32
  CURRENT_PROGRAM = 0x8B8D_u32
  POINT_SPRITE_COORD_ORIGIN = 0x8CA0_u32
  LOWER_LEFT = 0x8CA1_u32
  UPPER_LEFT = 0x8CA2_u32
  STENCIL_BACK_REF = 0x8CA3_u32
  STENCIL_BACK_VALUE_MASK = 0x8CA4_u32
  STENCIL_BACK_WRITEMASK = 0x8CA5_u32
  VERTEX_PROGRAM_TWO_SIDE = 0x8643_u32
  POINT_SPRITE = 0x8861_u32
  COORD_REPLACE = 0x8862_u32
  MAX_TEXTURE_COORDS = 0x8871_u32
  alias PFNGLBLENDEQUATIONSEPARATEPROC = (Enum, Enum) -> Void
  alias PFNGLDRAWBUFFERSPROC = (Sizei, Enum*) -> Void
  alias PFNGLSTENCILOPSEPARATEPROC = (Enum, Enum, Enum, Enum) -> Void
  alias PFNGLSTENCILFUNCSEPARATEPROC = (Enum, Enum, Int, Uint) -> Void
  alias PFNGLSTENCILMASKSEPARATEPROC = (Enum, Uint) -> Void
  alias PFNGLATTACHSHADERPROC = (Uint, Uint) -> Void
  alias PFNGLBINDATTRIBLOCATIONPROC = (Uint, Uint, Char*) -> Void
  alias PFNGLCOMPILESHADERPROC = Uint -> Void
  alias PFNGLCREATEPROGRAMPROC = -> Uint
  alias PFNGLCREATESHADERPROC = Enum -> Uint
  alias PFNGLDELETEPROGRAMPROC = Uint -> Void
  alias PFNGLDELETESHADERPROC = Uint -> Void
  alias PFNGLDETACHSHADERPROC = (Uint, Uint) -> Void
  alias PFNGLDISABLEVERTEXATTRIBARRAYPROC = Uint -> Void
  alias PFNGLENABLEVERTEXATTRIBARRAYPROC = Uint -> Void
  alias PFNGLGETACTIVEATTRIBPROC = (Uint, Uint, Sizei, Sizei*, Int*, Enum*, Char*) -> Void
  alias PFNGLGETACTIVEUNIFORMPROC = (Uint, Uint, Sizei, Sizei*, Int*, Enum*, Char*) -> Void
  alias PFNGLGETATTACHEDSHADERSPROC = (Uint, Sizei, Sizei*, Uint*) -> Void
  alias PFNGLGETATTRIBLOCATIONPROC = (Uint, Char*) -> Int
  alias PFNGLGETPROGRAMIVPROC = (Uint, Enum, Int*) -> Void
  alias PFNGLGETPROGRAMINFOLOGPROC = (Uint, Sizei, Sizei*, Char*) -> Void
  alias PFNGLGETSHADERIVPROC = (Uint, Enum, Int*) -> Void
  alias PFNGLGETSHADERINFOLOGPROC = (Uint, Sizei, Sizei*, Char*) -> Void
  alias PFNGLGETSHADERSOURCEPROC = (Uint, Sizei, Sizei*, Char*) -> Void
  alias PFNGLGETUNIFORMLOCATIONPROC = (Uint, Char*) -> Int
  alias PFNGLGETUNIFORMFVPROC = (Uint, Int, Float*) -> Void
  alias PFNGLGETUNIFORMIVPROC = (Uint, Int, Int*) -> Void
  alias PFNGLGETVERTEXATTRIBDVPROC = (Uint, Enum, Double*) -> Void
  alias PFNGLGETVERTEXATTRIBFVPROC = (Uint, Enum, Float*) -> Void
  alias PFNGLGETVERTEXATTRIBIVPROC = (Uint, Enum, Int*) -> Void
  alias PFNGLGETVERTEXATTRIBPOINTERVPROC = (Uint, Enum, Void**) -> Void
  alias PFNGLISPROGRAMPROC = Uint -> Boolean
  alias PFNGLISSHADERPROC = Uint -> Boolean
  alias PFNGLLINKPROGRAMPROC = Uint -> Void
  alias PFNGLSHADERSOURCEPROC = (Uint, Sizei, Char**, Int*) -> Void
  alias PFNGLUSEPROGRAMPROC = Uint -> Void
  alias PFNGLUNIFORM1FPROC = (Int, Float) -> Void
  alias PFNGLUNIFORM2FPROC = (Int, Float, Float) -> Void
  alias PFNGLUNIFORM3FPROC = (Int, Float, Float, Float) -> Void
  alias PFNGLUNIFORM4FPROC = (Int, Float, Float, Float, Float) -> Void
  alias PFNGLUNIFORM1IPROC = (Int, Int) -> Void
  alias PFNGLUNIFORM2IPROC = (Int, Int, Int) -> Void
  alias PFNGLUNIFORM3IPROC = (Int, Int, Int, Int) -> Void
  alias PFNGLUNIFORM4IPROC = (Int, Int, Int, Int, Int) -> Void
  alias PFNGLUNIFORM1FVPROC = (Int, Sizei, Float*) -> Void
  alias PFNGLUNIFORM2FVPROC = (Int, Sizei, Float*) -> Void
  alias PFNGLUNIFORM3FVPROC = (Int, Sizei, Float*) -> Void
  alias PFNGLUNIFORM4FVPROC = (Int, Sizei, Float*) -> Void
  alias PFNGLUNIFORM1IVPROC = (Int, Sizei, Int*) -> Void
  alias PFNGLUNIFORM2IVPROC = (Int, Sizei, Int*) -> Void
  alias PFNGLUNIFORM3IVPROC = (Int, Sizei, Int*) -> Void
  alias PFNGLUNIFORM4IVPROC = (Int, Sizei, Int*) -> Void
  alias PFNGLUNIFORMMATRIX2FVPROC = (Int, Sizei, Boolean, Float*) -> Void
  alias PFNGLUNIFORMMATRIX3FVPROC = (Int, Sizei, Boolean, Float*) -> Void
  alias PFNGLUNIFORMMATRIX4FVPROC = (Int, Sizei, Boolean, Float*) -> Void
  alias PFNGLVALIDATEPROGRAMPROC = Uint -> Void
  alias PFNGLVERTEXATTRIB1DPROC = (Uint, Double) -> Void
  alias PFNGLVERTEXATTRIB1DVPROC = (Uint, Double*) -> Void
  alias PFNGLVERTEXATTRIB1FPROC = (Uint, Float) -> Void
  alias PFNGLVERTEXATTRIB1FVPROC = (Uint, Float*) -> Void
  alias PFNGLVERTEXATTRIB1SPROC = (Uint, Short) -> Void
  alias PFNGLVERTEXATTRIB1SVPROC = (Uint, Short*) -> Void
  alias PFNGLVERTEXATTRIB2DPROC = (Uint, Double, Double) -> Void
  alias PFNGLVERTEXATTRIB2DVPROC = (Uint, Double*) -> Void
  alias PFNGLVERTEXATTRIB2FPROC = (Uint, Float, Float) -> Void
  alias PFNGLVERTEXATTRIB2FVPROC = (Uint, Float*) -> Void
  alias PFNGLVERTEXATTRIB2SPROC = (Uint, Short, Short) -> Void
  alias PFNGLVERTEXATTRIB2SVPROC = (Uint, Short*) -> Void
  alias PFNGLVERTEXATTRIB3DPROC = (Uint, Double, Double, Double) -> Void
  alias PFNGLVERTEXATTRIB3DVPROC = (Uint, Double*) -> Void
  alias PFNGLVERTEXATTRIB3FPROC = (Uint, Float, Float, Float) -> Void
  alias PFNGLVERTEXATTRIB3FVPROC = (Uint, Float*) -> Void
  alias PFNGLVERTEXATTRIB3SPROC = (Uint, Short, Short, Short) -> Void
  alias PFNGLVERTEXATTRIB3SVPROC = (Uint, Short*) -> Void
  alias PFNGLVERTEXATTRIB4NBVPROC = (Uint, Byte*) -> Void
  alias PFNGLVERTEXATTRIB4NIVPROC = (Uint, Int*) -> Void
  alias PFNGLVERTEXATTRIB4NSVPROC = (Uint, Short*) -> Void
  alias PFNGLVERTEXATTRIB4NUBPROC = (Uint, Ubyte, Ubyte, Ubyte, Ubyte) -> Void
  alias PFNGLVERTEXATTRIB4NUBVPROC = (Uint, Ubyte*) -> Void
  alias PFNGLVERTEXATTRIB4NUIVPROC = (Uint, Uint*) -> Void
  alias PFNGLVERTEXATTRIB4NUSVPROC = (Uint, Ushort*) -> Void
  alias PFNGLVERTEXATTRIB4BVPROC = (Uint, Byte*) -> Void
  alias PFNGLVERTEXATTRIB4DPROC = (Uint, Double, Double, Double, Double) -> Void
  alias PFNGLVERTEXATTRIB4DVPROC = (Uint, Double*) -> Void
  alias PFNGLVERTEXATTRIB4FPROC = (Uint, Float, Float, Float, Float) -> Void
  alias PFNGLVERTEXATTRIB4FVPROC = (Uint, Float*) -> Void
  alias PFNGLVERTEXATTRIB4IVPROC = (Uint, Int*) -> Void
  alias PFNGLVERTEXATTRIB4SPROC = (Uint, Short, Short, Short, Short) -> Void
  alias PFNGLVERTEXATTRIB4SVPROC = (Uint, Short*) -> Void
  alias PFNGLVERTEXATTRIB4UBVPROC = (Uint, Ubyte*) -> Void
  alias PFNGLVERTEXATTRIB4UIVPROC = (Uint, Uint*) -> Void
  alias PFNGLVERTEXATTRIB4USVPROC = (Uint, Ushort*) -> Void
  alias PFNGLVERTEXATTRIBPOINTERPROC = (Uint, Int, Enum, Boolean, Sizei, Void*) -> Void
  VERSION_2_1 = 1
  PIXEL_PACK_BUFFER = 0x88EB_u32
  PIXEL_UNPACK_BUFFER = 0x88EC_u32
  PIXEL_PACK_BUFFER_BINDING = 0x88ED_u32
  PIXEL_UNPACK_BUFFER_BINDING = 0x88EF_u32
  FLOAT_MAT_2X3 = 0x8B65_u32
  FLOAT_MAT_2X4 = 0x8B66_u32
  FLOAT_MAT_3X2 = 0x8B67_u32
  FLOAT_MAT_3X4 = 0x8B68_u32
  FLOAT_MAT_4X2 = 0x8B69_u32
  FLOAT_MAT_4X3 = 0x8B6A_u32
  SRGB = 0x8C40_u32
  SRGB8 = 0x8C41_u32
  SRGB_ALPHA = 0x8C42_u32
  SRGB8_ALPHA8 = 0x8C43_u32
  COMPRESSED_SRGB = 0x8C48_u32
  COMPRESSED_SRGB_ALPHA = 0x8C49_u32
  CURRENT_RASTER_SECONDARY_COLOR = 0x845F_u32
  SLUMINANCE_ALPHA = 0x8C44_u32
  SLUMINANCE8_ALPHA8 = 0x8C45_u32
  SLUMINANCE = 0x8C46_u32
  SLUMINANCE8 = 0x8C47_u32
  COMPRESSED_SLUMINANCE = 0x8C4A_u32
  COMPRESSED_SLUMINANCE_ALPHA = 0x8C4B_u32
  alias PFNGLUNIFORMMATRIX2X3FVPROC = (Int, Sizei, Boolean, Float*) -> Void
  alias PFNGLUNIFORMMATRIX3X2FVPROC = (Int, Sizei, Boolean, Float*) -> Void
  alias PFNGLUNIFORMMATRIX2X4FVPROC = (Int, Sizei, Boolean, Float*) -> Void
  alias PFNGLUNIFORMMATRIX4X2FVPROC = (Int, Sizei, Boolean, Float*) -> Void
  alias PFNGLUNIFORMMATRIX3X4FVPROC = (Int, Sizei, Boolean, Float*) -> Void
  alias PFNGLUNIFORMMATRIX4X3FVPROC = (Int, Sizei, Boolean, Float*) -> Void
  VERSION_3_0 = 1
  alias Half = UInt16
  COMPARE_REF_TO_TEXTURE = 0x884E_u32
  CLIP_DISTANCE0 = 0x3000_u32
  CLIP_DISTANCE1 = 0x3001_u32
  CLIP_DISTANCE2 = 0x3002_u32
  CLIP_DISTANCE3 = 0x3003_u32
  CLIP_DISTANCE4 = 0x3004_u32
  CLIP_DISTANCE5 = 0x3005_u32
  CLIP_DISTANCE6 = 0x3006_u32
  CLIP_DISTANCE7 = 0x3007_u32
  MAX_CLIP_DISTANCES = 0x0D32_u32
  MAJOR_VERSION = 0x821B_u32
  MINOR_VERSION = 0x821C_u32
  NUM_EXTENSIONS = 0x821D_u32
  CONTEXT_FLAGS = 0x821E_u32
  COMPRESSED_RED = 0x8225_u32
  COMPRESSED_RG = 0x8226_u32
  CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT = 0x00000001_u32
  RGBA32F = 0x8814_u32
  RGB32F = 0x8815_u32
  RGBA16F = 0x881A_u32
  RGB16F = 0x881B_u32
  VERTEX_ATTRIB_ARRAY_INTEGER = 0x88FD_u32
  MAX_ARRAY_TEXTURE_LAYERS = 0x88FF_u32
  MIN_PROGRAM_TEXEL_OFFSET = 0x8904_u32
  MAX_PROGRAM_TEXEL_OFFSET = 0x8905_u32
  CLAMP_READ_COLOR = 0x891C_u32
  FIXED_ONLY = 0x891D_u32
  MAX_VARYING_COMPONENTS = 0x8B4B_u32
  TEXTURE_1D_ARRAY = 0x8C18_u32
  PROXY_TEXTURE_1D_ARRAY = 0x8C19_u32
  TEXTURE_2D_ARRAY = 0x8C1A_u32
  PROXY_TEXTURE_2D_ARRAY = 0x8C1B_u32
  TEXTURE_BINDING_1D_ARRAY = 0x8C1C_u32
  TEXTURE_BINDING_2D_ARRAY = 0x8C1D_u32
  R11F_G11F_B10F = 0x8C3A_u32
  UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B_u32
  RGB9_E5 = 0x8C3D_u32
  UNSIGNED_INT_5_9_9_9_REV = 0x8C3E_u32
  TEXTURE_SHARED_SIZE = 0x8C3F_u32
  TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH = 0x8C76_u32
  TRANSFORM_FEEDBACK_BUFFER_MODE = 0x8C7F_u32
  MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = 0x8C80_u32
  TRANSFORM_FEEDBACK_VARYINGS = 0x8C83_u32
  TRANSFORM_FEEDBACK_BUFFER_START = 0x8C84_u32
  TRANSFORM_FEEDBACK_BUFFER_SIZE = 0x8C85_u32
  PRIMITIVES_GENERATED = 0x8C87_u32
  TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN = 0x8C88_u32
  RASTERIZER_DISCARD = 0x8C89_u32
  MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = 0x8C8A_u32
  MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = 0x8C8B_u32
  INTERLEAVED_ATTRIBS = 0x8C8C_u32
  SEPARATE_ATTRIBS = 0x8C8D_u32
  TRANSFORM_FEEDBACK_BUFFER = 0x8C8E_u32
  TRANSFORM_FEEDBACK_BUFFER_BINDING = 0x8C8F_u32
  RGBA32UI = 0x8D70_u32
  RGB32UI = 0x8D71_u32
  RGBA16UI = 0x8D76_u32
  RGB16UI = 0x8D77_u32
  RGBA8UI = 0x8D7C_u32
  RGB8UI = 0x8D7D_u32
  RGBA32I = 0x8D82_u32
  RGB32I = 0x8D83_u32
  RGBA16I = 0x8D88_u32
  RGB16I = 0x8D89_u32
  RGBA8I = 0x8D8E_u32
  RGB8I = 0x8D8F_u32
  RED_INTEGER = 0x8D94_u32
  GREEN_INTEGER = 0x8D95_u32
  BLUE_INTEGER = 0x8D96_u32
  RGB_INTEGER = 0x8D98_u32
  RGBA_INTEGER = 0x8D99_u32
  BGR_INTEGER = 0x8D9A_u32
  BGRA_INTEGER = 0x8D9B_u32
  SAMPLER_1D_ARRAY = 0x8DC0_u32
  SAMPLER_2D_ARRAY = 0x8DC1_u32
  SAMPLER_1D_ARRAY_SHADOW = 0x8DC3_u32
  SAMPLER_2D_ARRAY_SHADOW = 0x8DC4_u32
  SAMPLER_CUBE_SHADOW = 0x8DC5_u32
  UNSIGNED_INT_VEC2 = 0x8DC6_u32
  UNSIGNED_INT_VEC3 = 0x8DC7_u32
  UNSIGNED_INT_VEC4 = 0x8DC8_u32
  INT_SAMPLER_1D = 0x8DC9_u32
  INT_SAMPLER_2D = 0x8DCA_u32
  INT_SAMPLER_3D = 0x8DCB_u32
  INT_SAMPLER_CUBE = 0x8DCC_u32
  INT_SAMPLER_1D_ARRAY = 0x8DCE_u32
  INT_SAMPLER_2D_ARRAY = 0x8DCF_u32
  UNSIGNED_INT_SAMPLER_1D = 0x8DD1_u32
  UNSIGNED_INT_SAMPLER_2D = 0x8DD2_u32
  UNSIGNED_INT_SAMPLER_3D = 0x8DD3_u32
  UNSIGNED_INT_SAMPLER_CUBE = 0x8DD4_u32
  UNSIGNED_INT_SAMPLER_1D_ARRAY = 0x8DD6_u32
  UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8DD7_u32
  QUERY_WAIT = 0x8E13_u32
  QUERY_NO_WAIT = 0x8E14_u32
  QUERY_BY_REGION_WAIT = 0x8E15_u32
  QUERY_BY_REGION_NO_WAIT = 0x8E16_u32
  BUFFER_ACCESS_FLAGS = 0x911F_u32
  BUFFER_MAP_LENGTH = 0x9120_u32
  BUFFER_MAP_OFFSET = 0x9121_u32
  DEPTH_COMPONENT32F = 0x8CAC_u32
  DEPTH32F_STENCIL8 = 0x8CAD_u32
  FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD_u32
  INVALID_FRAMEBUFFER_OPERATION = 0x0506_u32
  FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING = 0x8210_u32
  FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE = 0x8211_u32
  FRAMEBUFFER_ATTACHMENT_RED_SIZE = 0x8212_u32
  FRAMEBUFFER_ATTACHMENT_GREEN_SIZE = 0x8213_u32
  FRAMEBUFFER_ATTACHMENT_BLUE_SIZE = 0x8214_u32
  FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE = 0x8215_u32
  FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE = 0x8216_u32
  FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE = 0x8217_u32
  FRAMEBUFFER_DEFAULT = 0x8218_u32
  FRAMEBUFFER_UNDEFINED = 0x8219_u32
  DEPTH_STENCIL_ATTACHMENT = 0x821A_u32
  MAX_RENDERBUFFER_SIZE = 0x84E8_u32
  DEPTH_STENCIL = 0x84F9_u32
  UNSIGNED_INT_24_8 = 0x84FA_u32
  DEPTH24_STENCIL8 = 0x88F0_u32
  TEXTURE_STENCIL_SIZE = 0x88F1_u32
  TEXTURE_RED_TYPE = 0x8C10_u32
  TEXTURE_GREEN_TYPE = 0x8C11_u32
  TEXTURE_BLUE_TYPE = 0x8C12_u32
  TEXTURE_ALPHA_TYPE = 0x8C13_u32
  TEXTURE_DEPTH_TYPE = 0x8C16_u32
  UNSIGNED_NORMALIZED = 0x8C17_u32
  FRAMEBUFFER_BINDING = 0x8CA6_u32
  DRAW_FRAMEBUFFER_BINDING = 0x8CA6_u32
  RENDERBUFFER_BINDING = 0x8CA7_u32
  READ_FRAMEBUFFER = 0x8CA8_u32
  DRAW_FRAMEBUFFER = 0x8CA9_u32
  READ_FRAMEBUFFER_BINDING = 0x8CAA_u32
  RENDERBUFFER_SAMPLES = 0x8CAB_u32
  FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 0x8CD0_u32
  FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 0x8CD1_u32
  FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 0x8CD2_u32
  FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 0x8CD3_u32
  FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER = 0x8CD4_u32
  FRAMEBUFFER_COMPLETE = 0x8CD5_u32
  FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 0x8CD6_u32
  FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 0x8CD7_u32
  FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER = 0x8CDB_u32
  FRAMEBUFFER_INCOMPLETE_READ_BUFFER = 0x8CDC_u32
  FRAMEBUFFER_UNSUPPORTED = 0x8CDD_u32
  MAX_COLOR_ATTACHMENTS = 0x8CDF_u32
  COLOR_ATTACHMENT0 = 0x8CE0_u32
  COLOR_ATTACHMENT1 = 0x8CE1_u32
  COLOR_ATTACHMENT2 = 0x8CE2_u32
  COLOR_ATTACHMENT3 = 0x8CE3_u32
  COLOR_ATTACHMENT4 = 0x8CE4_u32
  COLOR_ATTACHMENT5 = 0x8CE5_u32
  COLOR_ATTACHMENT6 = 0x8CE6_u32
  COLOR_ATTACHMENT7 = 0x8CE7_u32
  COLOR_ATTACHMENT8 = 0x8CE8_u32
  COLOR_ATTACHMENT9 = 0x8CE9_u32
  COLOR_ATTACHMENT10 = 0x8CEA_u32
  COLOR_ATTACHMENT11 = 0x8CEB_u32
  COLOR_ATTACHMENT12 = 0x8CEC_u32
  COLOR_ATTACHMENT13 = 0x8CED_u32
  COLOR_ATTACHMENT14 = 0x8CEE_u32
  COLOR_ATTACHMENT15 = 0x8CEF_u32
  DEPTH_ATTACHMENT = 0x8D00_u32
  STENCIL_ATTACHMENT = 0x8D20_u32
  FRAMEBUFFER = 0x8D40_u32
  RENDERBUFFER = 0x8D41_u32
  RENDERBUFFER_WIDTH = 0x8D42_u32
  RENDERBUFFER_HEIGHT = 0x8D43_u32
  RENDERBUFFER_INTERNAL_FORMAT = 0x8D44_u32
  STENCIL_INDEX1 = 0x8D46_u32
  STENCIL_INDEX4 = 0x8D47_u32
  STENCIL_INDEX8 = 0x8D48_u32
  STENCIL_INDEX16 = 0x8D49_u32
  RENDERBUFFER_RED_SIZE = 0x8D50_u32
  RENDERBUFFER_GREEN_SIZE = 0x8D51_u32
  RENDERBUFFER_BLUE_SIZE = 0x8D52_u32
  RENDERBUFFER_ALPHA_SIZE = 0x8D53_u32
  RENDERBUFFER_DEPTH_SIZE = 0x8D54_u32
  RENDERBUFFER_STENCIL_SIZE = 0x8D55_u32
  FRAMEBUFFER_INCOMPLETE_MULTISAMPLE = 0x8D56_u32
  MAX_SAMPLES = 0x8D57_u32
  INDEX = 0x8222_u32
  TEXTURE_LUMINANCE_TYPE = 0x8C14_u32
  TEXTURE_INTENSITY_TYPE = 0x8C15_u32
  FRAMEBUFFER_SRGB = 0x8DB9_u32
  HALF_FLOAT = 0x140B_u32
  MAP_READ_BIT = 0x0001_u32
  MAP_WRITE_BIT = 0x0002_u32
  MAP_INVALIDATE_RANGE_BIT = 0x0004_u32
  MAP_INVALIDATE_BUFFER_BIT = 0x0008_u32
  MAP_FLUSH_EXPLICIT_BIT = 0x0010_u32
  MAP_UNSYNCHRONIZED_BIT = 0x0020_u32
  COMPRESSED_RED_RGTC1 = 0x8DBB_u32
  COMPRESSED_SIGNED_RED_RGTC1 = 0x8DBC_u32
  COMPRESSED_RG_RGTC2 = 0x8DBD_u32
  COMPRESSED_SIGNED_RG_RGTC2 = 0x8DBE_u32
  RG = 0x8227_u32
  RG_INTEGER = 0x8228_u32
  R8 = 0x8229_u32
  R16 = 0x822A_u32
  RG8 = 0x822B_u32
  RG16 = 0x822C_u32
  R16F = 0x822D_u32
  R32F = 0x822E_u32
  RG16F = 0x822F_u32
  RG32F = 0x8230_u32
  R8I = 0x8231_u32
  R8UI = 0x8232_u32
  R16I = 0x8233_u32
  R16UI = 0x8234_u32
  R32I = 0x8235_u32
  R32UI = 0x8236_u32
  RG8I = 0x8237_u32
  RG8UI = 0x8238_u32
  RG16I = 0x8239_u32
  RG16UI = 0x823A_u32
  RG32I = 0x823B_u32
  RG32UI = 0x823C_u32
  VERTEX_ARRAY_BINDING = 0x85B5_u32
  CLAMP_VERTEX_COLOR = 0x891A_u32
  CLAMP_FRAGMENT_COLOR = 0x891B_u32
  ALPHA_INTEGER = 0x8D97_u32
  alias PFNGLCOLORMASKIPROC = (Uint, Boolean, Boolean, Boolean, Boolean) -> Void
  alias PFNGLGETBOOLEANIVPROC = (Enum, Uint, Boolean*) -> Void
  alias PFNGLGETINTEGERIVPROC = (Enum, Uint, Int*) -> Void
  alias PFNGLENABLEIPROC = (Enum, Uint) -> Void
  alias PFNGLDISABLEIPROC = (Enum, Uint) -> Void
  alias PFNGLISENABLEDIPROC = (Enum, Uint) -> Boolean
  alias PFNGLBEGINTRANSFORMFEEDBACKPROC = Enum -> Void
  alias PFNGLENDTRANSFORMFEEDBACKPROC = -> Void
  alias PFNGLBINDBUFFERRANGEPROC = (Enum, Uint, Uint, Intptr, Sizeiptr) -> Void
  alias PFNGLBINDBUFFERBASEPROC = (Enum, Uint, Uint) -> Void
  alias PFNGLTRANSFORMFEEDBACKVARYINGSPROC = (Uint, Sizei, Char**, Enum) -> Void
  alias PFNGLGETTRANSFORMFEEDBACKVARYINGPROC = (Uint, Uint, Sizei, Sizei*, Sizei*, Enum*, Char*) -> Void
  alias PFNGLCLAMPCOLORPROC = (Enum, Enum) -> Void
  alias PFNGLBEGINCONDITIONALRENDERPROC = (Uint, Enum) -> Void
  alias PFNGLENDCONDITIONALRENDERPROC = -> Void
  alias PFNGLVERTEXATTRIBIPOINTERPROC = (Uint, Int, Enum, Sizei, Void*) -> Void
  alias PFNGLGETVERTEXATTRIBIIVPROC = (Uint, Enum, Int*) -> Void
  alias PFNGLGETVERTEXATTRIBIUIVPROC = (Uint, Enum, Uint*) -> Void
  alias PFNGLVERTEXATTRIBI1IPROC = (Uint, Int) -> Void
  alias PFNGLVERTEXATTRIBI2IPROC = (Uint, Int, Int) -> Void
  alias PFNGLVERTEXATTRIBI3IPROC = (Uint, Int, Int, Int) -> Void
  alias PFNGLVERTEXATTRIBI4IPROC = (Uint, Int, Int, Int, Int) -> Void
  alias PFNGLVERTEXATTRIBI1UIPROC = (Uint, Uint) -> Void
  alias PFNGLVERTEXATTRIBI2UIPROC = (Uint, Uint, Uint) -> Void
  alias PFNGLVERTEXATTRIBI3UIPROC = (Uint, Uint, Uint, Uint) -> Void
  alias PFNGLVERTEXATTRIBI4UIPROC = (Uint, Uint, Uint, Uint, Uint) -> Void
  alias PFNGLVERTEXATTRIBI1IVPROC = (Uint, Int*) -> Void
  alias PFNGLVERTEXATTRIBI2IVPROC = (Uint, Int*) -> Void
  alias PFNGLVERTEXATTRIBI3IVPROC = (Uint, Int*) -> Void
  alias PFNGLVERTEXATTRIBI4IVPROC = (Uint, Int*) -> Void
  alias PFNGLVERTEXATTRIBI1UIVPROC = (Uint, Uint*) -> Void
  alias PFNGLVERTEXATTRIBI2UIVPROC = (Uint, Uint*) -> Void
  alias PFNGLVERTEXATTRIBI3UIVPROC = (Uint, Uint*) -> Void
  alias PFNGLVERTEXATTRIBI4UIVPROC = (Uint, Uint*) -> Void
  alias PFNGLVERTEXATTRIBI4BVPROC = (Uint, Byte*) -> Void
  alias PFNGLVERTEXATTRIBI4SVPROC = (Uint, Short*) -> Void
  alias PFNGLVERTEXATTRIBI4UBVPROC = (Uint, Ubyte*) -> Void
  alias PFNGLVERTEXATTRIBI4USVPROC = (Uint, Ushort*) -> Void
  alias PFNGLGETUNIFORMUIVPROC = (Uint, Int, Uint*) -> Void
  alias PFNGLBINDFRAGDATALOCATIONPROC = (Uint, Uint, Char*) -> Void
  alias PFNGLGETFRAGDATALOCATIONPROC = (Uint, Char*) -> Int
  alias PFNGLUNIFORM1UIPROC = (Int, Uint) -> Void
  alias PFNGLUNIFORM2UIPROC = (Int, Uint, Uint) -> Void
  alias PFNGLUNIFORM3UIPROC = (Int, Uint, Uint, Uint) -> Void
  alias PFNGLUNIFORM4UIPROC = (Int, Uint, Uint, Uint, Uint) -> Void
  alias PFNGLUNIFORM1UIVPROC = (Int, Sizei, Uint*) -> Void
  alias PFNGLUNIFORM2UIVPROC = (Int, Sizei, Uint*) -> Void
  alias PFNGLUNIFORM3UIVPROC = (Int, Sizei, Uint*) -> Void
  alias PFNGLUNIFORM4UIVPROC = (Int, Sizei, Uint*) -> Void
  alias PFNGLTEXPARAMETERIIVPROC = (Enum, Enum, Int*) -> Void
  alias PFNGLTEXPARAMETERIUIVPROC = (Enum, Enum, Uint*) -> Void
  alias PFNGLGETTEXPARAMETERIIVPROC = (Enum, Enum, Int*) -> Void
  alias PFNGLGETTEXPARAMETERIUIVPROC = (Enum, Enum, Uint*) -> Void
  alias PFNGLCLEARBUFFERIVPROC = (Enum, Int, Int*) -> Void
  alias PFNGLCLEARBUFFERUIVPROC = (Enum, Int, Uint*) -> Void
  alias PFNGLCLEARBUFFERFVPROC = (Enum, Int, Float*) -> Void
  alias PFNGLCLEARBUFFERFIPROC = (Enum, Int, Float, Int) -> Void
  alias PFNGLGETSTRINGIPROC = (Enum, Uint) -> Ubyte*
  alias PFNGLISRENDERBUFFERPROC = Uint -> Boolean
  alias PFNGLBINDRENDERBUFFERPROC = (Enum, Uint) -> Void
  alias PFNGLDELETERENDERBUFFERSPROC = (Sizei, Uint*) -> Void
  alias PFNGLGENRENDERBUFFERSPROC = (Sizei, Uint*) -> Void
  alias PFNGLRENDERBUFFERSTORAGEPROC = (Enum, Enum, Sizei, Sizei) -> Void
  alias PFNGLGETRENDERBUFFERPARAMETERIVPROC = (Enum, Enum, Int*) -> Void
  alias PFNGLISFRAMEBUFFERPROC = Uint -> Boolean
  alias PFNGLBINDFRAMEBUFFERPROC = (Enum, Uint) -> Void
  alias PFNGLDELETEFRAMEBUFFERSPROC = (Sizei, Uint*) -> Void
  alias PFNGLGENFRAMEBUFFERSPROC = (Sizei, Uint*) -> Void
  alias PFNGLCHECKFRAMEBUFFERSTATUSPROC = Enum -> Enum
  alias PFNGLFRAMEBUFFERTEXTURE1DPROC = (Enum, Enum, Enum, Uint, Int) -> Void
  alias PFNGLFRAMEBUFFERTEXTURE2DPROC = (Enum, Enum, Enum, Uint, Int) -> Void
  alias PFNGLFRAMEBUFFERTEXTURE3DPROC = (Enum, Enum, Enum, Uint, Int, Int) -> Void
  alias PFNGLFRAMEBUFFERRENDERBUFFERPROC = (Enum, Enum, Enum, Uint) -> Void
  alias PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC = (Enum, Enum, Enum, Int*) -> Void
  alias PFNGLGENERATEMIPMAPPROC = Enum -> Void
  alias PFNGLBLITFRAMEBUFFERPROC = (Int, Int, Int, Int, Int, Int, Int, Int, Bitfield, Enum) -> Void
  alias PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC = (Enum, Sizei, Enum, Sizei, Sizei) -> Void
  alias PFNGLFRAMEBUFFERTEXTURELAYERPROC = (Enum, Enum, Uint, Int, Int) -> Void
  alias PFNGLMAPBUFFERRANGEPROC = (Enum, Intptr, Sizeiptr, Bitfield) -> Void*
  alias PFNGLFLUSHMAPPEDBUFFERRANGEPROC = (Enum, Intptr, Sizeiptr) -> Void
  alias PFNGLBINDVERTEXARRAYPROC = Uint -> Void
  alias PFNGLDELETEVERTEXARRAYSPROC = (Sizei, Uint*) -> Void
  alias PFNGLGENVERTEXARRAYSPROC = (Sizei, Uint*) -> Void
  alias PFNGLISVERTEXARRAYPROC = Uint -> Boolean
  VERSION_3_1 = 1
  SAMPLER_2D_RECT = 0x8B63_u32
  SAMPLER_2D_RECT_SHADOW = 0x8B64_u32
  SAMPLER_BUFFER = 0x8DC2_u32
  INT_SAMPLER_2D_RECT = 0x8DCD_u32
  INT_SAMPLER_BUFFER = 0x8DD0_u32
  UNSIGNED_INT_SAMPLER_2D_RECT = 0x8DD5_u32
  UNSIGNED_INT_SAMPLER_BUFFER = 0x8DD8_u32
  TEXTURE_BUFFER = 0x8C2A_u32
  MAX_TEXTURE_BUFFER_SIZE = 0x8C2B_u32
  TEXTURE_BINDING_BUFFER = 0x8C2C_u32
  TEXTURE_BUFFER_DATA_STORE_BINDING = 0x8C2D_u32
  TEXTURE_RECTANGLE = 0x84F5_u32
  TEXTURE_BINDING_RECTANGLE = 0x84F6_u32
  PROXY_TEXTURE_RECTANGLE = 0x84F7_u32
  MAX_RECTANGLE_TEXTURE_SIZE = 0x84F8_u32
  R8_SNORM = 0x8F94_u32
  RG8_SNORM = 0x8F95_u32
  RGB8_SNORM = 0x8F96_u32
  RGBA8_SNORM = 0x8F97_u32
  R16_SNORM = 0x8F98_u32
  RG16_SNORM = 0x8F99_u32
  RGB16_SNORM = 0x8F9A_u32
  RGBA16_SNORM = 0x8F9B_u32
  SIGNED_NORMALIZED = 0x8F9C_u32
  PRIMITIVE_RESTART = 0x8F9D_u32
  PRIMITIVE_RESTART_INDEX = 0x8F9E_u32
  COPY_READ_BUFFER = 0x8F36_u32
  COPY_WRITE_BUFFER = 0x8F37_u32
  UNIFORM_BUFFER = 0x8A11_u32
  UNIFORM_BUFFER_BINDING = 0x8A28_u32
  UNIFORM_BUFFER_START = 0x8A29_u32
  UNIFORM_BUFFER_SIZE = 0x8A2A_u32
  MAX_VERTEX_UNIFORM_BLOCKS = 0x8A2B_u32
  MAX_GEOMETRY_UNIFORM_BLOCKS = 0x8A2C_u32
  MAX_FRAGMENT_UNIFORM_BLOCKS = 0x8A2D_u32
  MAX_COMBINED_UNIFORM_BLOCKS = 0x8A2E_u32
  MAX_UNIFORM_BUFFER_BINDINGS = 0x8A2F_u32
  MAX_UNIFORM_BLOCK_SIZE = 0x8A30_u32
  MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS = 0x8A31_u32
  MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS = 0x8A32_u32
  MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS = 0x8A33_u32
  UNIFORM_BUFFER_OFFSET_ALIGNMENT = 0x8A34_u32
  ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH = 0x8A35_u32
  ACTIVE_UNIFORM_BLOCKS = 0x8A36_u32
  UNIFORM_TYPE = 0x8A37_u32
  UNIFORM_SIZE = 0x8A38_u32
  UNIFORM_NAME_LENGTH = 0x8A39_u32
  UNIFORM_BLOCK_INDEX = 0x8A3A_u32
  UNIFORM_OFFSET = 0x8A3B_u32
  UNIFORM_ARRAY_STRIDE = 0x8A3C_u32
  UNIFORM_MATRIX_STRIDE = 0x8A3D_u32
  UNIFORM_IS_ROW_MAJOR = 0x8A3E_u32
  UNIFORM_BLOCK_BINDING = 0x8A3F_u32
  UNIFORM_BLOCK_DATA_SIZE = 0x8A40_u32
  UNIFORM_BLOCK_NAME_LENGTH = 0x8A41_u32
  UNIFORM_BLOCK_ACTIVE_UNIFORMS = 0x8A42_u32
  UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES = 0x8A43_u32
  UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER = 0x8A44_u32
  UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER = 0x8A45_u32
  UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = 0x8A46_u32
  INVALID_INDEX = 0xFFFFFFFF_u32
  alias PFNGLDRAWARRAYSINSTANCEDPROC = (Enum, Int, Sizei, Sizei) -> Void
  alias PFNGLDRAWELEMENTSINSTANCEDPROC = (Enum, Sizei, Enum, Void*, Sizei) -> Void
  alias PFNGLTEXBUFFERPROC = (Enum, Enum, Uint) -> Void
  alias PFNGLPRIMITIVERESTARTINDEXPROC = Uint -> Void
  alias PFNGLCOPYBUFFERSUBDATAPROC = (Enum, Enum, Intptr, Intptr, Sizeiptr) -> Void
  alias PFNGLGETUNIFORMINDICESPROC = (Uint, Sizei, Char**, Uint*) -> Void
  alias PFNGLGETACTIVEUNIFORMSIVPROC = (Uint, Sizei, Uint*, Enum, Int*) -> Void
  alias PFNGLGETACTIVEUNIFORMNAMEPROC = (Uint, Uint, Sizei, Sizei*, Char*) -> Void
  alias PFNGLGETUNIFORMBLOCKINDEXPROC = (Uint, Char*) -> Uint
  alias PFNGLGETACTIVEUNIFORMBLOCKIVPROC = (Uint, Uint, Enum, Int*) -> Void
  alias PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC = (Uint, Uint, Sizei, Sizei*, Char*) -> Void
  alias PFNGLUNIFORMBLOCKBINDINGPROC = (Uint, Uint, Uint) -> Void
  VERSION_3_2 = 1
  alias Sync = Void*
  alias Uint64 = UInt64
  alias Int64 = ::Int64
  CONTEXT_CORE_PROFILE_BIT = 0x00000001_u32
  CONTEXT_COMPATIBILITY_PROFILE_BIT = 0x00000002_u32
  LINES_ADJACENCY = 0x000A_u32
  LINE_STRIP_ADJACENCY = 0x000B_u32
  TRIANGLES_ADJACENCY = 0x000C_u32
  TRIANGLE_STRIP_ADJACENCY = 0x000D_u32
  PROGRAM_POINT_SIZE = 0x8642_u32
  MAX_GEOMETRY_TEXTURE_IMAGE_UNITS = 0x8C29_u32
  FRAMEBUFFER_ATTACHMENT_LAYERED = 0x8DA7_u32
  FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS = 0x8DA8_u32
  GEOMETRY_SHADER = 0x8DD9_u32
  GEOMETRY_VERTICES_OUT = 0x8916_u32
  GEOMETRY_INPUT_TYPE = 0x8917_u32
  GEOMETRY_OUTPUT_TYPE = 0x8918_u32
  MAX_GEOMETRY_UNIFORM_COMPONENTS = 0x8DDF_u32
  MAX_GEOMETRY_OUTPUT_VERTICES = 0x8DE0_u32
  MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS = 0x8DE1_u32
  MAX_VERTEX_OUTPUT_COMPONENTS = 0x9122_u32
  MAX_GEOMETRY_INPUT_COMPONENTS = 0x9123_u32
  MAX_GEOMETRY_OUTPUT_COMPONENTS = 0x9124_u32
  MAX_FRAGMENT_INPUT_COMPONENTS = 0x9125_u32
  CONTEXT_PROFILE_MASK = 0x9126_u32
  DEPTH_CLAMP = 0x864F_u32
  QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION = 0x8E4C_u32
  FIRST_VERTEX_CONVENTION = 0x8E4D_u32
  LAST_VERTEX_CONVENTION = 0x8E4E_u32
  PROVOKING_VERTEX = 0x8E4F_u32
  TEXTURE_CUBE_MAP_SEAMLESS = 0x884F_u32
  MAX_SERVER_WAIT_TIMEOUT = 0x9111_u32
  OBJECT_TYPE = 0x9112_u32
  SYNC_CONDITION = 0x9113_u32
  SYNC_STATUS = 0x9114_u32
  SYNC_FLAGS = 0x9115_u32
  SYNC_FENCE = 0x9116_u32
  SYNC_GPU_COMMANDS_COMPLETE = 0x9117_u32
  UNSIGNALED = 0x9118_u32
  SIGNALED = 0x9119_u32
  ALREADY_SIGNALED = 0x911A_u32
  TIMEOUT_EXPIRED = 0x911B_u32
  CONDITION_SATISFIED = 0x911C_u32
  WAIT_FAILED = 0x911D_u32
  TIMEOUT_IGNORED = 0xFFFFFFFFFFFFFFFF_u64
  SYNC_FLUSH_COMMANDS_BIT = 0x00000001_u32
  SAMPLE_POSITION = 0x8E50_u32
  SAMPLE_MASK = 0x8E51_u32
  SAMPLE_MASK_VALUE = 0x8E52_u32
  MAX_SAMPLE_MASK_WORDS = 0x8E59_u32
  TEXTURE_2D_MULTISAMPLE = 0x9100_u32
  PROXY_TEXTURE_2D_MULTISAMPLE = 0x9101_u32
  TEXTURE_2D_MULTISAMPLE_ARRAY = 0x9102_u32
  PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY = 0x9103_u32
  TEXTURE_BINDING_2D_MULTISAMPLE = 0x9104_u32
  TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY = 0x9105_u32
  TEXTURE_SAMPLES = 0x9106_u32
  TEXTURE_FIXED_SAMPLE_LOCATIONS = 0x9107_u32
  SAMPLER_2D_MULTISAMPLE = 0x9108_u32
  INT_SAMPLER_2D_MULTISAMPLE = 0x9109_u32
  UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE = 0x910A_u32
  SAMPLER_2D_MULTISAMPLE_ARRAY = 0x910B_u32
  INT_SAMPLER_2D_MULTISAMPLE_ARRAY = 0x910C_u32
  UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY = 0x910D_u32
  MAX_COLOR_TEXTURE_SAMPLES = 0x910E_u32
  MAX_DEPTH_TEXTURE_SAMPLES = 0x910F_u32
  MAX_INTEGER_SAMPLES = 0x9110_u32
  alias PFNGLDRAWELEMENTSBASEVERTEXPROC = (Enum, Sizei, Enum, Void*, Int) -> Void
  alias PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC = (Enum, Uint, Uint, Sizei, Enum, Void*, Int) -> Void
  alias PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC = (Enum, Sizei, Enum, Void*, Sizei, Int) -> Void
  alias PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC = (Enum, Sizei*, Enum, Void**, Sizei, Int*) -> Void
  alias PFNGLPROVOKINGVERTEXPROC = Enum -> Void
  alias PFNGLFENCESYNCPROC = (Enum, Bitfield) -> Sync
  alias PFNGLISSYNCPROC = Sync -> Boolean
  alias PFNGLDELETESYNCPROC = Sync -> Void
  alias PFNGLCLIENTWAITSYNCPROC = (Sync, Bitfield, Uint64) -> Enum
  alias PFNGLWAITSYNCPROC = (Sync, Bitfield, Uint64) -> Void
  alias PFNGLGETINTEGER64VPROC = (Enum, Int64*) -> Void
  alias PFNGLGETSYNCIVPROC = (Sync, Enum, Sizei, Sizei*, Int*) -> Void
  alias PFNGLGETINTEGER64IVPROC = (Enum, Uint, Int64*) -> Void
  alias PFNGLGETBUFFERPARAMETERI64VPROC = (Enum, Enum, Int64*) -> Void
  alias PFNGLFRAMEBUFFERTEXTUREPROC = (Enum, Enum, Uint, Int) -> Void
  alias PFNGLTEXIMAGE2DMULTISAMPLEPROC = (Enum, Sizei, Enum, Sizei, Sizei, Boolean) -> Void
  alias PFNGLTEXIMAGE3DMULTISAMPLEPROC = (Enum, Sizei, Enum, Sizei, Sizei, Sizei, Boolean) -> Void
  alias PFNGLGETMULTISAMPLEFVPROC = (Enum, Uint, Float*) -> Void
  alias PFNGLSAMPLEMASKIPROC = (Uint, Bitfield) -> Void
  VERSION_3_3 = 1
  VERTEX_ATTRIB_ARRAY_DIVISOR = 0x88FE_u32
  SRC1_COLOR = 0x88F9_u32
  ONE_MINUS_SRC1_COLOR = 0x88FA_u32
  ONE_MINUS_SRC1_ALPHA = 0x88FB_u32
  MAX_DUAL_SOURCE_DRAW_BUFFERS = 0x88FC_u32
  ANY_SAMPLES_PASSED = 0x8C2F_u32
  SAMPLER_BINDING = 0x8919_u32
  RGB10_A2UI = 0x906F_u32
  TEXTURE_SWIZZLE_R = 0x8E42_u32
  TEXTURE_SWIZZLE_G = 0x8E43_u32
  TEXTURE_SWIZZLE_B = 0x8E44_u32
  TEXTURE_SWIZZLE_A = 0x8E45_u32
  TEXTURE_SWIZZLE_RGBA = 0x8E46_u32
  TIME_ELAPSED = 0x88BF_u32
  TIMESTAMP = 0x8E28_u32
  INT_2_10_10_10_REV = 0x8D9F_u32
  alias PFNGLBINDFRAGDATALOCATIONINDEXEDPROC = (Uint, Uint, Uint, Char*) -> Void
  alias PFNGLGETFRAGDATAINDEXPROC = (Uint, Char*) -> Int
  alias PFNGLGENSAMPLERSPROC = (Sizei, Uint*) -> Void
  alias PFNGLDELETESAMPLERSPROC = (Sizei, Uint*) -> Void
  alias PFNGLISSAMPLERPROC = Uint -> Boolean
  alias PFNGLBINDSAMPLERPROC = (Uint, Uint) -> Void
  alias PFNGLSAMPLERPARAMETERIPROC = (Uint, Enum, Int) -> Void
  alias PFNGLSAMPLERPARAMETERIVPROC = (Uint, Enum, Int*) -> Void
  alias PFNGLSAMPLERPARAMETERFPROC = (Uint, Enum, Float) -> Void
  alias PFNGLSAMPLERPARAMETERFVPROC = (Uint, Enum, Float*) -> Void
  alias PFNGLSAMPLERPARAMETERIIVPROC = (Uint, Enum, Int*) -> Void
  alias PFNGLSAMPLERPARAMETERIUIVPROC = (Uint, Enum, Uint*) -> Void
  alias PFNGLGETSAMPLERPARAMETERIVPROC = (Uint, Enum, Int*) -> Void
  alias PFNGLGETSAMPLERPARAMETERIIVPROC = (Uint, Enum, Int*) -> Void
  alias PFNGLGETSAMPLERPARAMETERFVPROC = (Uint, Enum, Float*) -> Void
  alias PFNGLGETSAMPLERPARAMETERIUIVPROC = (Uint, Enum, Uint*) -> Void
  alias PFNGLQUERYCOUNTERPROC = (Uint, Enum) -> Void
  alias PFNGLGETQUERYOBJECTI64VPROC = (Uint, Enum, Int64*) -> Void
  alias PFNGLGETQUERYOBJECTUI64VPROC = (Uint, Enum, Uint64*) -> Void
  alias PFNGLVERTEXATTRIBDIVISORPROC = (Uint, Uint) -> Void
  alias PFNGLVERTEXATTRIBP1UIPROC = (Uint, Enum, Boolean, Uint) -> Void
  alias PFNGLVERTEXATTRIBP1UIVPROC = (Uint, Enum, Boolean, Uint*) -> Void
  alias PFNGLVERTEXATTRIBP2UIPROC = (Uint, Enum, Boolean, Uint) -> Void
  alias PFNGLVERTEXATTRIBP2UIVPROC = (Uint, Enum, Boolean, Uint*) -> Void
  alias PFNGLVERTEXATTRIBP3UIPROC = (Uint, Enum, Boolean, Uint) -> Void
  alias PFNGLVERTEXATTRIBP3UIVPROC = (Uint, Enum, Boolean, Uint*) -> Void
  alias PFNGLVERTEXATTRIBP4UIPROC = (Uint, Enum, Boolean, Uint) -> Void
  alias PFNGLVERTEXATTRIBP4UIVPROC = (Uint, Enum, Boolean, Uint*) -> Void
  alias PFNGLVERTEXP2UIPROC = (Enum, Uint) -> Void
  alias PFNGLVERTEXP2UIVPROC = (Enum, Uint*) -> Void
  alias PFNGLVERTEXP3UIPROC = (Enum, Uint) -> Void
  alias PFNGLVERTEXP3UIVPROC = (Enum, Uint*) -> Void
  alias PFNGLVERTEXP4UIPROC = (Enum, Uint) -> Void
  alias PFNGLVERTEXP4UIVPROC = (Enum, Uint*) -> Void
  alias PFNGLTEXCOORDP1UIPROC = (Enum, Uint) -> Void
  alias PFNGLTEXCOORDP1UIVPROC = (Enum, Uint*) -> Void
  alias PFNGLTEXCOORDP2UIPROC = (Enum, Uint) -> Void
  alias PFNGLTEXCOORDP2UIVPROC = (Enum, Uint*) -> Void
  alias PFNGLTEXCOORDP3UIPROC = (Enum, Uint) -> Void
  alias PFNGLTEXCOORDP3UIVPROC = (Enum, Uint*) -> Void
  alias PFNGLTEXCOORDP4UIPROC = (Enum, Uint) -> Void
  alias PFNGLTEXCOORDP4UIVPROC = (Enum, Uint*) -> Void
  alias PFNGLMULTITEXCOORDP1UIPROC = (Enum, Enum, Uint) -> Void
  alias PFNGLMULTITEXCOORDP1UIVPROC = (Enum, Enum, Uint*) -> Void
  alias PFNGLMULTITEXCOORDP2UIPROC = (Enum, Enum, Uint) -> Void
  alias PFNGLMULTITEXCOORDP2UIVPROC = (Enum, Enum, Uint*) -> Void
  alias PFNGLMULTITEXCOORDP3UIPROC = (Enum, Enum, Uint) -> Void
  alias PFNGLMULTITEXCOORDP3UIVPROC = (Enum, Enum, Uint*) -> Void
  alias PFNGLMULTITEXCOORDP4UIPROC = (Enum, Enum, Uint) -> Void
  alias PFNGLMULTITEXCOORDP4UIVPROC = (Enum, Enum, Uint*) -> Void
  alias PFNGLNORMALP3UIPROC = (Enum, Uint) -> Void
  alias PFNGLNORMALP3UIVPROC = (Enum, Uint*) -> Void
  alias PFNGLCOLORP3UIPROC = (Enum, Uint) -> Void
  alias PFNGLCOLORP3UIVPROC = (Enum, Uint*) -> Void
  alias PFNGLCOLORP4UIPROC = (Enum, Uint) -> Void
  alias PFNGLCOLORP4UIVPROC = (Enum, Uint*) -> Void
  alias PFNGLSECONDARYCOLORP3UIPROC = (Enum, Uint) -> Void
  alias PFNGLSECONDARYCOLORP3UIVPROC = (Enum, Uint*) -> Void
  VERSION_4_0 = 1
  SAMPLE_SHADING = 0x8C36_u32
  MIN_SAMPLE_SHADING_VALUE = 0x8C37_u32
  MIN_PROGRAM_TEXTURE_GATHER_OFFSET = 0x8E5E_u32
  MAX_PROGRAM_TEXTURE_GATHER_OFFSET = 0x8E5F_u32
  TEXTURE_CUBE_MAP_ARRAY = 0x9009_u32
  TEXTURE_BINDING_CUBE_MAP_ARRAY = 0x900A_u32
  PROXY_TEXTURE_CUBE_MAP_ARRAY = 0x900B_u32
  SAMPLER_CUBE_MAP_ARRAY = 0x900C_u32
  SAMPLER_CUBE_MAP_ARRAY_SHADOW = 0x900D_u32
  INT_SAMPLER_CUBE_MAP_ARRAY = 0x900E_u32
  UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY = 0x900F_u32
  DRAW_INDIRECT_BUFFER = 0x8F3F_u32
  DRAW_INDIRECT_BUFFER_BINDING = 0x8F43_u32
  GEOMETRY_SHADER_INVOCATIONS = 0x887F_u32
  MAX_GEOMETRY_SHADER_INVOCATIONS = 0x8E5A_u32
  MIN_FRAGMENT_INTERPOLATION_OFFSET = 0x8E5B_u32
  MAX_FRAGMENT_INTERPOLATION_OFFSET = 0x8E5C_u32
  FRAGMENT_INTERPOLATION_OFFSET_BITS = 0x8E5D_u32
  MAX_VERTEX_STREAMS = 0x8E71_u32
  DOUBLE_VEC2 = 0x8FFC_u32
  DOUBLE_VEC3 = 0x8FFD_u32
  DOUBLE_VEC4 = 0x8FFE_u32
  DOUBLE_MAT2 = 0x8F46_u32
  DOUBLE_MAT3 = 0x8F47_u32
  DOUBLE_MAT4 = 0x8F48_u32
  DOUBLE_MAT_2X3 = 0x8F49_u32
  DOUBLE_MAT_2X4 = 0x8F4A_u32
  DOUBLE_MAT_3X2 = 0x8F4B_u32
  DOUBLE_MAT_3X4 = 0x8F4C_u32
  DOUBLE_MAT_4X2 = 0x8F4D_u32
  DOUBLE_MAT_4X3 = 0x8F4E_u32
  ACTIVE_SUBROUTINES = 0x8DE5_u32
  ACTIVE_SUBROUTINE_UNIFORMS = 0x8DE6_u32
  ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS = 0x8E47_u32
  ACTIVE_SUBROUTINE_MAX_LENGTH = 0x8E48_u32
  ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH = 0x8E49_u32
  MAX_SUBROUTINES = 0x8DE7_u32
  MAX_SUBROUTINE_UNIFORM_LOCATIONS = 0x8DE8_u32
  NUM_COMPATIBLE_SUBROUTINES = 0x8E4A_u32
  COMPATIBLE_SUBROUTINES = 0x8E4B_u32
  PATCHES = 0x000E_u32
  PATCH_VERTICES = 0x8E72_u32
  PATCH_DEFAULT_INNER_LEVEL = 0x8E73_u32
  PATCH_DEFAULT_OUTER_LEVEL = 0x8E74_u32
  TESS_CONTROL_OUTPUT_VERTICES = 0x8E75_u32
  TESS_GEN_MODE = 0x8E76_u32
  TESS_GEN_SPACING = 0x8E77_u32
  TESS_GEN_VERTEX_ORDER = 0x8E78_u32
  TESS_GEN_POINT_MODE = 0x8E79_u32
  ISOLINES = 0x8E7A_u32
  FRACTIONAL_ODD = 0x8E7B_u32
  FRACTIONAL_EVEN = 0x8E7C_u32
  MAX_PATCH_VERTICES = 0x8E7D_u32
  MAX_TESS_GEN_LEVEL = 0x8E7E_u32
  MAX_TESS_CONTROL_UNIFORM_COMPONENTS = 0x8E7F_u32
  MAX_TESS_EVALUATION_UNIFORM_COMPONENTS = 0x8E80_u32
  MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS = 0x8E81_u32
  MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS = 0x8E82_u32
  MAX_TESS_CONTROL_OUTPUT_COMPONENTS = 0x8E83_u32
  MAX_TESS_PATCH_COMPONENTS = 0x8E84_u32
  MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS = 0x8E85_u32
  MAX_TESS_EVALUATION_OUTPUT_COMPONENTS = 0x8E86_u32
  MAX_TESS_CONTROL_UNIFORM_BLOCKS = 0x8E89_u32
  MAX_TESS_EVALUATION_UNIFORM_BLOCKS = 0x8E8A_u32
  MAX_TESS_CONTROL_INPUT_COMPONENTS = 0x886C_u32
  MAX_TESS_EVALUATION_INPUT_COMPONENTS = 0x886D_u32
  MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS = 0x8E1E_u32
  MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS = 0x8E1F_u32
  UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER = 0x84F0_u32
  UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER = 0x84F1_u32
  TESS_EVALUATION_SHADER = 0x8E87_u32
  TESS_CONTROL_SHADER = 0x8E88_u32
  TRANSFORM_FEEDBACK = 0x8E22_u32
  TRANSFORM_FEEDBACK_BUFFER_PAUSED = 0x8E23_u32
  TRANSFORM_FEEDBACK_BUFFER_ACTIVE = 0x8E24_u32
  TRANSFORM_FEEDBACK_BINDING = 0x8E25_u32
  MAX_TRANSFORM_FEEDBACK_BUFFERS = 0x8E70_u32
  alias PFNGLMINSAMPLESHADINGPROC = Float -> Void
  alias PFNGLBLENDEQUATIONIPROC = (Uint, Enum) -> Void
  alias PFNGLBLENDEQUATIONSEPARATEIPROC = (Uint, Enum, Enum) -> Void
  alias PFNGLBLENDFUNCIPROC = (Uint, Enum, Enum) -> Void
  alias PFNGLBLENDFUNCSEPARATEIPROC = (Uint, Enum, Enum, Enum, Enum) -> Void
  alias PFNGLDRAWARRAYSINDIRECTPROC = (Enum, Void*) -> Void
  alias PFNGLDRAWELEMENTSINDIRECTPROC = (Enum, Enum, Void*) -> Void
  alias PFNGLUNIFORM1DPROC = (Int, Double) -> Void
  alias PFNGLUNIFORM2DPROC = (Int, Double, Double) -> Void
  alias PFNGLUNIFORM3DPROC = (Int, Double, Double, Double) -> Void
  alias PFNGLUNIFORM4DPROC = (Int, Double, Double, Double, Double) -> Void
  alias PFNGLUNIFORM1DVPROC = (Int, Sizei, Double*) -> Void
  alias PFNGLUNIFORM2DVPROC = (Int, Sizei, Double*) -> Void
  alias PFNGLUNIFORM3DVPROC = (Int, Sizei, Double*) -> Void
  alias PFNGLUNIFORM4DVPROC = (Int, Sizei, Double*) -> Void
  alias PFNGLUNIFORMMATRIX2DVPROC = (Int, Sizei, Boolean, Double*) -> Void
  alias PFNGLUNIFORMMATRIX3DVPROC = (Int, Sizei, Boolean, Double*) -> Void
  alias PFNGLUNIFORMMATRIX4DVPROC = (Int, Sizei, Boolean, Double*) -> Void
  alias PFNGLUNIFORMMATRIX2X3DVPROC = (Int, Sizei, Boolean, Double*) -> Void
  alias PFNGLUNIFORMMATRIX2X4DVPROC = (Int, Sizei, Boolean, Double*) -> Void
  alias PFNGLUNIFORMMATRIX3X2DVPROC = (Int, Sizei, Boolean, Double*) -> Void
  alias PFNGLUNIFORMMATRIX3X4DVPROC = (Int, Sizei, Boolean, Double*) -> Void
  alias PFNGLUNIFORMMATRIX4X2DVPROC = (Int, Sizei, Boolean, Double*) -> Void
  alias PFNGLUNIFORMMATRIX4X3DVPROC = (Int, Sizei, Boolean, Double*) -> Void
  alias PFNGLGETUNIFORMDVPROC = (Uint, Int, Double*) -> Void
  alias PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC = (Uint, Enum, Char*) -> Int
  alias PFNGLGETSUBROUTINEINDEXPROC = (Uint, Enum, Char*) -> Uint
  alias PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC = (Uint, Enum, Uint, Enum, Int*) -> Void
  alias PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC = (Uint, Enum, Uint, Sizei, Sizei*, Char*) -> Void
  alias PFNGLGETACTIVESUBROUTINENAMEPROC = (Uint, Enum, Uint, Sizei, Sizei*, Char*) -> Void
  alias PFNGLUNIFORMSUBROUTINESUIVPROC = (Enum, Sizei, Uint*) -> Void
  alias PFNGLGETUNIFORMSUBROUTINEUIVPROC = (Enum, Int, Uint*) -> Void
  alias PFNGLGETPROGRAMSTAGEIVPROC = (Uint, Enum, Enum, Int*) -> Void
  alias PFNGLPATCHPARAMETERIPROC = (Enum, Int) -> Void
  alias PFNGLPATCHPARAMETERFVPROC = (Enum, Float*) -> Void
  alias PFNGLBINDTRANSFORMFEEDBACKPROC = (Enum, Uint) -> Void
  alias PFNGLDELETETRANSFORMFEEDBACKSPROC = (Sizei, Uint*) -> Void
  alias PFNGLGENTRANSFORMFEEDBACKSPROC = (Sizei, Uint*) -> Void
  alias PFNGLISTRANSFORMFEEDBACKPROC = Uint -> Boolean
  alias PFNGLPAUSETRANSFORMFEEDBACKPROC = -> Void
  alias PFNGLRESUMETRANSFORMFEEDBACKPROC = -> Void
  alias PFNGLDRAWTRANSFORMFEEDBACKPROC = (Enum, Uint) -> Void
  alias PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC = (Enum, Uint, Uint) -> Void
  alias PFNGLBEGINQUERYINDEXEDPROC = (Enum, Uint, Uint) -> Void
  alias PFNGLENDQUERYINDEXEDPROC = (Enum, Uint) -> Void
  alias PFNGLGETQUERYINDEXEDIVPROC = (Enum, Uint, Enum, Int*) -> Void
  VERSION_4_1 = 1
  FIXED = 0x140C_u32
  IMPLEMENTATION_COLOR_READ_TYPE = 0x8B9A_u32
  IMPLEMENTATION_COLOR_READ_FORMAT = 0x8B9B_u32
  LOW_FLOAT = 0x8DF0_u32
  MEDIUM_FLOAT = 0x8DF1_u32
  HIGH_FLOAT = 0x8DF2_u32
  LOW_INT = 0x8DF3_u32
  MEDIUM_INT = 0x8DF4_u32
  HIGH_INT = 0x8DF5_u32
  SHADER_COMPILER = 0x8DFA_u32
  SHADER_BINARY_FORMATS = 0x8DF8_u32
  NUM_SHADER_BINARY_FORMATS = 0x8DF9_u32
  MAX_VERTEX_UNIFORM_VECTORS = 0x8DFB_u32
  MAX_VARYING_VECTORS = 0x8DFC_u32
  MAX_FRAGMENT_UNIFORM_VECTORS = 0x8DFD_u32
  RGB565 = 0x8D62_u32
  PROGRAM_BINARY_RETRIEVABLE_HINT = 0x8257_u32
  PROGRAM_BINARY_LENGTH = 0x8741_u32
  NUM_PROGRAM_BINARY_FORMATS = 0x87FE_u32
  PROGRAM_BINARY_FORMATS = 0x87FF_u32
  VERTEX_SHADER_BIT = 0x00000001_u32
  FRAGMENT_SHADER_BIT = 0x00000002_u32
  GEOMETRY_SHADER_BIT = 0x00000004_u32
  TESS_CONTROL_SHADER_BIT = 0x00000008_u32
  TESS_EVALUATION_SHADER_BIT = 0x00000010_u32
  ALL_SHADER_BITS = 0xFFFFFFFF_u32
  PROGRAM_SEPARABLE = 0x8258_u32
  ACTIVE_PROGRAM = 0x8259_u32
  PROGRAM_PIPELINE_BINDING = 0x825A_u32
  MAX_VIEWPORTS = 0x825B_u32
  VIEWPORT_SUBPIXEL_BITS = 0x825C_u32
  VIEWPORT_BOUNDS_RANGE = 0x825D_u32
  LAYER_PROVOKING_VERTEX = 0x825E_u32
  VIEWPORT_INDEX_PROVOKING_VERTEX = 0x825F_u32
  UNDEFINED_VERTEX = 0x8260_u32
  alias PFNGLRELEASESHADERCOMPILERPROC = -> Void
  alias PFNGLSHADERBINARYPROC = (Sizei, Uint*, Enum, Void*, Sizei) -> Void
  alias PFNGLGETSHADERPRECISIONFORMATPROC = (Enum, Enum, Int*, Int*) -> Void
  alias PFNGLDEPTHRANGEFPROC = (Float, Float) -> Void
  alias PFNGLCLEARDEPTHFPROC = Float -> Void
  alias PFNGLGETPROGRAMBINARYPROC = (Uint, Sizei, Sizei*, Enum*, Void*) -> Void
  alias PFNGLPROGRAMBINARYPROC = (Uint, Enum, Void*, Sizei) -> Void
  alias PFNGLPROGRAMPARAMETERIPROC = (Uint, Enum, Int) -> Void
  alias PFNGLUSEPROGRAMSTAGESPROC = (Uint, Bitfield, Uint) -> Void
  alias PFNGLACTIVESHADERPROGRAMPROC = (Uint, Uint) -> Void
  alias PFNGLCREATESHADERPROGRAMVPROC = (Enum, Sizei, Char**) -> Uint
  alias PFNGLBINDPROGRAMPIPELINEPROC = Uint -> Void
  alias PFNGLDELETEPROGRAMPIPELINESPROC = (Sizei, Uint*) -> Void
  alias PFNGLGENPROGRAMPIPELINESPROC = (Sizei, Uint*) -> Void
  alias PFNGLISPROGRAMPIPELINEPROC = Uint -> Boolean
  alias PFNGLGETPROGRAMPIPELINEIVPROC = (Uint, Enum, Int*) -> Void
  alias PFNGLPROGRAMUNIFORM1IPROC = (Uint, Int, Int) -> Void
  alias PFNGLPROGRAMUNIFORM1IVPROC = (Uint, Int, Sizei, Int*) -> Void
  alias PFNGLPROGRAMUNIFORM1FPROC = (Uint, Int, Float) -> Void
  alias PFNGLPROGRAMUNIFORM1FVPROC = (Uint, Int, Sizei, Float*) -> Void
  alias PFNGLPROGRAMUNIFORM1DPROC = (Uint, Int, Double) -> Void
  alias PFNGLPROGRAMUNIFORM1DVPROC = (Uint, Int, Sizei, Double*) -> Void
  alias PFNGLPROGRAMUNIFORM1UIPROC = (Uint, Int, Uint) -> Void
  alias PFNGLPROGRAMUNIFORM1UIVPROC = (Uint, Int, Sizei, Uint*) -> Void
  alias PFNGLPROGRAMUNIFORM2IPROC = (Uint, Int, Int, Int) -> Void
  alias PFNGLPROGRAMUNIFORM2IVPROC = (Uint, Int, Sizei, Int*) -> Void
  alias PFNGLPROGRAMUNIFORM2FPROC = (Uint, Int, Float, Float) -> Void
  alias PFNGLPROGRAMUNIFORM2FVPROC = (Uint, Int, Sizei, Float*) -> Void
  alias PFNGLPROGRAMUNIFORM2DPROC = (Uint, Int, Double, Double) -> Void
  alias PFNGLPROGRAMUNIFORM2DVPROC = (Uint, Int, Sizei, Double*) -> Void
  alias PFNGLPROGRAMUNIFORM2UIPROC = (Uint, Int, Uint, Uint) -> Void
  alias PFNGLPROGRAMUNIFORM2UIVPROC = (Uint, Int, Sizei, Uint*) -> Void
  alias PFNGLPROGRAMUNIFORM3IPROC = (Uint, Int, Int, Int, Int) -> Void
  alias PFNGLPROGRAMUNIFORM3IVPROC = (Uint, Int, Sizei, Int*) -> Void
  alias PFNGLPROGRAMUNIFORM3FPROC = (Uint, Int, Float, Float, Float) -> Void
  alias PFNGLPROGRAMUNIFORM3FVPROC = (Uint, Int, Sizei, Float*) -> Void
  alias PFNGLPROGRAMUNIFORM3DPROC = (Uint, Int, Double, Double, Double) -> Void
  alias PFNGLPROGRAMUNIFORM3DVPROC = (Uint, Int, Sizei, Double*) -> Void
  alias PFNGLPROGRAMUNIFORM3UIPROC = (Uint, Int, Uint, Uint, Uint) -> Void
  alias PFNGLPROGRAMUNIFORM3UIVPROC = (Uint, Int, Sizei, Uint*) -> Void
  alias PFNGLPROGRAMUNIFORM4IPROC = (Uint, Int, Int, Int, Int, Int) -> Void
  alias PFNGLPROGRAMUNIFORM4IVPROC = (Uint, Int, Sizei, Int*) -> Void
  alias PFNGLPROGRAMUNIFORM4FPROC = (Uint, Int, Float, Float, Float, Float) -> Void
  alias PFNGLPROGRAMUNIFORM4FVPROC = (Uint, Int, Sizei, Float*) -> Void
  alias PFNGLPROGRAMUNIFORM4DPROC = (Uint, Int, Double, Double, Double, Double) -> Void
  alias PFNGLPROGRAMUNIFORM4DVPROC = (Uint, Int, Sizei, Double*) -> Void
  alias PFNGLPROGRAMUNIFORM4UIPROC = (Uint, Int, Uint, Uint, Uint, Uint) -> Void
  alias PFNGLPROGRAMUNIFORM4UIVPROC = (Uint, Int, Sizei, Uint*) -> Void
  alias PFNGLPROGRAMUNIFORMMATRIX2FVPROC = (Uint, Int, Sizei, Boolean, Float*) -> Void
  alias PFNGLPROGRAMUNIFORMMATRIX3FVPROC = (Uint, Int, Sizei, Boolean, Float*) -> Void
  alias PFNGLPROGRAMUNIFORMMATRIX4FVPROC = (Uint, Int, Sizei, Boolean, Float*) -> Void
  alias PFNGLPROGRAMUNIFORMMATRIX2DVPROC = (Uint, Int, Sizei, Boolean, Double*) -> Void
  alias PFNGLPROGRAMUNIFORMMATRIX3DVPROC = (Uint, Int, Sizei, Boolean, Double*) -> Void
  alias PFNGLPROGRAMUNIFORMMATRIX4DVPROC = (Uint, Int, Sizei, Boolean, Double*) -> Void
  alias PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC = (Uint, Int, Sizei, Boolean, Float*) -> Void
  alias PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC = (Uint, Int, Sizei, Boolean, Float*) -> Void
  alias PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC = (Uint, Int, Sizei, Boolean, Float*) -> Void
  alias PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC = (Uint, Int, Sizei, Boolean, Float*) -> Void
  alias PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC = (Uint, Int, Sizei, Boolean, Float*) -> Void
  alias PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC = (Uint, Int, Sizei, Boolean, Float*) -> Void
  alias PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC = (Uint, Int, Sizei, Boolean, Double*) -> Void
  alias PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC = (Uint, Int, Sizei, Boolean, Double*) -> Void
  alias PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC = (Uint, Int, Sizei, Boolean, Double*) -> Void
  alias PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC = (Uint, Int, Sizei, Boolean, Double*) -> Void
  alias PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC = (Uint, Int, Sizei, Boolean, Double*) -> Void
  alias PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC = (Uint, Int, Sizei, Boolean, Double*) -> Void
  alias PFNGLVALIDATEPROGRAMPIPELINEPROC = Uint -> Void
  alias PFNGLGETPROGRAMPIPELINEINFOLOGPROC = (Uint, Sizei, Sizei*, Char*) -> Void
  alias PFNGLVERTEXATTRIBL1DPROC = (Uint, Double) -> Void
  alias PFNGLVERTEXATTRIBL2DPROC = (Uint, Double, Double) -> Void
  alias PFNGLVERTEXATTRIBL3DPROC = (Uint, Double, Double, Double) -> Void
  alias PFNGLVERTEXATTRIBL4DPROC = (Uint, Double, Double, Double, Double) -> Void
  alias PFNGLVERTEXATTRIBL1DVPROC = (Uint, Double*) -> Void
  alias PFNGLVERTEXATTRIBL2DVPROC = (Uint, Double*) -> Void
  alias PFNGLVERTEXATTRIBL3DVPROC = (Uint, Double*) -> Void
  alias PFNGLVERTEXATTRIBL4DVPROC = (Uint, Double*) -> Void
  alias PFNGLVERTEXATTRIBLPOINTERPROC = (Uint, Int, Enum, Sizei, Void*) -> Void
  alias PFNGLGETVERTEXATTRIBLDVPROC = (Uint, Enum, Double*) -> Void
  alias PFNGLVIEWPORTARRAYVPROC = (Uint, Sizei, Float*) -> Void
  alias PFNGLVIEWPORTINDEXEDFPROC = (Uint, Float, Float, Float, Float) -> Void
  alias PFNGLVIEWPORTINDEXEDFVPROC = (Uint, Float*) -> Void
  alias PFNGLSCISSORARRAYVPROC = (Uint, Sizei, Int*) -> Void
  alias PFNGLSCISSORINDEXEDPROC = (Uint, Int, Int, Sizei, Sizei) -> Void
  alias PFNGLSCISSORINDEXEDVPROC = (Uint, Int*) -> Void
  alias PFNGLDEPTHRANGEARRAYVPROC = (Uint, Sizei, Double*) -> Void
  alias PFNGLDEPTHRANGEINDEXEDPROC = (Uint, Double, Double) -> Void
  alias PFNGLGETFLOATIVPROC = (Enum, Uint, Float*) -> Void
  alias PFNGLGETDOUBLEIVPROC = (Enum, Uint, Double*) -> Void
  VERSION_4_2 = 1
  UNPACK_COMPRESSED_BLOCK_WIDTH = 0x9127_u32
  UNPACK_COMPRESSED_BLOCK_HEIGHT = 0x9128_u32
  UNPACK_COMPRESSED_BLOCK_DEPTH = 0x9129_u32
  UNPACK_COMPRESSED_BLOCK_SIZE = 0x912A_u32
  PACK_COMPRESSED_BLOCK_WIDTH = 0x912B_u32
  PACK_COMPRESSED_BLOCK_HEIGHT = 0x912C_u32
  PACK_COMPRESSED_BLOCK_DEPTH = 0x912D_u32
  PACK_COMPRESSED_BLOCK_SIZE = 0x912E_u32
  NUM_SAMPLE_COUNTS = 0x9380_u32
  MIN_MAP_BUFFER_ALIGNMENT = 0x90BC_u32
  ATOMIC_COUNTER_BUFFER = 0x92C0_u32
  ATOMIC_COUNTER_BUFFER_BINDING = 0x92C1_u32
  ATOMIC_COUNTER_BUFFER_START = 0x92C2_u32
  ATOMIC_COUNTER_BUFFER_SIZE = 0x92C3_u32
  ATOMIC_COUNTER_BUFFER_DATA_SIZE = 0x92C4_u32
  ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS = 0x92C5_u32
  ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES = 0x92C6_u32
  ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER = 0x92C7_u32
  ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER = 0x92C8_u32
  ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER = 0x92C9_u32
  ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER = 0x92CA_u32
  ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER = 0x92CB_u32
  MAX_VERTEX_ATOMIC_COUNTER_BUFFERS = 0x92CC_u32
  MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS = 0x92CD_u32
  MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS = 0x92CE_u32
  MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS = 0x92CF_u32
  MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS = 0x92D0_u32
  MAX_COMBINED_ATOMIC_COUNTER_BUFFERS = 0x92D1_u32
  MAX_VERTEX_ATOMIC_COUNTERS = 0x92D2_u32
  MAX_TESS_CONTROL_ATOMIC_COUNTERS = 0x92D3_u32
  MAX_TESS_EVALUATION_ATOMIC_COUNTERS = 0x92D4_u32
  MAX_GEOMETRY_ATOMIC_COUNTERS = 0x92D5_u32
  MAX_FRAGMENT_ATOMIC_COUNTERS = 0x92D6_u32
  MAX_COMBINED_ATOMIC_COUNTERS = 0x92D7_u32
  MAX_ATOMIC_COUNTER_BUFFER_SIZE = 0x92D8_u32
  MAX_ATOMIC_COUNTER_BUFFER_BINDINGS = 0x92DC_u32
  ACTIVE_ATOMIC_COUNTER_BUFFERS = 0x92D9_u32
  UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX = 0x92DA_u32
  UNSIGNED_INT_ATOMIC_COUNTER = 0x92DB_u32
  VERTEX_ATTRIB_ARRAY_BARRIER_BIT = 0x00000001_u32
  ELEMENT_ARRAY_BARRIER_BIT = 0x00000002_u32
  UNIFORM_BARRIER_BIT = 0x00000004_u32
  TEXTURE_FETCH_BARRIER_BIT = 0x00000008_u32
  SHADER_IMAGE_ACCESS_BARRIER_BIT = 0x00000020_u32
  COMMAND_BARRIER_BIT = 0x00000040_u32
  PIXEL_BUFFER_BARRIER_BIT = 0x00000080_u32
  TEXTURE_UPDATE_BARRIER_BIT = 0x00000100_u32
  BUFFER_UPDATE_BARRIER_BIT = 0x00000200_u32
  FRAMEBUFFER_BARRIER_BIT = 0x00000400_u32
  TRANSFORM_FEEDBACK_BARRIER_BIT = 0x00000800_u32
  ATOMIC_COUNTER_BARRIER_BIT = 0x00001000_u32
  ALL_BARRIER_BITS = 0xFFFFFFFF_u32
  MAX_IMAGE_UNITS = 0x8F38_u32
  MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS = 0x8F39_u32
  IMAGE_BINDING_NAME = 0x8F3A_u32
  IMAGE_BINDING_LEVEL = 0x8F3B_u32
  IMAGE_BINDING_LAYERED = 0x8F3C_u32
  IMAGE_BINDING_LAYER = 0x8F3D_u32
  IMAGE_BINDING_ACCESS = 0x8F3E_u32
  IMAGE_1D = 0x904C_u32
  IMAGE_2D = 0x904D_u32
  IMAGE_3D = 0x904E_u32
  IMAGE_2D_RECT = 0x904F_u32
  IMAGE_CUBE = 0x9050_u32
  IMAGE_BUFFER = 0x9051_u32
  IMAGE_1D_ARRAY = 0x9052_u32
  IMAGE_2D_ARRAY = 0x9053_u32
  IMAGE_CUBE_MAP_ARRAY = 0x9054_u32
  IMAGE_2D_MULTISAMPLE = 0x9055_u32
  IMAGE_2D_MULTISAMPLE_ARRAY = 0x9056_u32
  INT_IMAGE_1D = 0x9057_u32
  INT_IMAGE_2D = 0x9058_u32
  INT_IMAGE_3D = 0x9059_u32
  INT_IMAGE_2D_RECT = 0x905A_u32
  INT_IMAGE_CUBE = 0x905B_u32
  INT_IMAGE_BUFFER = 0x905C_u32
  INT_IMAGE_1D_ARRAY = 0x905D_u32
  INT_IMAGE_2D_ARRAY = 0x905E_u32
  INT_IMAGE_CUBE_MAP_ARRAY = 0x905F_u32
  INT_IMAGE_2D_MULTISAMPLE = 0x9060_u32
  INT_IMAGE_2D_MULTISAMPLE_ARRAY = 0x9061_u32
  UNSIGNED_INT_IMAGE_1D = 0x9062_u32
  UNSIGNED_INT_IMAGE_2D = 0x9063_u32
  UNSIGNED_INT_IMAGE_3D = 0x9064_u32
  UNSIGNED_INT_IMAGE_2D_RECT = 0x9065_u32
  UNSIGNED_INT_IMAGE_CUBE = 0x9066_u32
  UNSIGNED_INT_IMAGE_BUFFER = 0x9067_u32
  UNSIGNED_INT_IMAGE_1D_ARRAY = 0x9068_u32
  UNSIGNED_INT_IMAGE_2D_ARRAY = 0x9069_u32
  UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY = 0x906A_u32
  UNSIGNED_INT_IMAGE_2D_MULTISAMPLE = 0x906B_u32
  UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY = 0x906C_u32
  MAX_IMAGE_SAMPLES = 0x906D_u32
  IMAGE_BINDING_FORMAT = 0x906E_u32
  IMAGE_FORMAT_COMPATIBILITY_TYPE = 0x90C7_u32
  IMAGE_FORMAT_COMPATIBILITY_BY_SIZE = 0x90C8_u32
  IMAGE_FORMAT_COMPATIBILITY_BY_CLASS = 0x90C9_u32
  MAX_VERTEX_IMAGE_UNIFORMS = 0x90CA_u32
  MAX_TESS_CONTROL_IMAGE_UNIFORMS = 0x90CB_u32
  MAX_TESS_EVALUATION_IMAGE_UNIFORMS = 0x90CC_u32
  MAX_GEOMETRY_IMAGE_UNIFORMS = 0x90CD_u32
  MAX_FRAGMENT_IMAGE_UNIFORMS = 0x90CE_u32
  MAX_COMBINED_IMAGE_UNIFORMS = 0x90CF_u32
  COMPRESSED_RGBA_BPTC_UNORM = 0x8E8C_u32
  COMPRESSED_SRGB_ALPHA_BPTC_UNORM = 0x8E8D_u32
  COMPRESSED_RGB_BPTC_SIGNED_FLOAT = 0x8E8E_u32
  COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT = 0x8E8F_u32
  TEXTURE_IMMUTABLE_FORMAT = 0x912F_u32
  alias PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC = (Enum, Int, Sizei, Sizei, Uint) -> Void
  alias PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC = (Enum, Sizei, Enum, Void*, Sizei, Uint) -> Void
  alias PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC = (Enum, Sizei, Enum, Void*, Sizei, Int, Uint) -> Void
  alias PFNGLGETINTERNALFORMATIVPROC = (Enum, Enum, Enum, Sizei, Int*) -> Void
  alias PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC = (Uint, Uint, Enum, Int*) -> Void
  alias PFNGLBINDIMAGETEXTUREPROC = (Uint, Uint, Int, Boolean, Int, Enum, Enum) -> Void
  alias PFNGLMEMORYBARRIERPROC = Bitfield -> Void
  alias PFNGLTEXSTORAGE1DPROC = (Enum, Sizei, Enum, Sizei) -> Void
  alias PFNGLTEXSTORAGE2DPROC = (Enum, Sizei, Enum, Sizei, Sizei) -> Void
  alias PFNGLTEXSTORAGE3DPROC = (Enum, Sizei, Enum, Sizei, Sizei, Sizei) -> Void
  alias PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC = (Enum, Uint, Sizei) -> Void
  alias PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC = (Enum, Uint, Uint, Sizei) -> Void
  VERSION_4_3 = 1
  alias DEBUGPROC = (Enum, Enum, Uint, Enum, Sizei, Char*, Void*) -> Void
  NUM_SHADING_LANGUAGE_VERSIONS = 0x82E9_u32
  VERTEX_ATTRIB_ARRAY_LONG = 0x874E_u32
  COMPRESSED_RGB8_ETC2 = 0x9274_u32
  COMPRESSED_SRGB8_ETC2 = 0x9275_u32
  COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 0x9276_u32
  COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 0x9277_u32
  COMPRESSED_RGBA8_ETC2_EAC = 0x9278_u32
  COMPRESSED_SRGB8_ALPHA8_ETC2_EAC = 0x9279_u32
  COMPRESSED_R11_EAC = 0x9270_u32
  COMPRESSED_SIGNED_R11_EAC = 0x9271_u32
  COMPRESSED_RG11_EAC = 0x9272_u32
  COMPRESSED_SIGNED_RG11_EAC = 0x9273_u32
  PRIMITIVE_RESTART_FIXED_INDEX = 0x8D69_u32
  ANY_SAMPLES_PASSED_CONSERVATIVE = 0x8D6A_u32
  MAX_ELEMENT_INDEX = 0x8D6B_u32
  COMPUTE_SHADER = 0x91B9_u32
  MAX_COMPUTE_UNIFORM_BLOCKS = 0x91BB_u32
  MAX_COMPUTE_TEXTURE_IMAGE_UNITS = 0x91BC_u32
  MAX_COMPUTE_IMAGE_UNIFORMS = 0x91BD_u32
  MAX_COMPUTE_SHARED_MEMORY_SIZE = 0x8262_u32
  MAX_COMPUTE_UNIFORM_COMPONENTS = 0x8263_u32
  MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS = 0x8264_u32
  MAX_COMPUTE_ATOMIC_COUNTERS = 0x8265_u32
  MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS = 0x8266_u32
  MAX_COMPUTE_WORK_GROUP_INVOCATIONS = 0x90EB_u32
  MAX_COMPUTE_WORK_GROUP_COUNT = 0x91BE_u32
  MAX_COMPUTE_WORK_GROUP_SIZE = 0x91BF_u32
  COMPUTE_WORK_GROUP_SIZE = 0x8267_u32
  UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER = 0x90EC_u32
  ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER = 0x90ED_u32
  DISPATCH_INDIRECT_BUFFER = 0x90EE_u32
  DISPATCH_INDIRECT_BUFFER_BINDING = 0x90EF_u32
  COMPUTE_SHADER_BIT = 0x00000020_u32
  DEBUG_OUTPUT_SYNCHRONOUS = 0x8242_u32
  DEBUG_NEXT_LOGGED_MESSAGE_LENGTH = 0x8243_u32
  DEBUG_CALLBACK_FUNCTION = 0x8244_u32
  DEBUG_CALLBACK_USER_PARAM = 0x8245_u32
  DEBUG_SOURCE_API = 0x8246_u32
  DEBUG_SOURCE_WINDOW_SYSTEM = 0x8247_u32
  DEBUG_SOURCE_SHADER_COMPILER = 0x8248_u32
  DEBUG_SOURCE_THIRD_PARTY = 0x8249_u32
  DEBUG_SOURCE_APPLICATION = 0x824A_u32
  DEBUG_SOURCE_OTHER = 0x824B_u32
  DEBUG_TYPE_ERROR = 0x824C_u32
  DEBUG_TYPE_DEPRECATED_BEHAVIOR = 0x824D_u32
  DEBUG_TYPE_UNDEFINED_BEHAVIOR = 0x824E_u32
  DEBUG_TYPE_PORTABILITY = 0x824F_u32
  DEBUG_TYPE_PERFORMANCE = 0x8250_u32
  DEBUG_TYPE_OTHER = 0x8251_u32
  MAX_DEBUG_MESSAGE_LENGTH = 0x9143_u32
  MAX_DEBUG_LOGGED_MESSAGES = 0x9144_u32
  DEBUG_LOGGED_MESSAGES = 0x9145_u32
  DEBUG_SEVERITY_HIGH = 0x9146_u32
  DEBUG_SEVERITY_MEDIUM = 0x9147_u32
  DEBUG_SEVERITY_LOW = 0x9148_u32
  DEBUG_TYPE_MARKER = 0x8268_u32
  DEBUG_TYPE_PUSH_GROUP = 0x8269_u32
  DEBUG_TYPE_POP_GROUP = 0x826A_u32
  DEBUG_SEVERITY_NOTIFICATION = 0x826B_u32
  MAX_DEBUG_GROUP_STACK_DEPTH = 0x826C_u32
  DEBUG_GROUP_STACK_DEPTH = 0x826D_u32
  BUFFER = 0x82E0_u32
  SHADER = 0x82E1_u32
  PROGRAM = 0x82E2_u32
  QUERY = 0x82E3_u32
  PROGRAM_PIPELINE = 0x82E4_u32
  SAMPLER = 0x82E6_u32
  MAX_LABEL_LENGTH = 0x82E8_u32
  DEBUG_OUTPUT = 0x92E0_u32
  CONTEXT_FLAG_DEBUG_BIT = 0x00000002_u32
  MAX_UNIFORM_LOCATIONS = 0x826E_u32
  FRAMEBUFFER_DEFAULT_WIDTH = 0x9310_u32
  FRAMEBUFFER_DEFAULT_HEIGHT = 0x9311_u32
  FRAMEBUFFER_DEFAULT_LAYERS = 0x9312_u32
  FRAMEBUFFER_DEFAULT_SAMPLES = 0x9313_u32
  FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS = 0x9314_u32
  MAX_FRAMEBUFFER_WIDTH = 0x9315_u32
  MAX_FRAMEBUFFER_HEIGHT = 0x9316_u32
  MAX_FRAMEBUFFER_LAYERS = 0x9317_u32
  MAX_FRAMEBUFFER_SAMPLES = 0x9318_u32
  INTERNALFORMAT_SUPPORTED = 0x826F_u32
  INTERNALFORMAT_PREFERRED = 0x8270_u32
  INTERNALFORMAT_RED_SIZE = 0x8271_u32
  INTERNALFORMAT_GREEN_SIZE = 0x8272_u32
  INTERNALFORMAT_BLUE_SIZE = 0x8273_u32
  INTERNALFORMAT_ALPHA_SIZE = 0x8274_u32
  INTERNALFORMAT_DEPTH_SIZE = 0x8275_u32
  INTERNALFORMAT_STENCIL_SIZE = 0x8276_u32
  INTERNALFORMAT_SHARED_SIZE = 0x8277_u32
  INTERNALFORMAT_RED_TYPE = 0x8278_u32
  INTERNALFORMAT_GREEN_TYPE = 0x8279_u32
  INTERNALFORMAT_BLUE_TYPE = 0x827A_u32
  INTERNALFORMAT_ALPHA_TYPE = 0x827B_u32
  INTERNALFORMAT_DEPTH_TYPE = 0x827C_u32
  INTERNALFORMAT_STENCIL_TYPE = 0x827D_u32
  MAX_WIDTH = 0x827E_u32
  MAX_HEIGHT = 0x827F_u32
  MAX_DEPTH = 0x8280_u32
  MAX_LAYERS = 0x8281_u32
  MAX_COMBINED_DIMENSIONS = 0x8282_u32
  COLOR_COMPONENTS = 0x8283_u32
  DEPTH_COMPONENTS = 0x8284_u32
  STENCIL_COMPONENTS = 0x8285_u32
  COLOR_RENDERABLE = 0x8286_u32
  DEPTH_RENDERABLE = 0x8287_u32
  STENCIL_RENDERABLE = 0x8288_u32
  FRAMEBUFFER_RENDERABLE = 0x8289_u32
  FRAMEBUFFER_RENDERABLE_LAYERED = 0x828A_u32
  FRAMEBUFFER_BLEND = 0x828B_u32
  READ_PIXELS = 0x828C_u32
  READ_PIXELS_FORMAT = 0x828D_u32
  READ_PIXELS_TYPE = 0x828E_u32
  TEXTURE_IMAGE_FORMAT = 0x828F_u32
  TEXTURE_IMAGE_TYPE = 0x8290_u32
  GET_TEXTURE_IMAGE_FORMAT = 0x8291_u32
  GET_TEXTURE_IMAGE_TYPE = 0x8292_u32
  MIPMAP = 0x8293_u32
  MANUAL_GENERATE_MIPMAP = 0x8294_u32
  AUTO_GENERATE_MIPMAP = 0x8295_u32
  COLOR_ENCODING = 0x8296_u32
  SRGB_READ = 0x8297_u32
  SRGB_WRITE = 0x8298_u32
  FILTER = 0x829A_u32
  VERTEX_TEXTURE = 0x829B_u32
  TESS_CONTROL_TEXTURE = 0x829C_u32
  TESS_EVALUATION_TEXTURE = 0x829D_u32
  GEOMETRY_TEXTURE = 0x829E_u32
  FRAGMENT_TEXTURE = 0x829F_u32
  COMPUTE_TEXTURE = 0x82A0_u32
  TEXTURE_SHADOW = 0x82A1_u32
  TEXTURE_GATHER = 0x82A2_u32
  TEXTURE_GATHER_SHADOW = 0x82A3_u32
  SHADER_IMAGE_LOAD = 0x82A4_u32
  SHADER_IMAGE_STORE = 0x82A5_u32
  SHADER_IMAGE_ATOMIC = 0x82A6_u32
  IMAGE_TEXEL_SIZE = 0x82A7_u32
  IMAGE_COMPATIBILITY_CLASS = 0x82A8_u32
  IMAGE_PIXEL_FORMAT = 0x82A9_u32
  IMAGE_PIXEL_TYPE = 0x82AA_u32
  SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST = 0x82AC_u32
  SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST = 0x82AD_u32
  SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE = 0x82AE_u32
  SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE = 0x82AF_u32
  TEXTURE_COMPRESSED_BLOCK_WIDTH = 0x82B1_u32
  TEXTURE_COMPRESSED_BLOCK_HEIGHT = 0x82B2_u32
  TEXTURE_COMPRESSED_BLOCK_SIZE = 0x82B3_u32
  CLEAR_BUFFER = 0x82B4_u32
  TEXTURE_VIEW = 0x82B5_u32
  VIEW_COMPATIBILITY_CLASS = 0x82B6_u32
  FULL_SUPPORT = 0x82B7_u32
  CAVEAT_SUPPORT = 0x82B8_u32
  IMAGE_CLASS_4_X_32 = 0x82B9_u32
  IMAGE_CLASS_2_X_32 = 0x82BA_u32
  IMAGE_CLASS_1_X_32 = 0x82BB_u32
  IMAGE_CLASS_4_X_16 = 0x82BC_u32
  IMAGE_CLASS_2_X_16 = 0x82BD_u32
  IMAGE_CLASS_1_X_16 = 0x82BE_u32
  IMAGE_CLASS_4_X_8 = 0x82BF_u32
  IMAGE_CLASS_2_X_8 = 0x82C0_u32
  IMAGE_CLASS_1_X_8 = 0x82C1_u32
  IMAGE_CLASS_11_11_10 = 0x82C2_u32
  IMAGE_CLASS_10_10_10_2 = 0x82C3_u32
  VIEW_CLASS_128_BITS = 0x82C4_u32
  VIEW_CLASS_96_BITS = 0x82C5_u32
  VIEW_CLASS_64_BITS = 0x82C6_u32
  VIEW_CLASS_48_BITS = 0x82C7_u32
  VIEW_CLASS_32_BITS = 0x82C8_u32
  VIEW_CLASS_24_BITS = 0x82C9_u32
  VIEW_CLASS_16_BITS = 0x82CA_u32
  VIEW_CLASS_8_BITS = 0x82CB_u32
  VIEW_CLASS_S3TC_DXT1_RGB = 0x82CC_u32
  VIEW_CLASS_S3TC_DXT1_RGBA = 0x82CD_u32
  VIEW_CLASS_S3TC_DXT3_RGBA = 0x82CE_u32
  VIEW_CLASS_S3TC_DXT5_RGBA = 0x82CF_u32
  VIEW_CLASS_RGTC1_RED = 0x82D0_u32
  VIEW_CLASS_RGTC2_RG = 0x82D1_u32
  VIEW_CLASS_BPTC_UNORM = 0x82D2_u32
  VIEW_CLASS_BPTC_FLOAT = 0x82D3_u32
  UNIFORM = 0x92E1_u32
  UNIFORM_BLOCK = 0x92E2_u32
  PROGRAM_INPUT = 0x92E3_u32
  PROGRAM_OUTPUT = 0x92E4_u32
  BUFFER_VARIABLE = 0x92E5_u32
  SHADER_STORAGE_BLOCK = 0x92E6_u32
  VERTEX_SUBROUTINE = 0x92E8_u32
  TESS_CONTROL_SUBROUTINE = 0x92E9_u32
  TESS_EVALUATION_SUBROUTINE = 0x92EA_u32
  GEOMETRY_SUBROUTINE = 0x92EB_u32
  FRAGMENT_SUBROUTINE = 0x92EC_u32
  COMPUTE_SUBROUTINE = 0x92ED_u32
  VERTEX_SUBROUTINE_UNIFORM = 0x92EE_u32
  TESS_CONTROL_SUBROUTINE_UNIFORM = 0x92EF_u32
  TESS_EVALUATION_SUBROUTINE_UNIFORM = 0x92F0_u32
  GEOMETRY_SUBROUTINE_UNIFORM = 0x92F1_u32
  FRAGMENT_SUBROUTINE_UNIFORM = 0x92F2_u32
  COMPUTE_SUBROUTINE_UNIFORM = 0x92F3_u32
  TRANSFORM_FEEDBACK_VARYING = 0x92F4_u32
  ACTIVE_RESOURCES = 0x92F5_u32
  MAX_NAME_LENGTH = 0x92F6_u32
  MAX_NUM_ACTIVE_VARIABLES = 0x92F7_u32
  MAX_NUM_COMPATIBLE_SUBROUTINES = 0x92F8_u32
  NAME_LENGTH = 0x92F9_u32
  TYPE = 0x92FA_u32
  ARRAY_SIZE = 0x92FB_u32
  OFFSET = 0x92FC_u32
  BLOCK_INDEX = 0x92FD_u32
  ARRAY_STRIDE = 0x92FE_u32
  MATRIX_STRIDE = 0x92FF_u32
  IS_ROW_MAJOR = 0x9300_u32
  ATOMIC_COUNTER_BUFFER_INDEX = 0x9301_u32
  BUFFER_BINDING = 0x9302_u32
  BUFFER_DATA_SIZE = 0x9303_u32
  NUM_ACTIVE_VARIABLES = 0x9304_u32
  ACTIVE_VARIABLES = 0x9305_u32
  REFERENCED_BY_VERTEX_SHADER = 0x9306_u32
  REFERENCED_BY_TESS_CONTROL_SHADER = 0x9307_u32
  REFERENCED_BY_TESS_EVALUATION_SHADER = 0x9308_u32
  REFERENCED_BY_GEOMETRY_SHADER = 0x9309_u32
  REFERENCED_BY_FRAGMENT_SHADER = 0x930A_u32
  REFERENCED_BY_COMPUTE_SHADER = 0x930B_u32
  TOP_LEVEL_ARRAY_SIZE = 0x930C_u32
  TOP_LEVEL_ARRAY_STRIDE = 0x930D_u32
  LOCATION = 0x930E_u32
  LOCATION_INDEX = 0x930F_u32
  IS_PER_PATCH = 0x92E7_u32
  SHADER_STORAGE_BUFFER = 0x90D2_u32
  SHADER_STORAGE_BUFFER_BINDING = 0x90D3_u32
  SHADER_STORAGE_BUFFER_START = 0x90D4_u32
  SHADER_STORAGE_BUFFER_SIZE = 0x90D5_u32
  MAX_VERTEX_SHADER_STORAGE_BLOCKS = 0x90D6_u32
  MAX_GEOMETRY_SHADER_STORAGE_BLOCKS = 0x90D7_u32
  MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS = 0x90D8_u32
  MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS = 0x90D9_u32
  MAX_FRAGMENT_SHADER_STORAGE_BLOCKS = 0x90DA_u32
  MAX_COMPUTE_SHADER_STORAGE_BLOCKS = 0x90DB_u32
  MAX_COMBINED_SHADER_STORAGE_BLOCKS = 0x90DC_u32
  MAX_SHADER_STORAGE_BUFFER_BINDINGS = 0x90DD_u32
  MAX_SHADER_STORAGE_BLOCK_SIZE = 0x90DE_u32
  SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT = 0x90DF_u32
  SHADER_STORAGE_BARRIER_BIT = 0x00002000_u32
  MAX_COMBINED_SHADER_OUTPUT_RESOURCES = 0x8F39_u32
  DEPTH_STENCIL_TEXTURE_MODE = 0x90EA_u32
  TEXTURE_BUFFER_OFFSET = 0x919D_u32
  TEXTURE_BUFFER_SIZE = 0x919E_u32
  TEXTURE_BUFFER_OFFSET_ALIGNMENT = 0x919F_u32
  TEXTURE_VIEW_MIN_LEVEL = 0x82DB_u32
  TEXTURE_VIEW_NUM_LEVELS = 0x82DC_u32
  TEXTURE_VIEW_MIN_LAYER = 0x82DD_u32
  TEXTURE_VIEW_NUM_LAYERS = 0x82DE_u32
  TEXTURE_IMMUTABLE_LEVELS = 0x82DF_u32
  VERTEX_ATTRIB_BINDING = 0x82D4_u32
  VERTEX_ATTRIB_RELATIVE_OFFSET = 0x82D5_u32
  VERTEX_BINDING_DIVISOR = 0x82D6_u32
  VERTEX_BINDING_OFFSET = 0x82D7_u32
  VERTEX_BINDING_STRIDE = 0x82D8_u32
  MAX_VERTEX_ATTRIB_RELATIVE_OFFSET = 0x82D9_u32
  MAX_VERTEX_ATTRIB_BINDINGS = 0x82DA_u32
  VERTEX_BINDING_BUFFER = 0x8F4F_u32
  DISPLAY_LIST = 0x82E7_u32
  alias PFNGLCLEARBUFFERDATAPROC = (Enum, Enum, Enum, Enum, Void*) -> Void
  alias PFNGLCLEARBUFFERSUBDATAPROC = (Enum, Enum, Intptr, Sizeiptr, Enum, Enum, Void*) -> Void
  alias PFNGLDISPATCHCOMPUTEPROC = (Uint, Uint, Uint) -> Void
  alias PFNGLDISPATCHCOMPUTEINDIRECTPROC = Intptr -> Void
  alias PFNGLCOPYIMAGESUBDATAPROC = (Uint, Enum, Int, Int, Int, Int, Uint, Enum, Int, Int, Int, Int, Sizei, Sizei, Sizei) -> Void
  alias PFNGLFRAMEBUFFERPARAMETERIPROC = (Enum, Enum, Int) -> Void
  alias PFNGLGETFRAMEBUFFERPARAMETERIVPROC = (Enum, Enum, Int*) -> Void
  alias PFNGLGETINTERNALFORMATI64VPROC = (Enum, Enum, Enum, Sizei, Int64*) -> Void
  alias PFNGLINVALIDATETEXSUBIMAGEPROC = (Uint, Int, Int, Int, Int, Sizei, Sizei, Sizei) -> Void
  alias PFNGLINVALIDATETEXIMAGEPROC = (Uint, Int) -> Void
  alias PFNGLINVALIDATEBUFFERSUBDATAPROC = (Uint, Intptr, Sizeiptr) -> Void
  alias PFNGLINVALIDATEBUFFERDATAPROC = Uint -> Void
  alias PFNGLINVALIDATEFRAMEBUFFERPROC = (Enum, Sizei, Enum*) -> Void
  alias PFNGLINVALIDATESUBFRAMEBUFFERPROC = (Enum, Sizei, Enum*, Int, Int, Sizei, Sizei) -> Void
  alias PFNGLMULTIDRAWARRAYSINDIRECTPROC = (Enum, Void*, Sizei, Sizei) -> Void
  alias PFNGLMULTIDRAWELEMENTSINDIRECTPROC = (Enum, Enum, Void*, Sizei, Sizei) -> Void
  alias PFNGLGETPROGRAMINTERFACEIVPROC = (Uint, Enum, Enum, Int*) -> Void
  alias PFNGLGETPROGRAMRESOURCEINDEXPROC = (Uint, Enum, Char*) -> Uint
  alias PFNGLGETPROGRAMRESOURCENAMEPROC = (Uint, Enum, Uint, Sizei, Sizei*, Char*) -> Void
  alias PFNGLGETPROGRAMRESOURCEIVPROC = (Uint, Enum, Uint, Sizei, Enum*, Sizei, Sizei*, Int*) -> Void
  alias PFNGLGETPROGRAMRESOURCELOCATIONPROC = (Uint, Enum, Char*) -> Int
  alias PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC = (Uint, Enum, Char*) -> Int
  alias PFNGLSHADERSTORAGEBLOCKBINDINGPROC = (Uint, Uint, Uint) -> Void
  alias PFNGLTEXBUFFERRANGEPROC = (Enum, Enum, Uint, Intptr, Sizeiptr) -> Void
  alias PFNGLTEXSTORAGE2DMULTISAMPLEPROC = (Enum, Sizei, Enum, Sizei, Sizei, Boolean) -> Void
  alias PFNGLTEXSTORAGE3DMULTISAMPLEPROC = (Enum, Sizei, Enum, Sizei, Sizei, Sizei, Boolean) -> Void
  alias PFNGLTEXTUREVIEWPROC = (Uint, Enum, Uint, Enum, Uint, Uint, Uint, Uint) -> Void
  alias PFNGLBINDVERTEXBUFFERPROC = (Uint, Uint, Intptr, Sizei) -> Void
  alias PFNGLVERTEXATTRIBFORMATPROC = (Uint, Int, Enum, Boolean, Uint) -> Void
  alias PFNGLVERTEXATTRIBIFORMATPROC = (Uint, Int, Enum, Uint) -> Void
  alias PFNGLVERTEXATTRIBLFORMATPROC = (Uint, Int, Enum, Uint) -> Void
  alias PFNGLVERTEXATTRIBBINDINGPROC = (Uint, Uint) -> Void
  alias PFNGLVERTEXBINDINGDIVISORPROC = (Uint, Uint) -> Void
  alias PFNGLDEBUGMESSAGECONTROLPROC = (Enum, Enum, Enum, Sizei, Uint*, Boolean) -> Void
  alias PFNGLDEBUGMESSAGEINSERTPROC = (Enum, Enum, Uint, Enum, Sizei, Char*) -> Void
  alias PFNGLDEBUGMESSAGECALLBACKPROC = (DEBUGPROC, Void*) -> Void
  alias PFNGLGETDEBUGMESSAGELOGPROC = (Uint, Sizei, Enum*, Enum*, Uint*, Enum*, Sizei*, Char*) -> Uint
  alias PFNGLPUSHDEBUGGROUPPROC = (Enum, Uint, Sizei, Char*) -> Void
  alias PFNGLPOPDEBUGGROUPPROC = -> Void
  alias PFNGLOBJECTLABELPROC = (Enum, Uint, Sizei, Char*) -> Void
  alias PFNGLGETOBJECTLABELPROC = (Enum, Uint, Sizei, Sizei*, Char*) -> Void
  alias PFNGLOBJECTPTRLABELPROC = (Void*, Sizei, Char*) -> Void
  alias PFNGLGETOBJECTPTRLABELPROC = (Void*, Sizei, Sizei*, Char*) -> Void
  VERSION_4_4 = 1
  MAX_VERTEX_ATTRIB_STRIDE = 0x82E5_u32
  PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED = 0x8221_u32
  TEXTURE_BUFFER_BINDING = 0x8C2A_u32
  MAP_PERSISTENT_BIT = 0x0040_u32
  MAP_COHERENT_BIT = 0x0080_u32
  DYNAMIC_STORAGE_BIT = 0x0100_u32
  CLIENT_STORAGE_BIT = 0x0200_u32
  CLIENT_MAPPED_BUFFER_BARRIER_BIT = 0x00004000_u32
  BUFFER_IMMUTABLE_STORAGE = 0x821F_u32
  BUFFER_STORAGE_FLAGS = 0x8220_u32
  CLEAR_TEXTURE = 0x9365_u32
  LOCATION_COMPONENT = 0x934A_u32
  TRANSFORM_FEEDBACK_BUFFER_INDEX = 0x934B_u32
  TRANSFORM_FEEDBACK_BUFFER_STRIDE = 0x934C_u32
  QUERY_BUFFER = 0x9192_u32
  QUERY_BUFFER_BARRIER_BIT = 0x00008000_u32
  QUERY_BUFFER_BINDING = 0x9193_u32
  QUERY_RESULT_NO_WAIT = 0x9194_u32
  MIRROR_CLAMP_TO_EDGE = 0x8743_u32
  alias PFNGLBUFFERSTORAGEPROC = (Enum, Sizeiptr, Void*, Bitfield) -> Void
  alias PFNGLCLEARTEXIMAGEPROC = (Uint, Int, Enum, Enum, Void*) -> Void
  alias PFNGLCLEARTEXSUBIMAGEPROC = (Uint, Int, Int, Int, Int, Sizei, Sizei, Sizei, Enum, Enum, Void*) -> Void
  alias PFNGLBINDBUFFERSBASEPROC = (Enum, Uint, Sizei, Uint*) -> Void
  alias PFNGLBINDBUFFERSRANGEPROC = (Enum, Uint, Sizei, Uint*, Intptr*, Sizeiptr*) -> Void
  alias PFNGLBINDTEXTURESPROC = (Uint, Sizei, Uint*) -> Void
  alias PFNGLBINDSAMPLERSPROC = (Uint, Sizei, Uint*) -> Void
  alias PFNGLBINDIMAGETEXTURESPROC = (Uint, Sizei, Uint*) -> Void
  alias PFNGLBINDVERTEXBUFFERSPROC = (Uint, Sizei, Uint*, Intptr*, Sizei*) -> Void
  VERSION_4_5 = 1
  CONTEXT_LOST = 0x0507_u32
  NEGATIVE_ONE_TO_ONE = 0x935E_u32
  ZERO_TO_ONE = 0x935F_u32
  CLIP_ORIGIN = 0x935C_u32
  CLIP_DEPTH_MODE = 0x935D_u32
  QUERY_WAIT_INVERTED = 0x8E17_u32
  QUERY_NO_WAIT_INVERTED = 0x8E18_u32
  QUERY_BY_REGION_WAIT_INVERTED = 0x8E19_u32
  QUERY_BY_REGION_NO_WAIT_INVERTED = 0x8E1A_u32
  MAX_CULL_DISTANCES = 0x82F9_u32
  MAX_COMBINED_CLIP_AND_CULL_DISTANCES = 0x82FA_u32
  TEXTURE_TARGET = 0x1006_u32
  QUERY_TARGET = 0x82EA_u32
  TEXTURE_BINDING = 0x82EB_u32
  GUILTY_CONTEXT_RESET = 0x8253_u32
  INNOCENT_CONTEXT_RESET = 0x8254_u32
  UNKNOWN_CONTEXT_RESET = 0x8255_u32
  RESET_NOTIFICATION_STRATEGY = 0x8256_u32
  LOSE_CONTEXT_ON_RESET = 0x8252_u32
  NO_RESET_NOTIFICATION = 0x8261_u32
  CONTEXT_FLAG_ROBUST_ACCESS_BIT = 0x00000004_u32
  CONTEXT_RELEASE_BEHAVIOR = 0x82FB_u32
  CONTEXT_RELEASE_BEHAVIOR_FLUSH = 0x82FC_u32
  alias PFNGLCLIPCONTROLPROC = (Enum, Enum) -> Void
  alias PFNGLCREATETRANSFORMFEEDBACKSPROC = (Sizei, Uint*) -> Void
  alias PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC = (Uint, Uint, Uint) -> Void
  alias PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC = (Uint, Uint, Uint, Intptr, Sizei) -> Void
  alias PFNGLGETTRANSFORMFEEDBACKIVPROC = (Uint, Enum, Int*) -> Void
  alias PFNGLGETTRANSFORMFEEDBACKI_VPROC = (Uint, Enum, Uint, Int*) -> Void
  alias PFNGLGETTRANSFORMFEEDBACKI64_VPROC = (Uint, Enum, Uint, Int64*) -> Void
  alias PFNGLCREATEBUFFERSPROC = (Sizei, Uint*) -> Void
  alias PFNGLNAMEDBUFFERSTORAGEPROC = (Uint, Sizei, Void*, Bitfield) -> Void
  alias PFNGLNAMEDBUFFERDATAPROC = (Uint, Sizei, Void*, Enum) -> Void
  alias PFNGLNAMEDBUFFERSUBDATAPROC = (Uint, Intptr, Sizei, Void*) -> Void
  alias PFNGLCOPYNAMEDBUFFERSUBDATAPROC = (Uint, Uint, Intptr, Intptr, Sizei) -> Void
  alias PFNGLCLEARNAMEDBUFFERDATAPROC = (Uint, Enum, Enum, Enum, Void*) -> Void
  alias PFNGLCLEARNAMEDBUFFERSUBDATAPROC = (Uint, Enum, Intptr, Sizei, Enum, Enum, Void*) -> Void
  alias PFNGLMAPNAMEDBUFFERPROC = (Uint, Enum) -> Void*
  alias PFNGLMAPNAMEDBUFFERRANGEPROC = (Uint, Intptr, Sizei, Bitfield) -> Void*
  alias PFNGLUNMAPNAMEDBUFFERPROC = Uint -> Boolean
  alias PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC = (Uint, Intptr, Sizei) -> Void
  alias PFNGLGETNAMEDBUFFERPARAMETERIVPROC = (Uint, Enum, Int*) -> Void
  alias PFNGLGETNAMEDBUFFERPARAMETERI64VPROC = (Uint, Enum, Int64*) -> Void
  alias PFNGLGETNAMEDBUFFERPOINTERVPROC = (Uint, Enum, Void**) -> Void
  alias PFNGLGETNAMEDBUFFERSUBDATAPROC = (Uint, Intptr, Sizei, Void*) -> Void
  alias PFNGLCREATEFRAMEBUFFERSPROC = (Sizei, Uint*) -> Void
  alias PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC = (Uint, Enum, Enum, Uint) -> Void
  alias PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC = (Uint, Enum, Int) -> Void
  alias PFNGLNAMEDFRAMEBUFFERTEXTUREPROC = (Uint, Enum, Uint, Int) -> Void
  alias PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC = (Uint, Enum, Uint, Int, Int) -> Void
  alias PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC = (Uint, Enum) -> Void
  alias PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC = (Uint, Sizei, Enum*) -> Void
  alias PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC = (Uint, Enum) -> Void
  alias PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC = (Uint, Sizei, Enum*) -> Void
  alias PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC = (Uint, Sizei, Enum*, Int, Int, Sizei, Sizei) -> Void
  alias PFNGLCLEARNAMEDFRAMEBUFFERIVPROC = (Uint, Enum, Int, Int*) -> Void
  alias PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC = (Uint, Enum, Int, Uint*) -> Void
  alias PFNGLCLEARNAMEDFRAMEBUFFERFVPROC = (Uint, Enum, Int, Float*) -> Void
  alias PFNGLCLEARNAMEDFRAMEBUFFERFIPROC = (Uint, Enum, Float, Int) -> Void
  alias PFNGLBLITNAMEDFRAMEBUFFERPROC = (Uint, Uint, Int, Int, Int, Int, Int, Int, Int, Int, Bitfield, Enum) -> Void
  alias PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC = (Uint, Enum) -> Enum
  alias PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC = (Uint, Enum, Int*) -> Void
  alias PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC = (Uint, Enum, Enum, Int*) -> Void
  alias PFNGLCREATERENDERBUFFERSPROC = (Sizei, Uint*) -> Void
  alias PFNGLNAMEDRENDERBUFFERSTORAGEPROC = (Uint, Enum, Sizei, Sizei) -> Void
  alias PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC = (Uint, Sizei, Enum, Sizei, Sizei) -> Void
  alias PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC = (Uint, Enum, Int*) -> Void
  alias PFNGLCREATETEXTURESPROC = (Enum, Sizei, Uint*) -> Void
  alias PFNGLTEXTUREBUFFERPROC = (Uint, Enum, Uint) -> Void
  alias PFNGLTEXTUREBUFFERRANGEPROC = (Uint, Enum, Uint, Intptr, Sizei) -> Void
  alias PFNGLTEXTURESTORAGE1DPROC = (Uint, Sizei, Enum, Sizei) -> Void
  alias PFNGLTEXTURESTORAGE2DPROC = (Uint, Sizei, Enum, Sizei, Sizei) -> Void
  alias PFNGLTEXTURESTORAGE3DPROC = (Uint, Sizei, Enum, Sizei, Sizei, Sizei) -> Void
  alias PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC = (Uint, Sizei, Enum, Sizei, Sizei, Boolean) -> Void
  alias PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC = (Uint, Sizei, Enum, Sizei, Sizei, Sizei, Boolean) -> Void
  alias PFNGLTEXTURESUBIMAGE1DPROC = (Uint, Int, Int, Sizei, Enum, Enum, Void*) -> Void
  alias PFNGLTEXTURESUBIMAGE2DPROC = (Uint, Int, Int, Int, Sizei, Sizei, Enum, Enum, Void*) -> Void
  alias PFNGLTEXTURESUBIMAGE3DPROC = (Uint, Int, Int, Int, Int, Sizei, Sizei, Sizei, Enum, Enum, Void*) -> Void
  alias PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC = (Uint, Int, Int, Sizei, Enum, Sizei, Void*) -> Void
  alias PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC = (Uint, Int, Int, Int, Sizei, Sizei, Enum, Sizei, Void*) -> Void
  alias PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC = (Uint, Int, Int, Int, Int, Sizei, Sizei, Sizei, Enum, Sizei, Void*) -> Void
  alias PFNGLCOPYTEXTURESUBIMAGE1DPROC = (Uint, Int, Int, Int, Int, Sizei) -> Void
  alias PFNGLCOPYTEXTURESUBIMAGE2DPROC = (Uint, Int, Int, Int, Int, Int, Sizei, Sizei) -> Void
  alias PFNGLCOPYTEXTURESUBIMAGE3DPROC = (Uint, Int, Int, Int, Int, Int, Int, Sizei, Sizei) -> Void
  alias PFNGLTEXTUREPARAMETERFPROC = (Uint, Enum, Float) -> Void
  alias PFNGLTEXTUREPARAMETERFVPROC = (Uint, Enum, Float*) -> Void
  alias PFNGLTEXTUREPARAMETERIPROC = (Uint, Enum, Int) -> Void
  alias PFNGLTEXTUREPARAMETERIIVPROC = (Uint, Enum, Int*) -> Void
  alias PFNGLTEXTUREPARAMETERIUIVPROC = (Uint, Enum, Uint*) -> Void
  alias PFNGLTEXTUREPARAMETERIVPROC = (Uint, Enum, Int*) -> Void
  alias PFNGLGENERATETEXTUREMIPMAPPROC = Uint -> Void
  alias PFNGLBINDTEXTUREUNITPROC = (Uint, Uint) -> Void
  alias PFNGLGETTEXTUREIMAGEPROC = (Uint, Int, Enum, Enum, Sizei, Void*) -> Void
  alias PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC = (Uint, Int, Sizei, Void*) -> Void
  alias PFNGLGETTEXTURELEVELPARAMETERFVPROC = (Uint, Int, Enum, Float*) -> Void
  alias PFNGLGETTEXTURELEVELPARAMETERIVPROC = (Uint, Int, Enum, Int*) -> Void
  alias PFNGLGETTEXTUREPARAMETERFVPROC = (Uint, Enum, Float*) -> Void
  alias PFNGLGETTEXTUREPARAMETERIIVPROC = (Uint, Enum, Int*) -> Void
  alias PFNGLGETTEXTUREPARAMETERIUIVPROC = (Uint, Enum, Uint*) -> Void
  alias PFNGLGETTEXTUREPARAMETERIVPROC = (Uint, Enum, Int*) -> Void
  alias PFNGLCREATEVERTEXARRAYSPROC = (Sizei, Uint*) -> Void
  alias PFNGLDISABLEVERTEXARRAYATTRIBPROC = (Uint, Uint) -> Void
  alias PFNGLENABLEVERTEXARRAYATTRIBPROC = (Uint, Uint) -> Void
  alias PFNGLVERTEXARRAYELEMENTBUFFERPROC = (Uint, Uint) -> Void
  alias PFNGLVERTEXARRAYVERTEXBUFFERPROC = (Uint, Uint, Uint, Intptr, Sizei) -> Void
  alias PFNGLVERTEXARRAYVERTEXBUFFERSPROC = (Uint, Uint, Sizei, Uint*, Intptr*, Sizei*) -> Void
  alias PFNGLVERTEXARRAYATTRIBBINDINGPROC = (Uint, Uint, Uint) -> Void
  alias PFNGLVERTEXARRAYATTRIBFORMATPROC = (Uint, Uint, Int, Enum, Boolean, Uint) -> Void
  alias PFNGLVERTEXARRAYATTRIBIFORMATPROC = (Uint, Uint, Int, Enum, Uint) -> Void
  alias PFNGLVERTEXARRAYATTRIBLFORMATPROC = (Uint, Uint, Int, Enum, Uint) -> Void
  alias PFNGLVERTEXARRAYBINDINGDIVISORPROC = (Uint, Uint, Uint) -> Void
  alias PFNGLGETVERTEXARRAYIVPROC = (Uint, Enum, Int*) -> Void
  alias PFNGLGETVERTEXARRAYINDEXEDIVPROC = (Uint, Uint, Enum, Int*) -> Void
  alias PFNGLGETVERTEXARRAYINDEXED64IVPROC = (Uint, Uint, Enum, Int64*) -> Void
  alias PFNGLCREATESAMPLERSPROC = (Sizei, Uint*) -> Void
  alias PFNGLCREATEPROGRAMPIPELINESPROC = (Sizei, Uint*) -> Void
  alias PFNGLCREATEQUERIESPROC = (Enum, Sizei, Uint*) -> Void
  alias PFNGLMEMORYBARRIERBYREGIONPROC = Bitfield -> Void
  alias PFNGLGETTEXTURESUBIMAGEPROC = (Uint, Int, Int, Int, Int, Sizei, Sizei, Sizei, Enum, Enum, Sizei, Void*) -> Void
  alias PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC = (Uint, Int, Int, Int, Int, Sizei, Sizei, Sizei, Sizei, Void*) -> Void
  alias PFNGLGETGRAPHICSRESETSTATUSPROC = -> Enum
  alias PFNGLGETNCOMPRESSEDTEXIMAGEPROC = (Enum, Int, Sizei, Void*) -> Void
  alias PFNGLGETNTEXIMAGEPROC = (Enum, Int, Enum, Enum, Sizei, Void*) -> Void
  alias PFNGLGETNUNIFORMDVPROC = (Uint, Int, Sizei, Double*) -> Void
  alias PFNGLGETNUNIFORMFVPROC = (Uint, Int, Sizei, Float*) -> Void
  alias PFNGLGETNUNIFORMIVPROC = (Uint, Int, Sizei, Int*) -> Void
  alias PFNGLGETNUNIFORMUIVPROC = (Uint, Int, Sizei, Uint*) -> Void
  alias PFNGLREADNPIXELSPROC = (Int, Int, Sizei, Sizei, Enum, Enum, Sizei, Void*) -> Void
  alias PFNGLGETNMAPDVPROC = (Enum, Enum, Sizei, Double*) -> Void
  alias PFNGLGETNMAPFVPROC = (Enum, Enum, Sizei, Float*) -> Void
  alias PFNGLGETNMAPIVPROC = (Enum, Enum, Sizei, Int*) -> Void
  alias PFNGLGETNPIXELMAPFVPROC = (Enum, Sizei, Float*) -> Void
  alias PFNGLGETNPIXELMAPUIVPROC = (Enum, Sizei, Uint*) -> Void
  alias PFNGLGETNPIXELMAPUSVPROC = (Enum, Sizei, Ushort*) -> Void
  alias PFNGLGETNPOLYGONSTIPPLEPROC = (Sizei, Ubyte*) -> Void
  alias PFNGLGETNCOLORTABLEPROC = (Enum, Enum, Enum, Sizei, Void*) -> Void
  alias PFNGLGETNCONVOLUTIONFILTERPROC = (Enum, Enum, Enum, Sizei, Void*) -> Void
  alias PFNGLGETNSEPARABLEFILTERPROC = (Enum, Enum, Enum, Sizei, Void*, Sizei, Void*, Void*) -> Void
  alias PFNGLGETNHISTOGRAMPROC = (Enum, Boolean, Enum, Enum, Sizei, Void*) -> Void
  alias PFNGLGETNMINMAXPROC = (Enum, Boolean, Enum, Enum, Sizei, Void*) -> Void
  alias PFNGLTEXTUREBARRIERPROC = -> Void
  ARB_ES_2_COMPATIBILITY = 1
  ARB_ES_3_1_COMPATIBILITY = 1
  ARB_ES_3_COMPATIBILITY = 1
  ARB_ARRAYS_OF_ARRAYS = 1
  ARB_BASE_INSTANCE = 1
  ARB_BINDLESS_TEXTURE = 1
  alias Uint64EXT = UInt64
  UNSIGNED_INT64_ARB = 0x140F_u32
  alias PFNGLGETTEXTUREHANDLEARBPROC = Uint -> Uint64
  alias PFNGLGETTEXTURESAMPLERHANDLEARBPROC = (Uint, Uint) -> Uint64
  alias PFNGLMAKETEXTUREHANDLERESIDENTARBPROC = Uint64 -> Void
  alias PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC = Uint64 -> Void
  alias PFNGLGETIMAGEHANDLEARBPROC = (Uint, Int, Boolean, Int, Enum) -> Uint64
  alias PFNGLMAKEIMAGEHANDLERESIDENTARBPROC = (Uint64, Enum) -> Void
  alias PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC = Uint64 -> Void
  alias PFNGLUNIFORMHANDLEUI64ARBPROC = (Int, Uint64) -> Void
  alias PFNGLUNIFORMHANDLEUI64VARBPROC = (Int, Sizei, Uint64*) -> Void
  alias PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC = (Uint, Int, Uint64) -> Void
  alias PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC = (Uint, Int, Sizei, Uint64*) -> Void
  alias PFNGLISTEXTUREHANDLERESIDENTARBPROC = Uint64 -> Boolean
  alias PFNGLISIMAGEHANDLERESIDENTARBPROC = Uint64 -> Boolean
  alias PFNGLVERTEXATTRIBL1UI64ARBPROC = (Uint, Uint64EXT) -> Void
  alias PFNGLVERTEXATTRIBL1UI64VARBPROC = (Uint, Uint64EXT*) -> Void
  alias PFNGLGETVERTEXATTRIBLUI64VARBPROC = (Uint, Enum, Uint64EXT*) -> Void
  ARB_BLEND_FUNC_EXTENDED = 1
  ARB_BUFFER_STORAGE = 1
  ARB_CL_EVENT = 1
  type ClContext = Void*
  type ClEvent = Void*
  SYNC_CL_EVENT_ARB = 0x8240_u32
  SYNC_CL_EVENT_COMPLETE_ARB = 0x8241_u32
  alias PFNGLCREATESYNCFROMCLEVENTARBPROC = (ClContext, ClEvent, Bitfield) -> Sync
  ARB_CLEAR_BUFFER_OBJECT = 1
  ARB_CLEAR_TEXTURE = 1
  ARB_CLIP_CONTROL = 1
  ARB_COLOR_BUFFER_FLOAT = 1
  RGBA_FLOAT_MODE_ARB = 0x8820_u32
  CLAMP_VERTEX_COLOR_ARB = 0x891A_u32
  CLAMP_FRAGMENT_COLOR_ARB = 0x891B_u32
  CLAMP_READ_COLOR_ARB = 0x891C_u32
  FIXED_ONLY_ARB = 0x891D_u32
  alias PFNGLCLAMPCOLORARBPROC = (Enum, Enum) -> Void
  ARB_COMPATIBILITY = 1
  ARB_COMPRESSED_TEXTURE_PIXEL_STORAGE = 1
  ARB_COMPUTE_SHADER = 1
  ARB_COMPUTE_VARIABLE_GROUP_SIZE = 1
  MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB = 0x9344_u32
  MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB = 0x90EB_u32
  MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB = 0x9345_u32
  MAX_COMPUTE_FIXED_GROUP_SIZE_ARB = 0x91BF_u32
  alias PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC = (Uint, Uint, Uint, Uint, Uint, Uint) -> Void
  ARB_CONDITIONAL_RENDER_INVERTED = 1
  ARB_CONSERVATIVE_DEPTH = 1
  ARB_COPY_BUFFER = 1
  COPY_READ_BUFFER_BINDING = 0x8F36_u32
  COPY_WRITE_BUFFER_BINDING = 0x8F37_u32
  ARB_COPY_IMAGE = 1
  ARB_CULL_DISTANCE = 1
  ARB_DEBUG_OUTPUT = 1
  alias DEBUGPROCARB = (Enum, Enum, Uint, Enum, Sizei, Char*, Void*) -> Void
  DEBUG_OUTPUT_SYNCHRONOUS_ARB = 0x8242_u32
  DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB = 0x8243_u32
  DEBUG_CALLBACK_FUNCTION_ARB = 0x8244_u32
  DEBUG_CALLBACK_USER_PARAM_ARB = 0x8245_u32
  DEBUG_SOURCE_API_ARB = 0x8246_u32
  DEBUG_SOURCE_WINDOW_SYSTEM_ARB = 0x8247_u32
  DEBUG_SOURCE_SHADER_COMPILER_ARB = 0x8248_u32
  DEBUG_SOURCE_THIRD_PARTY_ARB = 0x8249_u32
  DEBUG_SOURCE_APPLICATION_ARB = 0x824A_u32
  DEBUG_SOURCE_OTHER_ARB = 0x824B_u32
  DEBUG_TYPE_ERROR_ARB = 0x824C_u32
  DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB = 0x824D_u32
  DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB = 0x824E_u32
  DEBUG_TYPE_PORTABILITY_ARB = 0x824F_u32
  DEBUG_TYPE_PERFORMANCE_ARB = 0x8250_u32
  DEBUG_TYPE_OTHER_ARB = 0x8251_u32
  MAX_DEBUG_MESSAGE_LENGTH_ARB = 0x9143_u32
  MAX_DEBUG_LOGGED_MESSAGES_ARB = 0x9144_u32
  DEBUG_LOGGED_MESSAGES_ARB = 0x9145_u32
  DEBUG_SEVERITY_HIGH_ARB = 0x9146_u32
  DEBUG_SEVERITY_MEDIUM_ARB = 0x9147_u32
  DEBUG_SEVERITY_LOW_ARB = 0x9148_u32
  alias PFNGLDEBUGMESSAGECONTROLARBPROC = (Enum, Enum, Enum, Sizei, Uint*, Boolean) -> Void
  alias PFNGLDEBUGMESSAGEINSERTARBPROC = (Enum, Enum, Uint, Enum, Sizei, Char*) -> Void
  alias PFNGLDEBUGMESSAGECALLBACKARBPROC = (DEBUGPROCARB, Void*) -> Void
  alias PFNGLGETDEBUGMESSAGELOGARBPROC = (Uint, Sizei, Enum*, Enum*, Uint*, Enum*, Sizei*, Char*) -> Uint
  ARB_DEPTH_BUFFER_FLOAT = 1
  ARB_DEPTH_CLAMP = 1
  ARB_DEPTH_TEXTURE = 1
  DEPTH_COMPONENT16_ARB = 0x81A5_u32
  DEPTH_COMPONENT24_ARB = 0x81A6_u32
  DEPTH_COMPONENT32_ARB = 0x81A7_u32
  TEXTURE_DEPTH_SIZE_ARB = 0x884A_u32
  DEPTH_TEXTURE_MODE_ARB = 0x884B_u32
  ARB_DERIVATIVE_CONTROL = 1
  ARB_DIRECT_STATE_ACCESS = 1
  ARB_DRAW_BUFFERS = 1
  MAX_DRAW_BUFFERS_ARB = 0x8824_u32
  DRAW_BUFFER0_ARB = 0x8825_u32
  DRAW_BUFFER1_ARB = 0x8826_u32
  DRAW_BUFFER2_ARB = 0x8827_u32
  DRAW_BUFFER3_ARB = 0x8828_u32
  DRAW_BUFFER4_ARB = 0x8829_u32
  DRAW_BUFFER5_ARB = 0x882A_u32
  DRAW_BUFFER6_ARB = 0x882B_u32
  DRAW_BUFFER7_ARB = 0x882C_u32
  DRAW_BUFFER8_ARB = 0x882D_u32
  DRAW_BUFFER9_ARB = 0x882E_u32
  DRAW_BUFFER10_ARB = 0x882F_u32
  DRAW_BUFFER11_ARB = 0x8830_u32
  DRAW_BUFFER12_ARB = 0x8831_u32
  DRAW_BUFFER13_ARB = 0x8832_u32
  DRAW_BUFFER14_ARB = 0x8833_u32
  DRAW_BUFFER15_ARB = 0x8834_u32
  alias PFNGLDRAWBUFFERSARBPROC = (Sizei, Enum*) -> Void
  ARB_DRAW_BUFFERS_BLEND = 1
  alias PFNGLBLENDEQUATIONIARBPROC = (Uint, Enum) -> Void
  alias PFNGLBLENDEQUATIONSEPARATEIARBPROC = (Uint, Enum, Enum) -> Void
  alias PFNGLBLENDFUNCIARBPROC = (Uint, Enum, Enum) -> Void
  alias PFNGLBLENDFUNCSEPARATEIARBPROC = (Uint, Enum, Enum, Enum, Enum) -> Void
  ARB_DRAW_ELEMENTS_BASE_VERTEX = 1
  ARB_DRAW_INDIRECT = 1
  ARB_DRAW_INSTANCED = 1
  alias PFNGLDRAWARRAYSINSTANCEDARBPROC = (Enum, Int, Sizei, Sizei) -> Void
  alias PFNGLDRAWELEMENTSINSTANCEDARBPROC = (Enum, Sizei, Enum, Void*, Sizei) -> Void
  ARB_ENHANCED_LAYOUTS = 1
  ARB_EXPLICIT_ATTRIB_LOCATION = 1
  ARB_EXPLICIT_UNIFORM_LOCATION = 1
  ARB_FRAGMENT_COORD_CONVENTIONS = 1
  ARB_FRAGMENT_LAYER_VIEWPORT = 1
  ARB_FRAGMENT_PROGRAM = 1
  FRAGMENT_PROGRAM_ARB = 0x8804_u32
  PROGRAM_FORMAT_ASCII_ARB = 0x8875_u32
  PROGRAM_LENGTH_ARB = 0x8627_u32
  PROGRAM_FORMAT_ARB = 0x8876_u32
  PROGRAM_BINDING_ARB = 0x8677_u32
  PROGRAM_INSTRUCTIONS_ARB = 0x88A0_u32
  MAX_PROGRAM_INSTRUCTIONS_ARB = 0x88A1_u32
  PROGRAM_NATIVE_INSTRUCTIONS_ARB = 0x88A2_u32
  MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB = 0x88A3_u32
  PROGRAM_TEMPORARIES_ARB = 0x88A4_u32
  MAX_PROGRAM_TEMPORARIES_ARB = 0x88A5_u32
  PROGRAM_NATIVE_TEMPORARIES_ARB = 0x88A6_u32
  MAX_PROGRAM_NATIVE_TEMPORARIES_ARB = 0x88A7_u32
  PROGRAM_PARAMETERS_ARB = 0x88A8_u32
  MAX_PROGRAM_PARAMETERS_ARB = 0x88A9_u32
  PROGRAM_NATIVE_PARAMETERS_ARB = 0x88AA_u32
  MAX_PROGRAM_NATIVE_PARAMETERS_ARB = 0x88AB_u32
  PROGRAM_ATTRIBS_ARB = 0x88AC_u32
  MAX_PROGRAM_ATTRIBS_ARB = 0x88AD_u32
  PROGRAM_NATIVE_ATTRIBS_ARB = 0x88AE_u32
  MAX_PROGRAM_NATIVE_ATTRIBS_ARB = 0x88AF_u32
  MAX_PROGRAM_LOCAL_PARAMETERS_ARB = 0x88B4_u32
  MAX_PROGRAM_ENV_PARAMETERS_ARB = 0x88B5_u32
  PROGRAM_UNDER_NATIVE_LIMITS_ARB = 0x88B6_u32
  PROGRAM_ALU_INSTRUCTIONS_ARB = 0x8805_u32
  PROGRAM_TEX_INSTRUCTIONS_ARB = 0x8806_u32
  PROGRAM_TEX_INDIRECTIONS_ARB = 0x8807_u32
  PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB = 0x8808_u32
  PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB = 0x8809_u32
  PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB = 0x880A_u32
  MAX_PROGRAM_ALU_INSTRUCTIONS_ARB = 0x880B_u32
  MAX_PROGRAM_TEX_INSTRUCTIONS_ARB = 0x880C_u32
  MAX_PROGRAM_TEX_INDIRECTIONS_ARB = 0x880D_u32
  MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB = 0x880E_u32
  MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB = 0x880F_u32
  MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB = 0x8810_u32
  PROGRAM_STRING_ARB = 0x8628_u32
  PROGRAM_ERROR_POSITION_ARB = 0x864B_u32
  CURRENT_MATRIX_ARB = 0x8641_u32
  TRANSPOSE_CURRENT_MATRIX_ARB = 0x88B7_u32
  CURRENT_MATRIX_STACK_DEPTH_ARB = 0x8640_u32
  MAX_PROGRAM_MATRICES_ARB = 0x862F_u32
  MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB = 0x862E_u32
  MAX_TEXTURE_COORDS_ARB = 0x8871_u32
  MAX_TEXTURE_IMAGE_UNITS_ARB = 0x8872_u32
  PROGRAM_ERROR_STRING_ARB = 0x8874_u32
  MATRIX0_ARB = 0x88C0_u32
  MATRIX1_ARB = 0x88C1_u32
  MATRIX2_ARB = 0x88C2_u32
  MATRIX3_ARB = 0x88C3_u32
  MATRIX4_ARB = 0x88C4_u32
  MATRIX5_ARB = 0x88C5_u32
  MATRIX6_ARB = 0x88C6_u32
  MATRIX7_ARB = 0x88C7_u32
  MATRIX8_ARB = 0x88C8_u32
  MATRIX9_ARB = 0x88C9_u32
  MATRIX10_ARB = 0x88CA_u32
  MATRIX11_ARB = 0x88CB_u32
  MATRIX12_ARB = 0x88CC_u32
  MATRIX13_ARB = 0x88CD_u32
  MATRIX14_ARB = 0x88CE_u32
  MATRIX15_ARB = 0x88CF_u32
  MATRIX16_ARB = 0x88D0_u32
  MATRIX17_ARB = 0x88D1_u32
  MATRIX18_ARB = 0x88D2_u32
  MATRIX19_ARB = 0x88D3_u32
  MATRIX20_ARB = 0x88D4_u32
  MATRIX21_ARB = 0x88D5_u32
  MATRIX22_ARB = 0x88D6_u32
  MATRIX23_ARB = 0x88D7_u32
  MATRIX24_ARB = 0x88D8_u32
  MATRIX25_ARB = 0x88D9_u32
  MATRIX26_ARB = 0x88DA_u32
  MATRIX27_ARB = 0x88DB_u32
  MATRIX28_ARB = 0x88DC_u32
  MATRIX29_ARB = 0x88DD_u32
  MATRIX30_ARB = 0x88DE_u32
  MATRIX31_ARB = 0x88DF_u32
  alias PFNGLPROGRAMSTRINGARBPROC = (Enum, Enum, Sizei, Void*) -> Void
  alias PFNGLBINDPROGRAMARBPROC = (Enum, Uint) -> Void
  alias PFNGLDELETEPROGRAMSARBPROC = (Sizei, Uint*) -> Void
  alias PFNGLGENPROGRAMSARBPROC = (Sizei, Uint*) -> Void
  alias PFNGLPROGRAMENVPARAMETER4DARBPROC = (Enum, Uint, Double, Double, Double, Double) -> Void
  alias PFNGLPROGRAMENVPARAMETER4DVARBPROC = (Enum, Uint, Double*) -> Void
  alias PFNGLPROGRAMENVPARAMETER4FARBPROC = (Enum, Uint, Float, Float, Float, Float) -> Void
  alias PFNGLPROGRAMENVPARAMETER4FVARBPROC = (Enum, Uint, Float*) -> Void
  alias PFNGLPROGRAMLOCALPARAMETER4DARBPROC = (Enum, Uint, Double, Double, Double, Double) -> Void
  alias PFNGLPROGRAMLOCALPARAMETER4DVARBPROC = (Enum, Uint, Double*) -> Void
  alias PFNGLPROGRAMLOCALPARAMETER4FARBPROC = (Enum, Uint, Float, Float, Float, Float) -> Void
  alias PFNGLPROGRAMLOCALPARAMETER4FVARBPROC = (Enum, Uint, Float*) -> Void
  alias PFNGLGETPROGRAMENVPARAMETERDVARBPROC = (Enum, Uint, Double*) -> Void
  alias PFNGLGETPROGRAMENVPARAMETERFVARBPROC = (Enum, Uint, Float*) -> Void
  alias PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC = (Enum, Uint, Double*) -> Void
  alias PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC = (Enum, Uint, Float*) -> Void
  alias PFNGLGETPROGRAMIVARBPROC = (Enum, Enum, Int*) -> Void
  alias PFNGLGETPROGRAMSTRINGARBPROC = (Enum, Enum, Void*) -> Void
  alias PFNGLISPROGRAMARBPROC = Uint -> Boolean
  ARB_FRAGMENT_PROGRAM_SHADOW = 1
  ARB_FRAGMENT_SHADER = 1
  FRAGMENT_SHADER_ARB = 0x8B30_u32
  MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB = 0x8B49_u32
  FRAGMENT_SHADER_DERIVATIVE_HINT_ARB = 0x8B8B_u32
  ARB_FRAMEBUFFER_NO_ATTACHMENTS = 1
  ARB_FRAMEBUFFER_OBJECT = 1
  ARB_FRAMEBUFFER_S_RGB = 1
  ARB_GEOMETRY_SHADER4 = 1
  LINES_ADJACENCY_ARB = 0x000A_u32
  LINE_STRIP_ADJACENCY_ARB = 0x000B_u32
  TRIANGLES_ADJACENCY_ARB = 0x000C_u32
  TRIANGLE_STRIP_ADJACENCY_ARB = 0x000D_u32
  PROGRAM_POINT_SIZE_ARB = 0x8642_u32
  MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB = 0x8C29_u32
  FRAMEBUFFER_ATTACHMENT_LAYERED_ARB = 0x8DA7_u32
  FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB = 0x8DA8_u32
  FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB = 0x8DA9_u32
  GEOMETRY_SHADER_ARB = 0x8DD9_u32
  GEOMETRY_VERTICES_OUT_ARB = 0x8DDA_u32
  GEOMETRY_INPUT_TYPE_ARB = 0x8DDB_u32
  GEOMETRY_OUTPUT_TYPE_ARB = 0x8DDC_u32
  MAX_GEOMETRY_VARYING_COMPONENTS_ARB = 0x8DDD_u32
  MAX_VERTEX_VARYING_COMPONENTS_ARB = 0x8DDE_u32
  MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB = 0x8DDF_u32
  MAX_GEOMETRY_OUTPUT_VERTICES_ARB = 0x8DE0_u32
  MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB = 0x8DE1_u32
  alias PFNGLPROGRAMPARAMETERIARBPROC = (Uint, Enum, Int) -> Void
  alias PFNGLFRAMEBUFFERTEXTUREARBPROC = (Enum, Enum, Uint, Int) -> Void
  alias PFNGLFRAMEBUFFERTEXTURELAYERARBPROC = (Enum, Enum, Uint, Int, Int) -> Void
  alias PFNGLFRAMEBUFFERTEXTUREFACEARBPROC = (Enum, Enum, Uint, Int, Enum) -> Void
  ARB_GET_PROGRAM_BINARY = 1
  ARB_GET_TEXTURE_SUB_IMAGE = 1
  ARB_GPU_SHADER5 = 1
  ARB_GPU_SHADER_FP64 = 1
  ARB_HALF_FLOAT_PIXEL = 1
  alias HalfARB = UInt16
  HALF_FLOAT_ARB = 0x140B_u32
  ARB_HALF_FLOAT_VERTEX = 1
  ARB_INDIRECT_PARAMETERS = 1
  PARAMETER_BUFFER_ARB = 0x80EE_u32
  PARAMETER_BUFFER_BINDING_ARB = 0x80EF_u32
  alias PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC = (Enum, Intptr, Intptr, Sizei, Sizei) -> Void
  alias PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC = (Enum, Enum, Intptr, Intptr, Sizei, Sizei) -> Void
  ARB_INSTANCED_ARRAYS = 1
  VERTEX_ATTRIB_ARRAY_DIVISOR_ARB = 0x88FE_u32
  alias PFNGLVERTEXATTRIBDIVISORARBPROC = (Uint, Uint) -> Void
  ARB_INTERNALFORMAT_QUERY = 1
  ARB_INTERNALFORMAT_QUERY2 = 1
  SRGB_DECODE_ARB = 0x8299_u32
  ARB_INVALIDATE_SUBDATA = 1
  ARB_MAP_BUFFER_ALIGNMENT = 1
  ARB_MAP_BUFFER_RANGE = 1
  ARB_MATRIX_PALETTE = 1
  MATRIX_PALETTE_ARB = 0x8840_u32
  MAX_MATRIX_PALETTE_STACK_DEPTH_ARB = 0x8841_u32
  MAX_PALETTE_MATRICES_ARB = 0x8842_u32
  CURRENT_PALETTE_MATRIX_ARB = 0x8843_u32
  MATRIX_INDEX_ARRAY_ARB = 0x8844_u32
  CURRENT_MATRIX_INDEX_ARB = 0x8845_u32
  MATRIX_INDEX_ARRAY_SIZE_ARB = 0x8846_u32
  MATRIX_INDEX_ARRAY_TYPE_ARB = 0x8847_u32
  MATRIX_INDEX_ARRAY_STRIDE_ARB = 0x8848_u32
  MATRIX_INDEX_ARRAY_POINTER_ARB = 0x8849_u32
  alias PFNGLCURRENTPALETTEMATRIXARBPROC = Int -> Void
  alias PFNGLMATRIXINDEXUBVARBPROC = (Int, Ubyte*) -> Void
  alias PFNGLMATRIXINDEXUSVARBPROC = (Int, Ushort*) -> Void
  alias PFNGLMATRIXINDEXUIVARBPROC = (Int, Uint*) -> Void
  alias PFNGLMATRIXINDEXPOINTERARBPROC = (Int, Enum, Sizei, Void*) -> Void
  ARB_MULTI_BIND = 1
  ARB_MULTI_DRAW_INDIRECT = 1
  ARB_MULTISAMPLE = 1
  MULTISAMPLE_ARB = 0x809D_u32
  SAMPLE_ALPHA_TO_COVERAGE_ARB = 0x809E_u32
  SAMPLE_ALPHA_TO_ONE_ARB = 0x809F_u32
  SAMPLE_COVERAGE_ARB = 0x80A0_u32
  SAMPLE_BUFFERS_ARB = 0x80A8_u32
  SAMPLES_ARB = 0x80A9_u32
  SAMPLE_COVERAGE_VALUE_ARB = 0x80AA_u32
  SAMPLE_COVERAGE_INVERT_ARB = 0x80AB_u32
  MULTISAMPLE_BIT_ARB = 0x20000000_u32
  alias PFNGLSAMPLECOVERAGEARBPROC = (Float, Boolean) -> Void
  ARB_OCCLUSION_QUERY = 1
  QUERY_COUNTER_BITS_ARB = 0x8864_u32
  CURRENT_QUERY_ARB = 0x8865_u32
  QUERY_RESULT_ARB = 0x8866_u32
  QUERY_RESULT_AVAILABLE_ARB = 0x8867_u32
  SAMPLES_PASSED_ARB = 0x8914_u32
  alias PFNGLGENQUERIESARBPROC = (Sizei, Uint*) -> Void
  alias PFNGLDELETEQUERIESARBPROC = (Sizei, Uint*) -> Void
  alias PFNGLISQUERYARBPROC = Uint -> Boolean
  alias PFNGLBEGINQUERYARBPROC = (Enum, Uint) -> Void
  alias PFNGLENDQUERYARBPROC = Enum -> Void
  alias PFNGLGETQUERYIVARBPROC = (Enum, Enum, Int*) -> Void
  alias PFNGLGETQUERYOBJECTIVARBPROC = (Uint, Enum, Int*) -> Void
  alias PFNGLGETQUERYOBJECTUIVARBPROC = (Uint, Enum, Uint*) -> Void
  ARB_OCCLUSION_QUERY2 = 1
  ARB_PIPELINE_STATISTICS_QUERY = 1
  VERTICES_SUBMITTED_ARB = 0x82EE_u32
  PRIMITIVES_SUBMITTED_ARB = 0x82EF_u32
  VERTEX_SHADER_INVOCATIONS_ARB = 0x82F0_u32
  TESS_CONTROL_SHADER_PATCHES_ARB = 0x82F1_u32
  TESS_EVALUATION_SHADER_INVOCATIONS_ARB = 0x82F2_u32
  GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB = 0x82F3_u32
  FRAGMENT_SHADER_INVOCATIONS_ARB = 0x82F4_u32
  COMPUTE_SHADER_INVOCATIONS_ARB = 0x82F5_u32
  CLIPPING_INPUT_PRIMITIVES_ARB = 0x82F6_u32
  CLIPPING_OUTPUT_PRIMITIVES_ARB = 0x82F7_u32
  ARB_PIXEL_BUFFER_OBJECT = 1
  PIXEL_PACK_BUFFER_ARB = 0x88EB_u32
  PIXEL_UNPACK_BUFFER_ARB = 0x88EC_u32
  PIXEL_PACK_BUFFER_BINDING_ARB = 0x88ED_u32
  PIXEL_UNPACK_BUFFER_BINDING_ARB = 0x88EF_u32
  ARB_POINT_PARAMETERS = 1
  POINT_SIZE_MIN_ARB = 0x8126_u32
  POINT_SIZE_MAX_ARB = 0x8127_u32
  POINT_FADE_THRESHOLD_SIZE_ARB = 0x8128_u32
  POINT_DISTANCE_ATTENUATION_ARB = 0x8129_u32
  alias PFNGLPOINTPARAMETERFARBPROC = (Enum, Float) -> Void
  alias PFNGLPOINTPARAMETERFVARBPROC = (Enum, Float*) -> Void
  ARB_POINT_SPRITE = 1
  POINT_SPRITE_ARB = 0x8861_u32
  COORD_REPLACE_ARB = 0x8862_u32
  ARB_PROGRAM_INTERFACE_QUERY = 1
  ARB_PROVOKING_VERTEX = 1
  ARB_QUERY_BUFFER_OBJECT = 1
  ARB_ROBUST_BUFFER_ACCESS_BEHAVIOR = 1
  ARB_ROBUSTNESS = 1
  CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB = 0x00000004_u32
  LOSE_CONTEXT_ON_RESET_ARB = 0x8252_u32
  GUILTY_CONTEXT_RESET_ARB = 0x8253_u32
  INNOCENT_CONTEXT_RESET_ARB = 0x8254_u32
  UNKNOWN_CONTEXT_RESET_ARB = 0x8255_u32
  RESET_NOTIFICATION_STRATEGY_ARB = 0x8256_u32
  NO_RESET_NOTIFICATION_ARB = 0x8261_u32
  alias PFNGLGETGRAPHICSRESETSTATUSARBPROC = -> Enum
  alias PFNGLGETNTEXIMAGEARBPROC = (Enum, Int, Enum, Enum, Sizei, Void*) -> Void
  alias PFNGLREADNPIXELSARBPROC = (Int, Int, Sizei, Sizei, Enum, Enum, Sizei, Void*) -> Void
  alias PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC = (Enum, Int, Sizei, Void*) -> Void
  alias PFNGLGETNUNIFORMFVARBPROC = (Uint, Int, Sizei, Float*) -> Void
  alias PFNGLGETNUNIFORMIVARBPROC = (Uint, Int, Sizei, Int*) -> Void
  alias PFNGLGETNUNIFORMUIVARBPROC = (Uint, Int, Sizei, Uint*) -> Void
  alias PFNGLGETNUNIFORMDVARBPROC = (Uint, Int, Sizei, Double*) -> Void
  alias PFNGLGETNMAPDVARBPROC = (Enum, Enum, Sizei, Double*) -> Void
  alias PFNGLGETNMAPFVARBPROC = (Enum, Enum, Sizei, Float*) -> Void
  alias PFNGLGETNMAPIVARBPROC = (Enum, Enum, Sizei, Int*) -> Void
  alias PFNGLGETNPIXELMAPFVARBPROC = (Enum, Sizei, Float*) -> Void
  alias PFNGLGETNPIXELMAPUIVARBPROC = (Enum, Sizei, Uint*) -> Void
  alias PFNGLGETNPIXELMAPUSVARBPROC = (Enum, Sizei, Ushort*) -> Void
  alias PFNGLGETNPOLYGONSTIPPLEARBPROC = (Sizei, Ubyte*) -> Void
  alias PFNGLGETNCOLORTABLEARBPROC = (Enum, Enum, Enum, Sizei, Void*) -> Void
  alias PFNGLGETNCONVOLUTIONFILTERARBPROC = (Enum, Enum, Enum, Sizei, Void*) -> Void
  alias PFNGLGETNSEPARABLEFILTERARBPROC = (Enum, Enum, Enum, Sizei, Void*, Sizei, Void*, Void*) -> Void
  alias PFNGLGETNHISTOGRAMARBPROC = (Enum, Boolean, Enum, Enum, Sizei, Void*) -> Void
  alias PFNGLGETNMINMAXARBPROC = (Enum, Boolean, Enum, Enum, Sizei, Void*) -> Void
  ARB_ROBUSTNESS_ISOLATION = 1
  ARB_SAMPLE_SHADING = 1
  SAMPLE_SHADING_ARB = 0x8C36_u32
  MIN_SAMPLE_SHADING_VALUE_ARB = 0x8C37_u32
  alias PFNGLMINSAMPLESHADINGARBPROC = Float -> Void
  ARB_SAMPLER_OBJECTS = 1
  ARB_SEAMLESS_CUBE_MAP = 1
  ARB_SEAMLESS_CUBEMAP_PER_TEXTURE = 1
  ARB_SEPARATE_SHADER_OBJECTS = 1
  ARB_SHADER_ATOMIC_COUNTERS = 1
  ARB_SHADER_BIT_ENCODING = 1
  ARB_SHADER_DRAW_PARAMETERS = 1
  ARB_SHADER_GROUP_VOTE = 1
  ARB_SHADER_IMAGE_LOAD_STORE = 1
  ARB_SHADER_IMAGE_SIZE = 1
  ARB_SHADER_OBJECTS = 1
  alias HandleARB = UInt32
  alias CharARB = UInt8
  PROGRAM_OBJECT_ARB = 0x8B40_u32
  SHADER_OBJECT_ARB = 0x8B48_u32
  OBJECT_TYPE_ARB = 0x8B4E_u32
  OBJECT_SUBTYPE_ARB = 0x8B4F_u32
  FLOAT_VEC2_ARB = 0x8B50_u32
  FLOAT_VEC3_ARB = 0x8B51_u32
  FLOAT_VEC4_ARB = 0x8B52_u32
  INT_VEC2_ARB = 0x8B53_u32
  INT_VEC3_ARB = 0x8B54_u32
  INT_VEC4_ARB = 0x8B55_u32
  BOOL_ARB = 0x8B56_u32
  BOOL_VEC2_ARB = 0x8B57_u32
  BOOL_VEC3_ARB = 0x8B58_u32
  BOOL_VEC4_ARB = 0x8B59_u32
  FLOAT_MAT2_ARB = 0x8B5A_u32
  FLOAT_MAT3_ARB = 0x8B5B_u32
  FLOAT_MAT4_ARB = 0x8B5C_u32
  SAMPLER_1D_ARB = 0x8B5D_u32
  SAMPLER_2D_ARB = 0x8B5E_u32
  SAMPLER_3D_ARB = 0x8B5F_u32
  SAMPLER_CUBE_ARB = 0x8B60_u32
  SAMPLER_1D_SHADOW_ARB = 0x8B61_u32
  SAMPLER_2D_SHADOW_ARB = 0x8B62_u32
  SAMPLER_2D_RECT_ARB = 0x8B63_u32
  SAMPLER_2D_RECT_SHADOW_ARB = 0x8B64_u32
  OBJECT_DELETE_STATUS_ARB = 0x8B80_u32
  OBJECT_COMPILE_STATUS_ARB = 0x8B81_u32
  OBJECT_LINK_STATUS_ARB = 0x8B82_u32
  OBJECT_VALIDATE_STATUS_ARB = 0x8B83_u32
  OBJECT_INFO_LOG_LENGTH_ARB = 0x8B84_u32
  OBJECT_ATTACHED_OBJECTS_ARB = 0x8B85_u32
  OBJECT_ACTIVE_UNIFORMS_ARB = 0x8B86_u32
  OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB = 0x8B87_u32
  OBJECT_SHADER_SOURCE_LENGTH_ARB = 0x8B88_u32
  alias PFNGLDELETEOBJECTARBPROC = HandleARB -> Void
  alias PFNGLGETHANDLEARBPROC = Enum -> HandleARB
  alias PFNGLDETACHOBJECTARBPROC = (HandleARB, HandleARB) -> Void
  alias PFNGLCREATESHADEROBJECTARBPROC = Enum -> HandleARB
  alias PFNGLSHADERSOURCEARBPROC = (HandleARB, Sizei, CharARB**, Int*) -> Void
  alias PFNGLCOMPILESHADERARBPROC = HandleARB -> Void
  alias PFNGLCREATEPROGRAMOBJECTARBPROC = -> HandleARB
  alias PFNGLATTACHOBJECTARBPROC = (HandleARB, HandleARB) -> Void
  alias PFNGLLINKPROGRAMARBPROC = HandleARB -> Void
  alias PFNGLUSEPROGRAMOBJECTARBPROC = HandleARB -> Void
  alias PFNGLVALIDATEPROGRAMARBPROC = HandleARB -> Void
  alias PFNGLUNIFORM1FARBPROC = (Int, Float) -> Void
  alias PFNGLUNIFORM2FARBPROC = (Int, Float, Float) -> Void
  alias PFNGLUNIFORM3FARBPROC = (Int, Float, Float, Float) -> Void
  alias PFNGLUNIFORM4FARBPROC = (Int, Float, Float, Float, Float) -> Void
  alias PFNGLUNIFORM1IARBPROC = (Int, Int) -> Void
  alias PFNGLUNIFORM2IARBPROC = (Int, Int, Int) -> Void
  alias PFNGLUNIFORM3IARBPROC = (Int, Int, Int, Int) -> Void
  alias PFNGLUNIFORM4IARBPROC = (Int, Int, Int, Int, Int) -> Void
  alias PFNGLUNIFORM1FVARBPROC = (Int, Sizei, Float*) -> Void
  alias PFNGLUNIFORM2FVARBPROC = (Int, Sizei, Float*) -> Void
  alias PFNGLUNIFORM3FVARBPROC = (Int, Sizei, Float*) -> Void
  alias PFNGLUNIFORM4FVARBPROC = (Int, Sizei, Float*) -> Void
  alias PFNGLUNIFORM1IVARBPROC = (Int, Sizei, Int*) -> Void
  alias PFNGLUNIFORM2IVARBPROC = (Int, Sizei, Int*) -> Void
  alias PFNGLUNIFORM3IVARBPROC = (Int, Sizei, Int*) -> Void
  alias PFNGLUNIFORM4IVARBPROC = (Int, Sizei, Int*) -> Void
  alias PFNGLUNIFORMMATRIX2FVARBPROC = (Int, Sizei, Boolean, Float*) -> Void
  alias PFNGLUNIFORMMATRIX3FVARBPROC = (Int, Sizei, Boolean, Float*) -> Void
  alias PFNGLUNIFORMMATRIX4FVARBPROC = (Int, Sizei, Boolean, Float*) -> Void
  alias PFNGLGETOBJECTPARAMETERFVARBPROC = (HandleARB, Enum, Float*) -> Void
  alias PFNGLGETOBJECTPARAMETERIVARBPROC = (HandleARB, Enum, Int*) -> Void
  alias PFNGLGETINFOLOGARBPROC = (HandleARB, Sizei, Sizei*, CharARB*) -> Void
  alias PFNGLGETATTACHEDOBJECTSARBPROC = (HandleARB, Sizei, Sizei*, HandleARB*) -> Void
  alias PFNGLGETUNIFORMLOCATIONARBPROC = (HandleARB, CharARB*) -> Int
  alias PFNGLGETACTIVEUNIFORMARBPROC = (HandleARB, Uint, Sizei, Sizei*, Int*, Enum*, CharARB*) -> Void
  alias PFNGLGETUNIFORMFVARBPROC = (HandleARB, Int, Float*) -> Void
  alias PFNGLGETUNIFORMIVARBPROC = (HandleARB, Int, Int*) -> Void
  alias PFNGLGETSHADERSOURCEARBPROC = (HandleARB, Sizei, Sizei*, CharARB*) -> Void
  ARB_SHADER_PRECISION = 1
  ARB_SHADER_STENCIL_EXPORT = 1
  ARB_SHADER_STORAGE_BUFFER_OBJECT = 1
  ARB_SHADER_SUBROUTINE = 1
  ARB_SHADER_TEXTURE_IMAGE_SAMPLES = 1
  ARB_SHADER_TEXTURE_LOD = 1
  ARB_SHADING_LANGUAGE_100 = 1
  SHADING_LANGUAGE_VERSION_ARB = 0x8B8C_u32
  ARB_SHADING_LANGUAGE_420PACK = 1
  ARB_SHADING_LANGUAGE_INCLUDE = 1
  SHADER_INCLUDE_ARB = 0x8DAE_u32
  NAMED_STRING_LENGTH_ARB = 0x8DE9_u32
  NAMED_STRING_TYPE_ARB = 0x8DEA_u32
  alias PFNGLNAMEDSTRINGARBPROC = (Enum, Int, Char*, Int, Char*) -> Void
  alias PFNGLDELETENAMEDSTRINGARBPROC = (Int, Char*) -> Void
  alias PFNGLCOMPILESHADERINCLUDEARBPROC = (Uint, Sizei, Char**, Int*) -> Void
  alias PFNGLISNAMEDSTRINGARBPROC = (Int, Char*) -> Boolean
  alias PFNGLGETNAMEDSTRINGARBPROC = (Int, Char*, Sizei, Int*, Char*) -> Void
  alias PFNGLGETNAMEDSTRINGIVARBPROC = (Int, Char*, Enum, Int*) -> Void
  ARB_SHADING_LANGUAGE_PACKING = 1
  ARB_SHADOW = 1
  TEXTURE_COMPARE_MODE_ARB = 0x884C_u32
  TEXTURE_COMPARE_FUNC_ARB = 0x884D_u32
  COMPARE_R_TO_TEXTURE_ARB = 0x884E_u32
  ARB_SHADOW_AMBIENT = 1
  TEXTURE_COMPARE_FAIL_VALUE_ARB = 0x80BF_u32
  ARB_SPARSE_BUFFER = 1
  SPARSE_STORAGE_BIT_ARB = 0x0400_u32
  SPARSE_BUFFER_PAGE_SIZE_ARB = 0x82F8_u32
  alias PFNGLBUFFERPAGECOMMITMENTARBPROC = (Enum, Intptr, Sizei, Boolean) -> Void
  alias PFNGLNAMEDBUFFERPAGECOMMITMENTEXTPROC = (Uint, Intptr, Sizei, Boolean) -> Void
  alias PFNGLNAMEDBUFFERPAGECOMMITMENTARBPROC = (Uint, Intptr, Sizei, Boolean) -> Void
  ARB_SPARSE_TEXTURE = 1
  TEXTURE_SPARSE_ARB = 0x91A6_u32
  VIRTUAL_PAGE_SIZE_INDEX_ARB = 0x91A7_u32
  MIN_SPARSE_LEVEL_ARB = 0x919B_u32
  NUM_VIRTUAL_PAGE_SIZES_ARB = 0x91A8_u32
  VIRTUAL_PAGE_SIZE_X_ARB = 0x9195_u32
  VIRTUAL_PAGE_SIZE_Y_ARB = 0x9196_u32
  VIRTUAL_PAGE_SIZE_Z_ARB = 0x9197_u32
  MAX_SPARSE_TEXTURE_SIZE_ARB = 0x9198_u32
  MAX_SPARSE_3D_TEXTURE_SIZE_ARB = 0x9199_u32
  MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB = 0x919A_u32
  SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB = 0x91A9_u32
  alias PFNGLTEXPAGECOMMITMENTARBPROC = (Enum, Int, Int, Int, Int, Sizei, Sizei, Sizei, Boolean) -> Void
  ARB_STENCIL_TEXTURING = 1
  ARB_SYNC = 1
  ARB_TESSELLATION_SHADER = 1
  ARB_TEXTURE_BARRIER = 1
  ARB_TEXTURE_BORDER_CLAMP = 1
  CLAMP_TO_BORDER_ARB = 0x812D_u32
  ARB_TEXTURE_BUFFER_OBJECT = 1
  TEXTURE_BUFFER_ARB = 0x8C2A_u32
  MAX_TEXTURE_BUFFER_SIZE_ARB = 0x8C2B_u32
  TEXTURE_BINDING_BUFFER_ARB = 0x8C2C_u32
  TEXTURE_BUFFER_DATA_STORE_BINDING_ARB = 0x8C2D_u32
  TEXTURE_BUFFER_FORMAT_ARB = 0x8C2E_u32
  alias PFNGLTEXBUFFERARBPROC = (Enum, Enum, Uint) -> Void
  ARB_TEXTURE_BUFFER_OBJECT_RGB32 = 1
  ARB_TEXTURE_BUFFER_RANGE = 1
  ARB_TEXTURE_COMPRESSION = 1
  COMPRESSED_ALPHA_ARB = 0x84E9_u32
  COMPRESSED_LUMINANCE_ARB = 0x84EA_u32
  COMPRESSED_LUMINANCE_ALPHA_ARB = 0x84EB_u32
  COMPRESSED_INTENSITY_ARB = 0x84EC_u32
  COMPRESSED_RGB_ARB = 0x84ED_u32
  COMPRESSED_RGBA_ARB = 0x84EE_u32
  TEXTURE_COMPRESSION_HINT_ARB = 0x84EF_u32
  TEXTURE_COMPRESSED_IMAGE_SIZE_ARB = 0x86A0_u32
  TEXTURE_COMPRESSED_ARB = 0x86A1_u32
  NUM_COMPRESSED_TEXTURE_FORMATS_ARB = 0x86A2_u32
  COMPRESSED_TEXTURE_FORMATS_ARB = 0x86A3_u32
  alias PFNGLCOMPRESSEDTEXIMAGE3DARBPROC = (Enum, Int, Enum, Sizei, Sizei, Sizei, Int, Sizei, Void*) -> Void
  alias PFNGLCOMPRESSEDTEXIMAGE2DARBPROC = (Enum, Int, Enum, Sizei, Sizei, Int, Sizei, Void*) -> Void
  alias PFNGLCOMPRESSEDTEXIMAGE1DARBPROC = (Enum, Int, Enum, Sizei, Int, Sizei, Void*) -> Void
  alias PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC = (Enum, Int, Int, Int, Int, Sizei, Sizei, Sizei, Enum, Sizei, Void*) -> Void
  alias PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC = (Enum, Int, Int, Int, Sizei, Sizei, Enum, Sizei, Void*) -> Void
  alias PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC = (Enum, Int, Int, Sizei, Enum, Sizei, Void*) -> Void
  alias PFNGLGETCOMPRESSEDTEXIMAGEARBPROC = (Enum, Int, Void*) -> Void
  ARB_TEXTURE_COMPRESSION_BPTC = 1
  COMPRESSED_RGBA_BPTC_UNORM_ARB = 0x8E8C_u32
  COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB = 0x8E8D_u32
  COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB = 0x8E8E_u32
  COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB = 0x8E8F_u32
  ARB_TEXTURE_COMPRESSION_RGTC = 1
  ARB_TEXTURE_CUBE_MAP = 1
  NORMAL_MAP_ARB = 0x8511_u32
  REFLECTION_MAP_ARB = 0x8512_u32
  TEXTURE_CUBE_MAP_ARB = 0x8513_u32
  TEXTURE_BINDING_CUBE_MAP_ARB = 0x8514_u32
  TEXTURE_CUBE_MAP_POSITIVE_X_ARB = 0x8515_u32
  TEXTURE_CUBE_MAP_NEGATIVE_X_ARB = 0x8516_u32
  TEXTURE_CUBE_MAP_POSITIVE_Y_ARB = 0x8517_u32
  TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB = 0x8518_u32
  TEXTURE_CUBE_MAP_POSITIVE_Z_ARB = 0x8519_u32
  TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB = 0x851A_u32
  PROXY_TEXTURE_CUBE_MAP_ARB = 0x851B_u32
  MAX_CUBE_MAP_TEXTURE_SIZE_ARB = 0x851C_u32
  ARB_TEXTURE_CUBE_MAP_ARRAY = 1
  TEXTURE_CUBE_MAP_ARRAY_ARB = 0x9009_u32
  TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB = 0x900A_u32
  PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB = 0x900B_u32
  SAMPLER_CUBE_MAP_ARRAY_ARB = 0x900C_u32
  SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB = 0x900D_u32
  INT_SAMPLER_CUBE_MAP_ARRAY_ARB = 0x900E_u32
  UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB = 0x900F_u32
  ARB_TEXTURE_ENV_ADD = 1
  ARB_TEXTURE_ENV_COMBINE = 1
  COMBINE_ARB = 0x8570_u32
  COMBINE_RGB_ARB = 0x8571_u32
  COMBINE_ALPHA_ARB = 0x8572_u32
  SOURCE0_RGB_ARB = 0x8580_u32
  SOURCE1_RGB_ARB = 0x8581_u32
  SOURCE2_RGB_ARB = 0x8582_u32
  SOURCE0_ALPHA_ARB = 0x8588_u32
  SOURCE1_ALPHA_ARB = 0x8589_u32
  SOURCE2_ALPHA_ARB = 0x858A_u32
  OPERAND0_RGB_ARB = 0x8590_u32
  OPERAND1_RGB_ARB = 0x8591_u32
  OPERAND2_RGB_ARB = 0x8592_u32
  OPERAND0_ALPHA_ARB = 0x8598_u32
  OPERAND1_ALPHA_ARB = 0x8599_u32
  OPERAND2_ALPHA_ARB = 0x859A_u32
  RGB_SCALE_ARB = 0x8573_u32
  ADD_SIGNED_ARB = 0x8574_u32
  INTERPOLATE_ARB = 0x8575_u32
  SUBTRACT_ARB = 0x84E7_u32
  CONSTANT_ARB = 0x8576_u32
  PRIMARY_COLOR_ARB = 0x8577_u32
  PREVIOUS_ARB = 0x8578_u32
  ARB_TEXTURE_ENV_CROSSBAR = 1
  ARB_TEXTURE_ENV_DOT3 = 1
  DOT3_RGB_ARB = 0x86AE_u32
  DOT3_RGBA_ARB = 0x86AF_u32
  ARB_TEXTURE_FLOAT = 1
  TEXTURE_RED_TYPE_ARB = 0x8C10_u32
  TEXTURE_GREEN_TYPE_ARB = 0x8C11_u32
  TEXTURE_BLUE_TYPE_ARB = 0x8C12_u32
  TEXTURE_ALPHA_TYPE_ARB = 0x8C13_u32
  TEXTURE_LUMINANCE_TYPE_ARB = 0x8C14_u32
  TEXTURE_INTENSITY_TYPE_ARB = 0x8C15_u32
  TEXTURE_DEPTH_TYPE_ARB = 0x8C16_u32
  UNSIGNED_NORMALIZED_ARB = 0x8C17_u32
  RGBA32F_ARB = 0x8814_u32
  RGB32F_ARB = 0x8815_u32
  ALPHA32F_ARB = 0x8816_u32
  INTENSITY32F_ARB = 0x8817_u32
  LUMINANCE32F_ARB = 0x8818_u32
  LUMINANCE_ALPHA32F_ARB = 0x8819_u32
  RGBA16F_ARB = 0x881A_u32
  RGB16F_ARB = 0x881B_u32
  ALPHA16F_ARB = 0x881C_u32
  INTENSITY16F_ARB = 0x881D_u32
  LUMINANCE16F_ARB = 0x881E_u32
  LUMINANCE_ALPHA16F_ARB = 0x881F_u32
  ARB_TEXTURE_GATHER = 1
  MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB = 0x8E5E_u32
  MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB = 0x8E5F_u32
  MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB = 0x8F9F_u32
  ARB_TEXTURE_MIRROR_CLAMP_TO_EDGE = 1
  ARB_TEXTURE_MIRRORED_REPEAT = 1
  MIRRORED_REPEAT_ARB = 0x8370_u32
  ARB_TEXTURE_MULTISAMPLE = 1
  ARB_TEXTURE_NON_POWER_OF_TWO = 1
  ARB_TEXTURE_QUERY_LEVELS = 1
  ARB_TEXTURE_QUERY_LOD = 1
  ARB_TEXTURE_RECTANGLE = 1
  TEXTURE_RECTANGLE_ARB = 0x84F5_u32
  TEXTURE_BINDING_RECTANGLE_ARB = 0x84F6_u32
  PROXY_TEXTURE_RECTANGLE_ARB = 0x84F7_u32
  MAX_RECTANGLE_TEXTURE_SIZE_ARB = 0x84F8_u32
  ARB_TEXTURE_RG = 1
  ARB_TEXTURE_RGB10_A2UI = 1
  ARB_TEXTURE_STENCIL8 = 1
  ARB_TEXTURE_STORAGE = 1
  ARB_TEXTURE_STORAGE_MULTISAMPLE = 1
  ARB_TEXTURE_SWIZZLE = 1
  ARB_TEXTURE_VIEW = 1
  ARB_TIMER_QUERY = 1
  ARB_TRANSFORM_FEEDBACK2 = 1
  TRANSFORM_FEEDBACK_PAUSED = 0x8E23_u32
  TRANSFORM_FEEDBACK_ACTIVE = 0x8E24_u32
  ARB_TRANSFORM_FEEDBACK3 = 1
  ARB_TRANSFORM_FEEDBACK_INSTANCED = 1
  ARB_TRANSFORM_FEEDBACK_OVERFLOW_QUERY = 1
  TRANSFORM_FEEDBACK_OVERFLOW_ARB = 0x82EC_u32
  TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB = 0x82ED_u32
  ARB_TRANSPOSE_MATRIX = 1
  TRANSPOSE_MODELVIEW_MATRIX_ARB = 0x84E3_u32
  TRANSPOSE_PROJECTION_MATRIX_ARB = 0x84E4_u32
  TRANSPOSE_TEXTURE_MATRIX_ARB = 0x84E5_u32
  TRANSPOSE_COLOR_MATRIX_ARB = 0x84E6_u32
  alias PFNGLLOADTRANSPOSEMATRIXFARBPROC = Float* -> Void
  alias PFNGLLOADTRANSPOSEMATRIXDARBPROC = Double* -> Void
  alias PFNGLMULTTRANSPOSEMATRIXFARBPROC = Float* -> Void
  alias PFNGLMULTTRANSPOSEMATRIXDARBPROC = Double* -> Void
  ARB_UNIFORM_BUFFER_OBJECT = 1
  ARB_VERTEX_ARRAY_BGRA = 1
  ARB_VERTEX_ARRAY_OBJECT = 1
  ARB_VERTEX_ATTRIB_64BIT = 1
  ARB_VERTEX_ATTRIB_BINDING = 1
  ARB_VERTEX_BLEND = 1
  MAX_VERTEX_UNITS_ARB = 0x86A4_u32
  ACTIVE_VERTEX_UNITS_ARB = 0x86A5_u32
  WEIGHT_SUM_UNITY_ARB = 0x86A6_u32
  VERTEX_BLEND_ARB = 0x86A7_u32
  CURRENT_WEIGHT_ARB = 0x86A8_u32
  WEIGHT_ARRAY_TYPE_ARB = 0x86A9_u32
  WEIGHT_ARRAY_STRIDE_ARB = 0x86AA_u32
  WEIGHT_ARRAY_SIZE_ARB = 0x86AB_u32
  WEIGHT_ARRAY_POINTER_ARB = 0x86AC_u32
  WEIGHT_ARRAY_ARB = 0x86AD_u32
  MODELVIEW0_ARB = 0x1700_u32
  MODELVIEW1_ARB = 0x850A_u32
  MODELVIEW2_ARB = 0x8722_u32
  MODELVIEW3_ARB = 0x8723_u32
  MODELVIEW4_ARB = 0x8724_u32
  MODELVIEW5_ARB = 0x8725_u32
  MODELVIEW6_ARB = 0x8726_u32
  MODELVIEW7_ARB = 0x8727_u32
  MODELVIEW8_ARB = 0x8728_u32
  MODELVIEW9_ARB = 0x8729_u32
  MODELVIEW10_ARB = 0x872A_u32
  MODELVIEW11_ARB = 0x872B_u32
  MODELVIEW12_ARB = 0x872C_u32
  MODELVIEW13_ARB = 0x872D_u32
  MODELVIEW14_ARB = 0x872E_u32
  MODELVIEW15_ARB = 0x872F_u32
  MODELVIEW16_ARB = 0x8730_u32
  MODELVIEW17_ARB = 0x8731_u32
  MODELVIEW18_ARB = 0x8732_u32
  MODELVIEW19_ARB = 0x8733_u32
  MODELVIEW20_ARB = 0x8734_u32
  MODELVIEW21_ARB = 0x8735_u32
  MODELVIEW22_ARB = 0x8736_u32
  MODELVIEW23_ARB = 0x8737_u32
  MODELVIEW24_ARB = 0x8738_u32
  MODELVIEW25_ARB = 0x8739_u32
  MODELVIEW26_ARB = 0x873A_u32
  MODELVIEW27_ARB = 0x873B_u32
  MODELVIEW28_ARB = 0x873C_u32
  MODELVIEW29_ARB = 0x873D_u32
  MODELVIEW30_ARB = 0x873E_u32
  MODELVIEW31_ARB = 0x873F_u32
  alias PFNGLWEIGHTBVARBPROC = (Int, Byte*) -> Void
  alias PFNGLWEIGHTSVARBPROC = (Int, Short*) -> Void
  alias PFNGLWEIGHTIVARBPROC = (Int, Int*) -> Void
  alias PFNGLWEIGHTFVARBPROC = (Int, Float*) -> Void
  alias PFNGLWEIGHTDVARBPROC = (Int, Double*) -> Void
  alias PFNGLWEIGHTUBVARBPROC = (Int, Ubyte*) -> Void
  alias PFNGLWEIGHTUSVARBPROC = (Int, Ushort*) -> Void
  alias PFNGLWEIGHTUIVARBPROC = (Int, Uint*) -> Void
  alias PFNGLWEIGHTPOINTERARBPROC = (Int, Enum, Sizei, Void*) -> Void
  alias PFNGLVERTEXBLENDARBPROC = Int -> Void
  ARB_VERTEX_BUFFER_OBJECT = 1
  alias SizeiptrARB = LibC::SSizeT
  alias IntptrARB = LibC::SSizeT
  BUFFER_SIZE_ARB = 0x8764_u32
  BUFFER_USAGE_ARB = 0x8765_u32
  ARRAY_BUFFER_ARB = 0x8892_u32
  ELEMENT_ARRAY_BUFFER_ARB = 0x8893_u32
  ARRAY_BUFFER_BINDING_ARB = 0x8894_u32
  ELEMENT_ARRAY_BUFFER_BINDING_ARB = 0x8895_u32
  VERTEX_ARRAY_BUFFER_BINDING_ARB = 0x8896_u32
  NORMAL_ARRAY_BUFFER_BINDING_ARB = 0x8897_u32
  COLOR_ARRAY_BUFFER_BINDING_ARB = 0x8898_u32
  INDEX_ARRAY_BUFFER_BINDING_ARB = 0x8899_u32
  TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB = 0x889A_u32
  EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB = 0x889B_u32
  SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB = 0x889C_u32
  FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB = 0x889D_u32
  WEIGHT_ARRAY_BUFFER_BINDING_ARB = 0x889E_u32
  VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB = 0x889F_u32
  READ_ONLY_ARB = 0x88B8_u32
  WRITE_ONLY_ARB = 0x88B9_u32
  READ_WRITE_ARB = 0x88BA_u32
  BUFFER_ACCESS_ARB = 0x88BB_u32
  BUFFER_MAPPED_ARB = 0x88BC_u32
  BUFFER_MAP_POINTER_ARB = 0x88BD_u32
  STREAM_DRAW_ARB = 0x88E0_u32
  STREAM_READ_ARB = 0x88E1_u32
  STREAM_COPY_ARB = 0x88E2_u32
  STATIC_DRAW_ARB = 0x88E4_u32
  STATIC_READ_ARB = 0x88E5_u32
  STATIC_COPY_ARB = 0x88E6_u32
  DYNAMIC_DRAW_ARB = 0x88E8_u32
  DYNAMIC_READ_ARB = 0x88E9_u32
  DYNAMIC_COPY_ARB = 0x88EA_u32
  alias PFNGLBINDBUFFERARBPROC = (Enum, Uint) -> Void
  alias PFNGLDELETEBUFFERSARBPROC = (Sizei, Uint*) -> Void
  alias PFNGLGENBUFFERSARBPROC = (Sizei, Uint*) -> Void
  alias PFNGLISBUFFERARBPROC = Uint -> Boolean
  alias PFNGLBUFFERDATAARBPROC = (Enum, SizeiptrARB, Void*, Enum) -> Void
  alias PFNGLBUFFERSUBDATAARBPROC = (Enum, IntptrARB, SizeiptrARB, Void*) -> Void
  alias PFNGLGETBUFFERSUBDATAARBPROC = (Enum, IntptrARB, SizeiptrARB, Void*) -> Void
  alias PFNGLMAPBUFFERARBPROC = (Enum, Enum) -> Void*
  alias PFNGLUNMAPBUFFERARBPROC = Enum -> Boolean
  alias PFNGLGETBUFFERPARAMETERIVARBPROC = (Enum, Enum, Int*) -> Void
  alias PFNGLGETBUFFERPOINTERVARBPROC = (Enum, Enum, Void**) -> Void
  ARB_VERTEX_PROGRAM = 1
  COLOR_SUM_ARB = 0x8458_u32
  VERTEX_PROGRAM_ARB = 0x8620_u32
  VERTEX_ATTRIB_ARRAY_ENABLED_ARB = 0x8622_u32
  VERTEX_ATTRIB_ARRAY_SIZE_ARB = 0x8623_u32
  VERTEX_ATTRIB_ARRAY_STRIDE_ARB = 0x8624_u32
  VERTEX_ATTRIB_ARRAY_TYPE_ARB = 0x8625_u32
  CURRENT_VERTEX_ATTRIB_ARB = 0x8626_u32
  VERTEX_PROGRAM_POINT_SIZE_ARB = 0x8642_u32
  VERTEX_PROGRAM_TWO_SIDE_ARB = 0x8643_u32
  VERTEX_ATTRIB_ARRAY_POINTER_ARB = 0x8645_u32
  MAX_VERTEX_ATTRIBS_ARB = 0x8869_u32
  VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB = 0x886A_u32
  PROGRAM_ADDRESS_REGISTERS_ARB = 0x88B0_u32
  MAX_PROGRAM_ADDRESS_REGISTERS_ARB = 0x88B1_u32
  PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB = 0x88B2_u32
  MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB = 0x88B3_u32
  alias PFNGLVERTEXATTRIB1DARBPROC = (Uint, Double) -> Void
  alias PFNGLVERTEXATTRIB1DVARBPROC = (Uint, Double*) -> Void
  alias PFNGLVERTEXATTRIB1FARBPROC = (Uint, Float) -> Void
  alias PFNGLVERTEXATTRIB1FVARBPROC = (Uint, Float*) -> Void
  alias PFNGLVERTEXATTRIB1SARBPROC = (Uint, Short) -> Void
  alias PFNGLVERTEXATTRIB1SVARBPROC = (Uint, Short*) -> Void
  alias PFNGLVERTEXATTRIB2DARBPROC = (Uint, Double, Double) -> Void
  alias PFNGLVERTEXATTRIB2DVARBPROC = (Uint, Double*) -> Void
  alias PFNGLVERTEXATTRIB2FARBPROC = (Uint, Float, Float) -> Void
  alias PFNGLVERTEXATTRIB2FVARBPROC = (Uint, Float*) -> Void
  alias PFNGLVERTEXATTRIB2SARBPROC = (Uint, Short, Short) -> Void
  alias PFNGLVERTEXATTRIB2SVARBPROC = (Uint, Short*) -> Void
  alias PFNGLVERTEXATTRIB3DARBPROC = (Uint, Double, Double, Double) -> Void
  alias PFNGLVERTEXATTRIB3DVARBPROC = (Uint, Double*) -> Void
  alias PFNGLVERTEXATTRIB3FARBPROC = (Uint, Float, Float, Float) -> Void
  alias PFNGLVERTEXATTRIB3FVARBPROC = (Uint, Float*) -> Void
  alias PFNGLVERTEXATTRIB3SARBPROC = (Uint, Short, Short, Short) -> Void
  alias PFNGLVERTEXATTRIB3SVARBPROC = (Uint, Short*) -> Void
  alias PFNGLVERTEXATTRIB4NBVARBPROC = (Uint, Byte*) -> Void
  alias PFNGLVERTEXATTRIB4NIVARBPROC = (Uint, Int*) -> Void
  alias PFNGLVERTEXATTRIB4NSVARBPROC = (Uint, Short*) -> Void
  alias PFNGLVERTEXATTRIB4NUBARBPROC = (Uint, Ubyte, Ubyte, Ubyte, Ubyte) -> Void
  alias PFNGLVERTEXATTRIB4NUBVARBPROC = (Uint, Ubyte*) -> Void
  alias PFNGLVERTEXATTRIB4NUIVARBPROC = (Uint, Uint*) -> Void
  alias PFNGLVERTEXATTRIB4NUSVARBPROC = (Uint, Ushort*) -> Void
  alias PFNGLVERTEXATTRIB4BVARBPROC = (Uint, Byte*) -> Void
  alias PFNGLVERTEXATTRIB4DARBPROC = (Uint, Double, Double, Double, Double) -> Void
  alias PFNGLVERTEXATTRIB4DVARBPROC = (Uint, Double*) -> Void
  alias PFNGLVERTEXATTRIB4FARBPROC = (Uint, Float, Float, Float, Float) -> Void
  alias PFNGLVERTEXATTRIB4FVARBPROC = (Uint, Float*) -> Void
  alias PFNGLVERTEXATTRIB4IVARBPROC = (Uint, Int*) -> Void
  alias PFNGLVERTEXATTRIB4SARBPROC = (Uint, Short, Short, Short, Short) -> Void
  alias PFNGLVERTEXATTRIB4SVARBPROC = (Uint, Short*) -> Void
  alias PFNGLVERTEXATTRIB4UBVARBPROC = (Uint, Ubyte*) -> Void
  alias PFNGLVERTEXATTRIB4UIVARBPROC = (Uint, Uint*) -> Void
  alias PFNGLVERTEXATTRIB4USVARBPROC = (Uint, Ushort*) -> Void
  alias PFNGLVERTEXATTRIBPOINTERARBPROC = (Uint, Int, Enum, Boolean, Sizei, Void*) -> Void
  alias PFNGLENABLEVERTEXATTRIBARRAYARBPROC = Uint -> Void
  alias PFNGLDISABLEVERTEXATTRIBARRAYARBPROC = Uint -> Void
  alias PFNGLGETVERTEXATTRIBDVARBPROC = (Uint, Enum, Double*) -> Void
  alias PFNGLGETVERTEXATTRIBFVARBPROC = (Uint, Enum, Float*) -> Void
  alias PFNGLGETVERTEXATTRIBIVARBPROC = (Uint, Enum, Int*) -> Void
  alias PFNGLGETVERTEXATTRIBPOINTERVARBPROC = (Uint, Enum, Void**) -> Void
  ARB_VERTEX_SHADER = 1
  VERTEX_SHADER_ARB = 0x8B31_u32
  MAX_VERTEX_UNIFORM_COMPONENTS_ARB = 0x8B4A_u32
  MAX_VARYING_FLOATS_ARB = 0x8B4B_u32
  MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB = 0x8B4C_u32
  MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB = 0x8B4D_u32
  OBJECT_ACTIVE_ATTRIBUTES_ARB = 0x8B89_u32
  OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB = 0x8B8A_u32
  alias PFNGLBINDATTRIBLOCATIONARBPROC = (HandleARB, Uint, CharARB*) -> Void
  alias PFNGLGETACTIVEATTRIBARBPROC = (HandleARB, Uint, Sizei, Sizei*, Int*, Enum*, CharARB*) -> Void
  alias PFNGLGETATTRIBLOCATIONARBPROC = (HandleARB, CharARB*) -> Int
  ARB_VERTEX_TYPE_10F_11F_11F_REV = 1
  ARB_VERTEX_TYPE_2_10_10_10_REV = 1
  ARB_VIEWPORT_ARRAY = 1
  ARB_WINDOW_POS = 1
  alias PFNGLWINDOWPOS2DARBPROC = (Double, Double) -> Void
  alias PFNGLWINDOWPOS2DVARBPROC = Double* -> Void
  alias PFNGLWINDOWPOS2FARBPROC = (Float, Float) -> Void
  alias PFNGLWINDOWPOS2FVARBPROC = Float* -> Void
  alias PFNGLWINDOWPOS2IARBPROC = (Int, Int) -> Void
  alias PFNGLWINDOWPOS2IVARBPROC = Int* -> Void
  alias PFNGLWINDOWPOS2SARBPROC = (Short, Short) -> Void
  alias PFNGLWINDOWPOS2SVARBPROC = Short* -> Void
  alias PFNGLWINDOWPOS3DARBPROC = (Double, Double, Double) -> Void
  alias PFNGLWINDOWPOS3DVARBPROC = Double* -> Void
  alias PFNGLWINDOWPOS3FARBPROC = (Float, Float, Float) -> Void
  alias PFNGLWINDOWPOS3FVARBPROC = Float* -> Void
  alias PFNGLWINDOWPOS3IARBPROC = (Int, Int, Int) -> Void
  alias PFNGLWINDOWPOS3IVARBPROC = Int* -> Void
  alias PFNGLWINDOWPOS3SARBPROC = (Short, Short, Short) -> Void
  alias PFNGLWINDOWPOS3SVARBPROC = Short* -> Void
  KHR_BLEND_EQUATION_ADVANCED = 1
  MULTIPLY_KHR = 0x9294_u32
  SCREEN_KHR = 0x9295_u32
  OVERLAY_KHR = 0x9296_u32
  DARKEN_KHR = 0x9297_u32
  LIGHTEN_KHR = 0x9298_u32
  COLORDODGE_KHR = 0x9299_u32
  COLORBURN_KHR = 0x929A_u32
  HARDLIGHT_KHR = 0x929B_u32
  SOFTLIGHT_KHR = 0x929C_u32
  DIFFERENCE_KHR = 0x929E_u32
  EXCLUSION_KHR = 0x92A0_u32
  HSL_HUE_KHR = 0x92AD_u32
  HSL_SATURATION_KHR = 0x92AE_u32
  HSL_COLOR_KHR = 0x92AF_u32
  HSL_LUMINOSITY_KHR = 0x92B0_u32
  alias PFNGLBLENDBARRIERKHRPROC = -> Void
  KHR_BLEND_EQUATION_ADVANCED_COHERENT = 1
  BLEND_ADVANCED_COHERENT_KHR = 0x9285_u32
  KHR_CONTEXT_FLUSH_CONTROL = 1
  KHR_DEBUG = 1
  KHR_ROBUST_BUFFER_ACCESS_BEHAVIOR = 1
  KHR_ROBUSTNESS = 1
  CONTEXT_ROBUST_ACCESS = 0x90F3_u32
  KHR_TEXTURE_COMPRESSION_ASTC_HDR = 1
  COMPRESSED_RGBA_ASTC_4X4_KHR = 0x93B0_u32
  COMPRESSED_RGBA_ASTC_5X4_KHR = 0x93B1_u32
  COMPRESSED_RGBA_ASTC_5X5_KHR = 0x93B2_u32
  COMPRESSED_RGBA_ASTC_6X5_KHR = 0x93B3_u32
  COMPRESSED_RGBA_ASTC_6X6_KHR = 0x93B4_u32
  COMPRESSED_RGBA_ASTC_8X5_KHR = 0x93B5_u32
  COMPRESSED_RGBA_ASTC_8X6_KHR = 0x93B6_u32
  COMPRESSED_RGBA_ASTC_8X8_KHR = 0x93B7_u32
  COMPRESSED_RGBA_ASTC_10X5_KHR = 0x93B8_u32
  COMPRESSED_RGBA_ASTC_10X6_KHR = 0x93B9_u32
  COMPRESSED_RGBA_ASTC_10X8_KHR = 0x93BA_u32
  COMPRESSED_RGBA_ASTC_10X10_KHR = 0x93BB_u32
  COMPRESSED_RGBA_ASTC_12X10_KHR = 0x93BC_u32
  COMPRESSED_RGBA_ASTC_12X12_KHR = 0x93BD_u32
  COMPRESSED_SRGB_8_ALPHA_8_ASTC_4X4_KHR = 0x93D0_u32
  COMPRESSED_SRGB_8_ALPHA_8_ASTC_5X4_KHR = 0x93D1_u32
  COMPRESSED_SRGB_8_ALPHA_8_ASTC_5X5_KHR = 0x93D2_u32
  COMPRESSED_SRGB_8_ALPHA_8_ASTC_6X5_KHR = 0x93D3_u32
  COMPRESSED_SRGB_8_ALPHA_8_ASTC_6X6_KHR = 0x93D4_u32
  COMPRESSED_SRGB_8_ALPHA_8_ASTC_8X5_KHR = 0x93D5_u32
  COMPRESSED_SRGB_8_ALPHA_8_ASTC_8X6_KHR = 0x93D6_u32
  COMPRESSED_SRGB_8_ALPHA_8_ASTC_8X8_KHR = 0x93D7_u32
  COMPRESSED_SRGB_8_ALPHA_8_ASTC_10X5_KHR = 0x93D8_u32
  COMPRESSED_SRGB_8_ALPHA_8_ASTC_10X6_KHR = 0x93D9_u32
  COMPRESSED_SRGB_8_ALPHA_8_ASTC_10X8_KHR = 0x93DA_u32
  COMPRESSED_SRGB_8_ALPHA_8_ASTC_10X10_KHR = 0x93DB_u32
  COMPRESSED_SRGB_8_ALPHA_8_ASTC_12X10_KHR = 0x93DC_u32
  COMPRESSED_SRGB_8_ALPHA_8_ASTC_12X12_KHR = 0x93DD_u32
  KHR_TEXTURE_COMPRESSION_ASTC_LDR = 1
  OES_BYTE_COORDINATES = 1
  alias PFNGLMULTITEXCOORD1BOESPROC = (Enum, Byte) -> Void
  alias PFNGLMULTITEXCOORD1BVOESPROC = (Enum, Byte*) -> Void
  alias PFNGLMULTITEXCOORD2BOESPROC = (Enum, Byte, Byte) -> Void
  alias PFNGLMULTITEXCOORD2BVOESPROC = (Enum, Byte*) -> Void
  alias PFNGLMULTITEXCOORD3BOESPROC = (Enum, Byte, Byte, Byte) -> Void
  alias PFNGLMULTITEXCOORD3BVOESPROC = (Enum, Byte*) -> Void
  alias PFNGLMULTITEXCOORD4BOESPROC = (Enum, Byte, Byte, Byte, Byte) -> Void
  alias PFNGLMULTITEXCOORD4BVOESPROC = (Enum, Byte*) -> Void
  alias PFNGLTEXCOORD1BOESPROC = Byte -> Void
  alias PFNGLTEXCOORD1BVOESPROC = Byte* -> Void
  alias PFNGLTEXCOORD2BOESPROC = (Byte, Byte) -> Void
  alias PFNGLTEXCOORD2BVOESPROC = Byte* -> Void
  alias PFNGLTEXCOORD3BOESPROC = (Byte, Byte, Byte) -> Void
  alias PFNGLTEXCOORD3BVOESPROC = Byte* -> Void
  alias PFNGLTEXCOORD4BOESPROC = (Byte, Byte, Byte, Byte) -> Void
  alias PFNGLTEXCOORD4BVOESPROC = Byte* -> Void
  alias PFNGLVERTEX2BOESPROC = (Byte, Byte) -> Void
  alias PFNGLVERTEX2BVOESPROC = Byte* -> Void
  alias PFNGLVERTEX3BOESPROC = (Byte, Byte, Byte) -> Void
  alias PFNGLVERTEX3BVOESPROC = Byte* -> Void
  alias PFNGLVERTEX4BOESPROC = (Byte, Byte, Byte, Byte) -> Void
  alias PFNGLVERTEX4BVOESPROC = Byte* -> Void
  OES_COMPRESSED_PALETTED_TEXTURE = 1
  PALETTE4_RGB8_OES = 0x8B90_u32
  PALETTE4_RGBA8_OES = 0x8B91_u32
  PALETTE4_R5_G6_B5_OES = 0x8B92_u32
  PALETTE4_RGBA4_OES = 0x8B93_u32
  PALETTE4_RGB5_A1_OES = 0x8B94_u32
  PALETTE8_RGB8_OES = 0x8B95_u32
  PALETTE8_RGBA8_OES = 0x8B96_u32
  PALETTE8_R5_G6_B5_OES = 0x8B97_u32
  PALETTE8_RGBA4_OES = 0x8B98_u32
  PALETTE8_RGB5_A1_OES = 0x8B99_u32
  OES_FIXED_POINT = 1
  alias Fixed = Int
  FIXED_OES = 0x140C_u32
  alias PFNGLALPHAFUNCXOESPROC = (Enum, Fixed) -> Void
  alias PFNGLCLEARCOLORXOESPROC = (Fixed, Fixed, Fixed, Fixed) -> Void
  alias PFNGLCLEARDEPTHXOESPROC = Fixed -> Void
  alias PFNGLCLIPPLANEXOESPROC = (Enum, Fixed*) -> Void
  alias PFNGLCOLOR4XOESPROC = (Fixed, Fixed, Fixed, Fixed) -> Void
  alias PFNGLDEPTHRANGEXOESPROC = (Fixed, Fixed) -> Void
  alias PFNGLFOGXOESPROC = (Enum, Fixed) -> Void
  alias PFNGLFOGXVOESPROC = (Enum, Fixed*) -> Void
  alias PFNGLFRUSTUMXOESPROC = (Fixed, Fixed, Fixed, Fixed, Fixed, Fixed) -> Void
  alias PFNGLGETCLIPPLANEXOESPROC = (Enum, Fixed*) -> Void
  alias PFNGLGETFIXEDVOESPROC = (Enum, Fixed*) -> Void
  alias PFNGLGETTEXENVXVOESPROC = (Enum, Enum, Fixed*) -> Void
  alias PFNGLGETTEXPARAMETERXVOESPROC = (Enum, Enum, Fixed*) -> Void
  alias PFNGLLIGHTMODELXOESPROC = (Enum, Fixed) -> Void
  alias PFNGLLIGHTMODELXVOESPROC = (Enum, Fixed*) -> Void
  alias PFNGLLIGHTXOESPROC = (Enum, Enum, Fixed) -> Void
  alias PFNGLLIGHTXVOESPROC = (Enum, Enum, Fixed*) -> Void
  alias PFNGLLINEWIDTHXOESPROC = Fixed -> Void
  alias PFNGLLOADMATRIXXOESPROC = Fixed* -> Void
  alias PFNGLMATERIALXOESPROC = (Enum, Enum, Fixed) -> Void
  alias PFNGLMATERIALXVOESPROC = (Enum, Enum, Fixed*) -> Void
  alias PFNGLMULTMATRIXXOESPROC = Fixed* -> Void
  alias PFNGLMULTITEXCOORD4XOESPROC = (Enum, Fixed, Fixed, Fixed, Fixed) -> Void
  alias PFNGLNORMAL3XOESPROC = (Fixed, Fixed, Fixed) -> Void
  alias PFNGLORTHOXOESPROC = (Fixed, Fixed, Fixed, Fixed, Fixed, Fixed) -> Void
  alias PFNGLPOINTPARAMETERXVOESPROC = (Enum, Fixed*) -> Void
  alias PFNGLPOINTSIZEXOESPROC = Fixed -> Void
  alias PFNGLPOLYGONOFFSETXOESPROC = (Fixed, Fixed) -> Void
  alias PFNGLROTATEXOESPROC = (Fixed, Fixed, Fixed, Fixed) -> Void
  alias PFNGLSAMPLECOVERAGEOESPROC = (Fixed, Boolean) -> Void
  alias PFNGLSCALEXOESPROC = (Fixed, Fixed, Fixed) -> Void
  alias PFNGLTEXENVXOESPROC = (Enum, Enum, Fixed) -> Void
  alias PFNGLTEXENVXVOESPROC = (Enum, Enum, Fixed*) -> Void
  alias PFNGLTEXPARAMETERXOESPROC = (Enum, Enum, Fixed) -> Void
  alias PFNGLTEXPARAMETERXVOESPROC = (Enum, Enum, Fixed*) -> Void
  alias PFNGLTRANSLATEXOESPROC = (Fixed, Fixed, Fixed) -> Void
  alias PFNGLACCUMXOESPROC = (Enum, Fixed) -> Void
  alias PFNGLBITMAPXOESPROC = (Sizei, Sizei, Fixed, Fixed, Fixed, Fixed, Ubyte*) -> Void
  alias PFNGLBLENDCOLORXOESPROC = (Fixed, Fixed, Fixed, Fixed) -> Void
  alias PFNGLCLEARACCUMXOESPROC = (Fixed, Fixed, Fixed, Fixed) -> Void
  alias PFNGLCOLOR3XOESPROC = (Fixed, Fixed, Fixed) -> Void
  alias PFNGLCOLOR3XVOESPROC = Fixed* -> Void
  alias PFNGLCOLOR4XVOESPROC = Fixed* -> Void
  alias PFNGLCONVOLUTIONPARAMETERXOESPROC = (Enum, Enum, Fixed) -> Void
  alias PFNGLCONVOLUTIONPARAMETERXVOESPROC = (Enum, Enum, Fixed*) -> Void
  alias PFNGLEVALCOORD1XOESPROC = Fixed -> Void
  alias PFNGLEVALCOORD1XVOESPROC = Fixed* -> Void
  alias PFNGLEVALCOORD2XOESPROC = (Fixed, Fixed) -> Void
  alias PFNGLEVALCOORD2XVOESPROC = Fixed* -> Void
  alias PFNGLFEEDBACKBUFFERXOESPROC = (Sizei, Enum, Fixed*) -> Void
  alias PFNGLGETCONVOLUTIONPARAMETERXVOESPROC = (Enum, Enum, Fixed*) -> Void
  alias PFNGLGETHISTOGRAMPARAMETERXVOESPROC = (Enum, Enum, Fixed*) -> Void
  alias PFNGLGETLIGHTXOESPROC = (Enum, Enum, Fixed*) -> Void
  alias PFNGLGETMAPXVOESPROC = (Enum, Enum, Fixed*) -> Void
  alias PFNGLGETMATERIALXOESPROC = (Enum, Enum, Fixed) -> Void
  alias PFNGLGETPIXELMAPXVPROC = (Enum, Int, Fixed*) -> Void
  alias PFNGLGETTEXGENXVOESPROC = (Enum, Enum, Fixed*) -> Void
  alias PFNGLGETTEXLEVELPARAMETERXVOESPROC = (Enum, Int, Enum, Fixed*) -> Void
  alias PFNGLINDEXXOESPROC = Fixed -> Void
  alias PFNGLINDEXXVOESPROC = Fixed* -> Void
  alias PFNGLLOADTRANSPOSEMATRIXXOESPROC = Fixed* -> Void
  alias PFNGLMAP1XOESPROC = (Enum, Fixed, Fixed, Int, Int, Fixed) -> Void
  alias PFNGLMAP2XOESPROC = (Enum, Fixed, Fixed, Int, Int, Fixed, Fixed, Int, Int, Fixed) -> Void
  alias PFNGLMAPGRID1XOESPROC = (Int, Fixed, Fixed) -> Void
  alias PFNGLMAPGRID2XOESPROC = (Int, Fixed, Fixed, Fixed, Fixed) -> Void
  alias PFNGLMULTTRANSPOSEMATRIXXOESPROC = Fixed* -> Void
  alias PFNGLMULTITEXCOORD1XOESPROC = (Enum, Fixed) -> Void
  alias PFNGLMULTITEXCOORD1XVOESPROC = (Enum, Fixed*) -> Void
  alias PFNGLMULTITEXCOORD2XOESPROC = (Enum, Fixed, Fixed) -> Void
  alias PFNGLMULTITEXCOORD2XVOESPROC = (Enum, Fixed*) -> Void
  alias PFNGLMULTITEXCOORD3XOESPROC = (Enum, Fixed, Fixed, Fixed) -> Void
  alias PFNGLMULTITEXCOORD3XVOESPROC = (Enum, Fixed*) -> Void
  alias PFNGLMULTITEXCOORD4XVOESPROC = (Enum, Fixed*) -> Void
  alias PFNGLNORMAL3XVOESPROC = Fixed* -> Void
  alias PFNGLPASSTHROUGHXOESPROC = Fixed -> Void
  alias PFNGLPIXELMAPXPROC = (Enum, Int, Fixed*) -> Void
  alias PFNGLPIXELSTOREXPROC = (Enum, Fixed) -> Void
  alias PFNGLPIXELTRANSFERXOESPROC = (Enum, Fixed) -> Void
  alias PFNGLPIXELZOOMXOESPROC = (Fixed, Fixed) -> Void
  alias PFNGLPRIORITIZETEXTURESXOESPROC = (Sizei, Uint*, Fixed*) -> Void
  alias PFNGLRASTERPOS2XOESPROC = (Fixed, Fixed) -> Void
  alias PFNGLRASTERPOS2XVOESPROC = Fixed* -> Void
  alias PFNGLRASTERPOS3XOESPROC = (Fixed, Fixed, Fixed) -> Void
  alias PFNGLRASTERPOS3XVOESPROC = Fixed* -> Void
  alias PFNGLRASTERPOS4XOESPROC = (Fixed, Fixed, Fixed, Fixed) -> Void
  alias PFNGLRASTERPOS4XVOESPROC = Fixed* -> Void
  alias PFNGLRECTXOESPROC = (Fixed, Fixed, Fixed, Fixed) -> Void
  alias PFNGLRECTXVOESPROC = (Fixed*, Fixed*) -> Void
  alias PFNGLTEXCOORD1XOESPROC = Fixed -> Void
  alias PFNGLTEXCOORD1XVOESPROC = Fixed* -> Void
  alias PFNGLTEXCOORD2XOESPROC = (Fixed, Fixed) -> Void
  alias PFNGLTEXCOORD2XVOESPROC = Fixed* -> Void
  alias PFNGLTEXCOORD3XOESPROC = (Fixed, Fixed, Fixed) -> Void
  alias PFNGLTEXCOORD3XVOESPROC = Fixed* -> Void
  alias PFNGLTEXCOORD4XOESPROC = (Fixed, Fixed, Fixed, Fixed) -> Void
  alias PFNGLTEXCOORD4XVOESPROC = Fixed* -> Void
  alias PFNGLTEXGENXOESPROC = (Enum, Enum, Fixed) -> Void
  alias PFNGLTEXGENXVOESPROC = (Enum, Enum, Fixed*) -> Void
  alias PFNGLVERTEX2XOESPROC = Fixed -> Void
  alias PFNGLVERTEX2XVOESPROC = Fixed* -> Void
  alias PFNGLVERTEX3XOESPROC = (Fixed, Fixed) -> Void
  alias PFNGLVERTEX3XVOESPROC = Fixed* -> Void
  alias PFNGLVERTEX4XOESPROC = (Fixed, Fixed, Fixed) -> Void
  alias PFNGLVERTEX4XVOESPROC = Fixed* -> Void
  OES_QUERY_MATRIX = 1
  alias PFNGLQUERYMATRIXXOESPROC = (Fixed*, Int*) -> Bitfield
  OES_READ_FORMAT = 1
  IMPLEMENTATION_COLOR_READ_TYPE_OES = 0x8B9A_u32
  IMPLEMENTATION_COLOR_READ_FORMAT_OES = 0x8B9B_u32
  OES_SINGLE_PRECISION = 1
  alias PFNGLCLEARDEPTHFOESPROC = Clampf -> Void
  alias PFNGLCLIPPLANEFOESPROC = (Enum, Float*) -> Void
  alias PFNGLDEPTHRANGEFOESPROC = (Clampf, Clampf) -> Void
  alias PFNGLFRUSTUMFOESPROC = (Float, Float, Float, Float, Float, Float) -> Void
  alias PFNGLGETCLIPPLANEFOESPROC = (Enum, Float*) -> Void
  alias PFNGLORTHOFOESPROC = (Float, Float, Float, Float, Float, Float) -> Void
  GL_3_DFX_MULTISAMPLE = 1
  MULTISAMPLE_3DFX = 0x86B2_u32
  SAMPLE_BUFFERS_3DFX = 0x86B3_u32
  SAMPLES_3DFX = 0x86B4_u32
  MULTISAMPLE_BIT_3DFX = 0x20000000_u32
  GL_3_DFX_TBUFFER = 1
  alias PFNGLTBUFFERMASK3DFXPROC = Uint -> Void
  GL_3_DFX_TEXTURE_COMPRESSION_FXT_1 = 1
  COMPRESSED_RGB_FXT1_3DFX = 0x86B0_u32
  COMPRESSED_RGBA_FXT1_3DFX = 0x86B1_u32
  AMD_BLEND_MINMAX_FACTOR = 1
  FACTOR_MIN_AMD = 0x901C_u32
  FACTOR_MAX_AMD = 0x901D_u32
  AMD_CONSERVATIVE_DEPTH = 1
  AMD_DEBUG_OUTPUT = 1
  alias DEBUGPROCAMD = (Uint, Enum, Enum, Sizei, Char*, Void*) -> Void
  MAX_DEBUG_MESSAGE_LENGTH_AMD = 0x9143_u32
  MAX_DEBUG_LOGGED_MESSAGES_AMD = 0x9144_u32
  DEBUG_LOGGED_MESSAGES_AMD = 0x9145_u32
  DEBUG_SEVERITY_HIGH_AMD = 0x9146_u32
  DEBUG_SEVERITY_MEDIUM_AMD = 0x9147_u32
  DEBUG_SEVERITY_LOW_AMD = 0x9148_u32
  DEBUG_CATEGORY_API_ERROR_AMD = 0x9149_u32
  DEBUG_CATEGORY_WINDOW_SYSTEM_AMD = 0x914A_u32
  DEBUG_CATEGORY_DEPRECATION_AMD = 0x914B_u32
  DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD = 0x914C_u32
  DEBUG_CATEGORY_PERFORMANCE_AMD = 0x914D_u32
  DEBUG_CATEGORY_SHADER_COMPILER_AMD = 0x914E_u32
  DEBUG_CATEGORY_APPLICATION_AMD = 0x914F_u32
  DEBUG_CATEGORY_OTHER_AMD = 0x9150_u32
  alias PFNGLDEBUGMESSAGEENABLEAMDPROC = (Enum, Enum, Sizei, Uint*, Boolean) -> Void
  alias PFNGLDEBUGMESSAGEINSERTAMDPROC = (Enum, Enum, Uint, Sizei, Char*) -> Void
  alias PFNGLDEBUGMESSAGECALLBACKAMDPROC = (DEBUGPROCAMD, Void*) -> Void
  alias PFNGLGETDEBUGMESSAGELOGAMDPROC = (Uint, Sizei, Enum*, Uint*, Uint*, Sizei*, Char*) -> Uint
  AMD_DEPTH_CLAMP_SEPARATE = 1
  DEPTH_CLAMP_NEAR_AMD = 0x901E_u32
  DEPTH_CLAMP_FAR_AMD = 0x901F_u32
  AMD_DRAW_BUFFERS_BLEND = 1
  alias PFNGLBLENDFUNCINDEXEDAMDPROC = (Uint, Enum, Enum) -> Void
  alias PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC = (Uint, Enum, Enum, Enum, Enum) -> Void
  alias PFNGLBLENDEQUATIONINDEXEDAMDPROC = (Uint, Enum) -> Void
  alias PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC = (Uint, Enum, Enum) -> Void
  AMD_GCN_SHADER = 1
  AMD_GPU_SHADER_INT64 = 1
  alias Int64EXT = Int64
  INT64_NV = 0x140E_u32
  UNSIGNED_INT64_NV = 0x140F_u32
  INT8_NV = 0x8FE0_u32
  INT8_VEC2_NV = 0x8FE1_u32
  INT8_VEC3_NV = 0x8FE2_u32
  INT8_VEC4_NV = 0x8FE3_u32
  INT16_NV = 0x8FE4_u32
  INT16_VEC2_NV = 0x8FE5_u32
  INT16_VEC3_NV = 0x8FE6_u32
  INT16_VEC4_NV = 0x8FE7_u32
  INT64_VEC2_NV = 0x8FE9_u32
  INT64_VEC3_NV = 0x8FEA_u32
  INT64_VEC4_NV = 0x8FEB_u32
  UNSIGNED_INT8_NV = 0x8FEC_u32
  UNSIGNED_INT8_VEC2_NV = 0x8FED_u32
  UNSIGNED_INT8_VEC3_NV = 0x8FEE_u32
  UNSIGNED_INT8_VEC4_NV = 0x8FEF_u32
  UNSIGNED_INT16_NV = 0x8FF0_u32
  UNSIGNED_INT16_VEC2_NV = 0x8FF1_u32
  UNSIGNED_INT16_VEC3_NV = 0x8FF2_u32
  UNSIGNED_INT16_VEC4_NV = 0x8FF3_u32
  UNSIGNED_INT64_VEC2_NV = 0x8FF5_u32
  UNSIGNED_INT64_VEC3_NV = 0x8FF6_u32
  UNSIGNED_INT64_VEC4_NV = 0x8FF7_u32
  FLOAT16_NV = 0x8FF8_u32
  FLOAT16_VEC2_NV = 0x8FF9_u32
  FLOAT16_VEC3_NV = 0x8FFA_u32
  FLOAT16_VEC4_NV = 0x8FFB_u32
  alias PFNGLUNIFORM1I64NVPROC = (Int, Int64EXT) -> Void
  alias PFNGLUNIFORM2I64NVPROC = (Int, Int64EXT, Int64EXT) -> Void
  alias PFNGLUNIFORM3I64NVPROC = (Int, Int64EXT, Int64EXT, Int64EXT) -> Void
  alias PFNGLUNIFORM4I64NVPROC = (Int, Int64EXT, Int64EXT, Int64EXT, Int64EXT) -> Void
  alias PFNGLUNIFORM1I64VNVPROC = (Int, Sizei, Int64EXT*) -> Void
  alias PFNGLUNIFORM2I64VNVPROC = (Int, Sizei, Int64EXT*) -> Void
  alias PFNGLUNIFORM3I64VNVPROC = (Int, Sizei, Int64EXT*) -> Void
  alias PFNGLUNIFORM4I64VNVPROC = (Int, Sizei, Int64EXT*) -> Void
  alias PFNGLUNIFORM1UI64NVPROC = (Int, Uint64EXT) -> Void
  alias PFNGLUNIFORM2UI64NVPROC = (Int, Uint64EXT, Uint64EXT) -> Void
  alias PFNGLUNIFORM3UI64NVPROC = (Int, Uint64EXT, Uint64EXT, Uint64EXT) -> Void
  alias PFNGLUNIFORM4UI64NVPROC = (Int, Uint64EXT, Uint64EXT, Uint64EXT, Uint64EXT) -> Void
  alias PFNGLUNIFORM1UI64VNVPROC = (Int, Sizei, Uint64EXT*) -> Void
  alias PFNGLUNIFORM2UI64VNVPROC = (Int, Sizei, Uint64EXT*) -> Void
  alias PFNGLUNIFORM3UI64VNVPROC = (Int, Sizei, Uint64EXT*) -> Void
  alias PFNGLUNIFORM4UI64VNVPROC = (Int, Sizei, Uint64EXT*) -> Void
  alias PFNGLGETUNIFORMI64VNVPROC = (Uint, Int, Int64EXT*) -> Void
  alias PFNGLGETUNIFORMUI64VNVPROC = (Uint, Int, Uint64EXT*) -> Void
  alias PFNGLPROGRAMUNIFORM1I64NVPROC = (Uint, Int, Int64EXT) -> Void
  alias PFNGLPROGRAMUNIFORM2I64NVPROC = (Uint, Int, Int64EXT, Int64EXT) -> Void
  alias PFNGLPROGRAMUNIFORM3I64NVPROC = (Uint, Int, Int64EXT, Int64EXT, Int64EXT) -> Void
  alias PFNGLPROGRAMUNIFORM4I64NVPROC = (Uint, Int, Int64EXT, Int64EXT, Int64EXT, Int64EXT) -> Void
  alias PFNGLPROGRAMUNIFORM1I64VNVPROC = (Uint, Int, Sizei, Int64EXT*) -> Void
  alias PFNGLPROGRAMUNIFORM2I64VNVPROC = (Uint, Int, Sizei, Int64EXT*) -> Void
  alias PFNGLPROGRAMUNIFORM3I64VNVPROC = (Uint, Int, Sizei, Int64EXT*) -> Void
  alias PFNGLPROGRAMUNIFORM4I64VNVPROC = (Uint, Int, Sizei, Int64EXT*) -> Void
  alias PFNGLPROGRAMUNIFORM1UI64NVPROC = (Uint, Int, Uint64EXT) -> Void
  alias PFNGLPROGRAMUNIFORM2UI64NVPROC = (Uint, Int, Uint64EXT, Uint64EXT) -> Void
  alias PFNGLPROGRAMUNIFORM3UI64NVPROC = (Uint, Int, Uint64EXT, Uint64EXT, Uint64EXT) -> Void
  alias PFNGLPROGRAMUNIFORM4UI64NVPROC = (Uint, Int, Uint64EXT, Uint64EXT, Uint64EXT, Uint64EXT) -> Void
  alias PFNGLPROGRAMUNIFORM1UI64VNVPROC = (Uint, Int, Sizei, Uint64EXT*) -> Void
  alias PFNGLPROGRAMUNIFORM2UI64VNVPROC = (Uint, Int, Sizei, Uint64EXT*) -> Void
  alias PFNGLPROGRAMUNIFORM3UI64VNVPROC = (Uint, Int, Sizei, Uint64EXT*) -> Void
  alias PFNGLPROGRAMUNIFORM4UI64VNVPROC = (Uint, Int, Sizei, Uint64EXT*) -> Void
  AMD_INTERLEAVED_ELEMENTS = 1
  VERTEX_ELEMENT_SWIZZLE_AMD = 0x91A4_u32
  VERTEX_ID_SWIZZLE_AMD = 0x91A5_u32
  alias PFNGLVERTEXATTRIBPARAMETERIAMDPROC = (Uint, Enum, Int) -> Void
  AMD_MULTI_DRAW_INDIRECT = 1
  alias PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC = (Enum, Void*, Sizei, Sizei) -> Void
  alias PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC = (Enum, Enum, Void*, Sizei, Sizei) -> Void
  AMD_NAME_GEN_DELETE = 1
  DATA_BUFFER_AMD = 0x9151_u32
  PERFORMANCE_MONITOR_AMD = 0x9152_u32
  QUERY_OBJECT_AMD = 0x9153_u32
  VERTEX_ARRAY_OBJECT_AMD = 0x9154_u32
  SAMPLER_OBJECT_AMD = 0x9155_u32
  alias PFNGLGENNAMESAMDPROC = (Enum, Uint, Uint*) -> Void
  alias PFNGLDELETENAMESAMDPROC = (Enum, Uint, Uint*) -> Void
  alias PFNGLISNAMEAMDPROC = (Enum, Uint) -> Boolean
  AMD_OCCLUSION_QUERY_EVENT = 1
  OCCLUSION_QUERY_EVENT_MASK_AMD = 0x874F_u32
  QUERY_DEPTH_PASS_EVENT_BIT_AMD = 0x00000001_u32
  QUERY_DEPTH_FAIL_EVENT_BIT_AMD = 0x00000002_u32
  QUERY_STENCIL_FAIL_EVENT_BIT_AMD = 0x00000004_u32
  QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD = 0x00000008_u32
  QUERY_ALL_EVENT_BITS_AMD = 0xFFFFFFFF_u32
  alias PFNGLQUERYOBJECTPARAMETERUIAMDPROC = (Enum, Uint, Enum, Uint) -> Void
  AMD_PERFORMANCE_MONITOR = 1
  COUNTER_TYPE_AMD = 0x8BC0_u32
  COUNTER_RANGE_AMD = 0x8BC1_u32
  UNSIGNED_INT64_AMD = 0x8BC2_u32
  PERCENTAGE_AMD = 0x8BC3_u32
  PERFMON_RESULT_AVAILABLE_AMD = 0x8BC4_u32
  PERFMON_RESULT_SIZE_AMD = 0x8BC5_u32
  PERFMON_RESULT_AMD = 0x8BC6_u32
  alias PFNGLGETPERFMONITORGROUPSAMDPROC = (Int*, Sizei, Uint*) -> Void
  alias PFNGLGETPERFMONITORCOUNTERSAMDPROC = (Uint, Int*, Int*, Sizei, Uint*) -> Void
  alias PFNGLGETPERFMONITORGROUPSTRINGAMDPROC = (Uint, Sizei, Sizei*, Char*) -> Void
  alias PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC = (Uint, Uint, Sizei, Sizei*, Char*) -> Void
  alias PFNGLGETPERFMONITORCOUNTERINFOAMDPROC = (Uint, Uint, Enum, Void*) -> Void
  alias PFNGLGENPERFMONITORSAMDPROC = (Sizei, Uint*) -> Void
  alias PFNGLDELETEPERFMONITORSAMDPROC = (Sizei, Uint*) -> Void
  alias PFNGLSELECTPERFMONITORCOUNTERSAMDPROC = (Uint, Boolean, Uint, Int, Uint*) -> Void
  alias PFNGLBEGINPERFMONITORAMDPROC = Uint -> Void
  alias PFNGLENDPERFMONITORAMDPROC = Uint -> Void
  alias PFNGLGETPERFMONITORCOUNTERDATAAMDPROC = (Uint, Enum, Sizei, Uint*, Int*) -> Void
  AMD_PINNED_MEMORY = 1
  EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD = 0x9160_u32
  AMD_QUERY_BUFFER_OBJECT = 1
  QUERY_BUFFER_AMD = 0x9192_u32
  QUERY_BUFFER_BINDING_AMD = 0x9193_u32
  QUERY_RESULT_NO_WAIT_AMD = 0x9194_u32
  AMD_SAMPLE_POSITIONS = 1
  SUBSAMPLE_DISTANCE_AMD = 0x883F_u32
  alias PFNGLSETMULTISAMPLEFVAMDPROC = (Enum, Uint, Float*) -> Void
  AMD_SEAMLESS_CUBEMAP_PER_TEXTURE = 1
  AMD_SHADER_ATOMIC_COUNTER_OPS = 1
  AMD_SHADER_STENCIL_EXPORT = 1
  AMD_SHADER_TRINARY_MINMAX = 1
  AMD_SPARSE_TEXTURE = 1
  VIRTUAL_PAGE_SIZE_X_AMD = 0x9195_u32
  VIRTUAL_PAGE_SIZE_Y_AMD = 0x9196_u32
  VIRTUAL_PAGE_SIZE_Z_AMD = 0x9197_u32
  MAX_SPARSE_TEXTURE_SIZE_AMD = 0x9198_u32
  MAX_SPARSE_3D_TEXTURE_SIZE_AMD = 0x9199_u32
  MAX_SPARSE_ARRAY_TEXTURE_LAYERS = 0x919A_u32
  MIN_SPARSE_LEVEL_AMD = 0x919B_u32
  MIN_LOD_WARNING_AMD = 0x919C_u32
  TEXTURE_STORAGE_SPARSE_BIT_AMD = 0x00000001_u32
  alias PFNGLTEXSTORAGESPARSEAMDPROC = (Enum, Enum, Sizei, Sizei, Sizei, Sizei, Bitfield) -> Void
  alias PFNGLTEXTURESTORAGESPARSEAMDPROC = (Uint, Enum, Enum, Sizei, Sizei, Sizei, Sizei, Bitfield) -> Void
  AMD_STENCIL_OPERATION_EXTENDED = 1
  SET_AMD = 0x874A_u32
  REPLACE_VALUE_AMD = 0x874B_u32
  STENCIL_OP_VALUE_AMD = 0x874C_u32
  STENCIL_BACK_OP_VALUE_AMD = 0x874D_u32
  alias PFNGLSTENCILOPVALUEAMDPROC = (Enum, Uint) -> Void
  AMD_TEXTURE_TEXTURE4 = 1
  AMD_TRANSFORM_FEEDBACK3_LINES_TRIANGLES = 1
  AMD_TRANSFORM_FEEDBACK4 = 1
  STREAM_RASTERIZATION_AMD = 0x91A0_u32
  AMD_VERTEX_SHADER_LAYER = 1
  AMD_VERTEX_SHADER_TESSELLATOR = 1
  SAMPLER_BUFFER_AMD = 0x9001_u32
  INT_SAMPLER_BUFFER_AMD = 0x9002_u32
  UNSIGNED_INT_SAMPLER_BUFFER_AMD = 0x9003_u32
  TESSELLATION_MODE_AMD = 0x9004_u32
  TESSELLATION_FACTOR_AMD = 0x9005_u32
  DISCRETE_AMD = 0x9006_u32
  CONTINUOUS_AMD = 0x9007_u32
  alias PFNGLTESSELLATIONFACTORAMDPROC = Float -> Void
  alias PFNGLTESSELLATIONMODEAMDPROC = Enum -> Void
  AMD_VERTEX_SHADER_VIEWPORT_INDEX = 1
  APPLE_AUX_DEPTH_STENCIL = 1
  AUX_DEPTH_STENCIL_APPLE = 0x8A14_u32
  APPLE_CLIENT_STORAGE = 1
  UNPACK_CLIENT_STORAGE_APPLE = 0x85B2_u32
  APPLE_ELEMENT_ARRAY = 1
  ELEMENT_ARRAY_APPLE = 0x8A0C_u32
  ELEMENT_ARRAY_TYPE_APPLE = 0x8A0D_u32
  ELEMENT_ARRAY_POINTER_APPLE = 0x8A0E_u32
  alias PFNGLELEMENTPOINTERAPPLEPROC = (Enum, Void*) -> Void
  alias PFNGLDRAWELEMENTARRAYAPPLEPROC = (Enum, Int, Sizei) -> Void
  alias PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC = (Enum, Uint, Uint, Int, Sizei) -> Void
  alias PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC = (Enum, Int*, Sizei*, Sizei) -> Void
  alias PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC = (Enum, Uint, Uint, Int*, Sizei*, Sizei) -> Void
  APPLE_FENCE = 1
  DRAW_PIXELS_APPLE = 0x8A0A_u32
  FENCE_APPLE = 0x8A0B_u32
  alias PFNGLGENFENCESAPPLEPROC = (Sizei, Uint*) -> Void
  alias PFNGLDELETEFENCESAPPLEPROC = (Sizei, Uint*) -> Void
  alias PFNGLSETFENCEAPPLEPROC = Uint -> Void
  alias PFNGLISFENCEAPPLEPROC = Uint -> Boolean
  alias PFNGLTESTFENCEAPPLEPROC = Uint -> Boolean
  alias PFNGLFINISHFENCEAPPLEPROC = Uint -> Void
  alias PFNGLTESTOBJECTAPPLEPROC = (Enum, Uint) -> Boolean
  alias PFNGLFINISHOBJECTAPPLEPROC = (Enum, Int) -> Void
  APPLE_FLOAT_PIXELS = 1
  HALF_APPLE = 0x140B_u32
  RGBA_FLOAT32_APPLE = 0x8814_u32
  RGB_FLOAT32_APPLE = 0x8815_u32
  ALPHA_FLOAT32_APPLE = 0x8816_u32
  INTENSITY_FLOAT32_APPLE = 0x8817_u32
  LUMINANCE_FLOAT32_APPLE = 0x8818_u32
  LUMINANCE_ALPHA_FLOAT32_APPLE = 0x8819_u32
  RGBA_FLOAT16_APPLE = 0x881A_u32
  RGB_FLOAT16_APPLE = 0x881B_u32
  ALPHA_FLOAT16_APPLE = 0x881C_u32
  INTENSITY_FLOAT16_APPLE = 0x881D_u32
  LUMINANCE_FLOAT16_APPLE = 0x881E_u32
  LUMINANCE_ALPHA_FLOAT16_APPLE = 0x881F_u32
  COLOR_FLOAT_APPLE = 0x8A0F_u32
  APPLE_FLUSH_BUFFER_RANGE = 1
  BUFFER_SERIALIZED_MODIFY_APPLE = 0x8A12_u32
  BUFFER_FLUSHING_UNMAP_APPLE = 0x8A13_u32
  alias PFNGLBUFFERPARAMETERIAPPLEPROC = (Enum, Enum, Int) -> Void
  alias PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC = (Enum, Intptr, Sizeiptr) -> Void
  APPLE_OBJECT_PURGEABLE = 1
  BUFFER_OBJECT_APPLE = 0x85B3_u32
  RELEASED_APPLE = 0x8A19_u32
  VOLATILE_APPLE = 0x8A1A_u32
  RETAINED_APPLE = 0x8A1B_u32
  UNDEFINED_APPLE = 0x8A1C_u32
  PURGEABLE_APPLE = 0x8A1D_u32
  alias PFNGLOBJECTPURGEABLEAPPLEPROC = (Enum, Uint, Enum) -> Enum
  alias PFNGLOBJECTUNPURGEABLEAPPLEPROC = (Enum, Uint, Enum) -> Enum
  alias PFNGLGETOBJECTPARAMETERIVAPPLEPROC = (Enum, Uint, Enum, Int*) -> Void
  APPLE_RGB_422 = 1
  RGB_422_APPLE = 0x8A1F_u32
  UNSIGNED_SHORT_8_8_APPLE = 0x85BA_u32
  UNSIGNED_SHORT_8_8_REV_APPLE = 0x85BB_u32
  RGB_RAW_422_APPLE = 0x8A51_u32
  APPLE_ROW_BYTES = 1
  PACK_ROW_BYTES_APPLE = 0x8A15_u32
  UNPACK_ROW_BYTES_APPLE = 0x8A16_u32
  APPLE_SPECULAR_VECTOR = 1
  LIGHT_MODEL_SPECULAR_VECTOR_APPLE = 0x85B0_u32
  APPLE_TEXTURE_RANGE = 1
  TEXTURE_RANGE_LENGTH_APPLE = 0x85B7_u32
  TEXTURE_RANGE_POINTER_APPLE = 0x85B8_u32
  TEXTURE_STORAGE_HINT_APPLE = 0x85BC_u32
  STORAGE_PRIVATE_APPLE = 0x85BD_u32
  STORAGE_CACHED_APPLE = 0x85BE_u32
  STORAGE_SHARED_APPLE = 0x85BF_u32
  alias PFNGLTEXTURERANGEAPPLEPROC = (Enum, Sizei, Void*) -> Void
  alias PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC = (Enum, Enum, Void**) -> Void
  APPLE_TRANSFORM_HINT = 1
  TRANSFORM_HINT_APPLE = 0x85B1_u32
  APPLE_VERTEX_ARRAY_OBJECT = 1
  VERTEX_ARRAY_BINDING_APPLE = 0x85B5_u32
  alias PFNGLBINDVERTEXARRAYAPPLEPROC = Uint -> Void
  alias PFNGLDELETEVERTEXARRAYSAPPLEPROC = (Sizei, Uint*) -> Void
  alias PFNGLGENVERTEXARRAYSAPPLEPROC = (Sizei, Uint*) -> Void
  alias PFNGLISVERTEXARRAYAPPLEPROC = Uint -> Boolean
  APPLE_VERTEX_ARRAY_RANGE = 1
  VERTEX_ARRAY_RANGE_APPLE = 0x851D_u32
  VERTEX_ARRAY_RANGE_LENGTH_APPLE = 0x851E_u32
  VERTEX_ARRAY_STORAGE_HINT_APPLE = 0x851F_u32
  VERTEX_ARRAY_RANGE_POINTER_APPLE = 0x8521_u32
  STORAGE_CLIENT_APPLE = 0x85B4_u32
  alias PFNGLVERTEXARRAYRANGEAPPLEPROC = (Sizei, Void*) -> Void
  alias PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC = (Sizei, Void*) -> Void
  alias PFNGLVERTEXARRAYPARAMETERIAPPLEPROC = (Enum, Int) -> Void
  APPLE_VERTEX_PROGRAM_EVALUATORS = 1
  VERTEX_ATTRIB_MAP1_APPLE = 0x8A00_u32
  VERTEX_ATTRIB_MAP2_APPLE = 0x8A01_u32
  VERTEX_ATTRIB_MAP1_SIZE_APPLE = 0x8A02_u32
  VERTEX_ATTRIB_MAP1_COEFF_APPLE = 0x8A03_u32
  VERTEX_ATTRIB_MAP1_ORDER_APPLE = 0x8A04_u32
  VERTEX_ATTRIB_MAP1_DOMAIN_APPLE = 0x8A05_u32
  VERTEX_ATTRIB_MAP2_SIZE_APPLE = 0x8A06_u32
  VERTEX_ATTRIB_MAP2_COEFF_APPLE = 0x8A07_u32
  VERTEX_ATTRIB_MAP2_ORDER_APPLE = 0x8A08_u32
  VERTEX_ATTRIB_MAP2_DOMAIN_APPLE = 0x8A09_u32
  alias PFNGLENABLEVERTEXATTRIBAPPLEPROC = (Uint, Enum) -> Void
  alias PFNGLDISABLEVERTEXATTRIBAPPLEPROC = (Uint, Enum) -> Void
  alias PFNGLISVERTEXATTRIBENABLEDAPPLEPROC = (Uint, Enum) -> Boolean
  alias PFNGLMAPVERTEXATTRIB1DAPPLEPROC = (Uint, Uint, Double, Double, Int, Int, Double*) -> Void
  alias PFNGLMAPVERTEXATTRIB1FAPPLEPROC = (Uint, Uint, Float, Float, Int, Int, Float*) -> Void
  alias PFNGLMAPVERTEXATTRIB2DAPPLEPROC = (Uint, Uint, Double, Double, Int, Int, Double, Double, Int, Int, Double*) -> Void
  alias PFNGLMAPVERTEXATTRIB2FAPPLEPROC = (Uint, Uint, Float, Float, Int, Int, Float, Float, Int, Int, Float*) -> Void
  APPLE_YCBCR_422 = 1
  YCBCR_422_APPLE = 0x85B9_u32
  ATI_DRAW_BUFFERS = 1
  MAX_DRAW_BUFFERS_ATI = 0x8824_u32
  DRAW_BUFFER0_ATI = 0x8825_u32
  DRAW_BUFFER1_ATI = 0x8826_u32
  DRAW_BUFFER2_ATI = 0x8827_u32
  DRAW_BUFFER3_ATI = 0x8828_u32
  DRAW_BUFFER4_ATI = 0x8829_u32
  DRAW_BUFFER5_ATI = 0x882A_u32
  DRAW_BUFFER6_ATI = 0x882B_u32
  DRAW_BUFFER7_ATI = 0x882C_u32
  DRAW_BUFFER8_ATI = 0x882D_u32
  DRAW_BUFFER9_ATI = 0x882E_u32
  DRAW_BUFFER10_ATI = 0x882F_u32
  DRAW_BUFFER11_ATI = 0x8830_u32
  DRAW_BUFFER12_ATI = 0x8831_u32
  DRAW_BUFFER13_ATI = 0x8832_u32
  DRAW_BUFFER14_ATI = 0x8833_u32
  DRAW_BUFFER15_ATI = 0x8834_u32
  alias PFNGLDRAWBUFFERSATIPROC = (Sizei, Enum*) -> Void
  ATI_ELEMENT_ARRAY = 1
  ELEMENT_ARRAY_ATI = 0x8768_u32
  ELEMENT_ARRAY_TYPE_ATI = 0x8769_u32
  ELEMENT_ARRAY_POINTER_ATI = 0x876A_u32
  alias PFNGLELEMENTPOINTERATIPROC = (Enum, Void*) -> Void
  alias PFNGLDRAWELEMENTARRAYATIPROC = (Enum, Sizei) -> Void
  alias PFNGLDRAWRANGEELEMENTARRAYATIPROC = (Enum, Uint, Uint, Sizei) -> Void
  ATI_ENVMAP_BUMPMAP = 1
  BUMP_ROT_MATRIX_ATI = 0x8775_u32
  BUMP_ROT_MATRIX_SIZE_ATI = 0x8776_u32
  BUMP_NUM_TEX_UNITS_ATI = 0x8777_u32
  BUMP_TEX_UNITS_ATI = 0x8778_u32
  DUDV_ATI = 0x8779_u32
  DU8DV8_ATI = 0x877A_u32
  BUMP_ENVMAP_ATI = 0x877B_u32
  BUMP_TARGET_ATI = 0x877C_u32
  alias PFNGLTEXBUMPPARAMETERIVATIPROC = (Enum, Int*) -> Void
  alias PFNGLTEXBUMPPARAMETERFVATIPROC = (Enum, Float*) -> Void
  alias PFNGLGETTEXBUMPPARAMETERIVATIPROC = (Enum, Int*) -> Void
  alias PFNGLGETTEXBUMPPARAMETERFVATIPROC = (Enum, Float*) -> Void
  ATI_FRAGMENT_SHADER = 1
  FRAGMENT_SHADER_ATI = 0x8920_u32
  REG_0_ATI = 0x8921_u32
  REG_1_ATI = 0x8922_u32
  REG_2_ATI = 0x8923_u32
  REG_3_ATI = 0x8924_u32
  REG_4_ATI = 0x8925_u32
  REG_5_ATI = 0x8926_u32
  REG_6_ATI = 0x8927_u32
  REG_7_ATI = 0x8928_u32
  REG_8_ATI = 0x8929_u32
  REG_9_ATI = 0x892A_u32
  REG_10_ATI = 0x892B_u32
  REG_11_ATI = 0x892C_u32
  REG_12_ATI = 0x892D_u32
  REG_13_ATI = 0x892E_u32
  REG_14_ATI = 0x892F_u32
  REG_15_ATI = 0x8930_u32
  REG_16_ATI = 0x8931_u32
  REG_17_ATI = 0x8932_u32
  REG_18_ATI = 0x8933_u32
  REG_19_ATI = 0x8934_u32
  REG_20_ATI = 0x8935_u32
  REG_21_ATI = 0x8936_u32
  REG_22_ATI = 0x8937_u32
  REG_23_ATI = 0x8938_u32
  REG_24_ATI = 0x8939_u32
  REG_25_ATI = 0x893A_u32
  REG_26_ATI = 0x893B_u32
  REG_27_ATI = 0x893C_u32
  REG_28_ATI = 0x893D_u32
  REG_29_ATI = 0x893E_u32
  REG_30_ATI = 0x893F_u32
  REG_31_ATI = 0x8940_u32
  CON_0_ATI = 0x8941_u32
  CON_1_ATI = 0x8942_u32
  CON_2_ATI = 0x8943_u32
  CON_3_ATI = 0x8944_u32
  CON_4_ATI = 0x8945_u32
  CON_5_ATI = 0x8946_u32
  CON_6_ATI = 0x8947_u32
  CON_7_ATI = 0x8948_u32
  CON_8_ATI = 0x8949_u32
  CON_9_ATI = 0x894A_u32
  CON_10_ATI = 0x894B_u32
  CON_11_ATI = 0x894C_u32
  CON_12_ATI = 0x894D_u32
  CON_13_ATI = 0x894E_u32
  CON_14_ATI = 0x894F_u32
  CON_15_ATI = 0x8950_u32
  CON_16_ATI = 0x8951_u32
  CON_17_ATI = 0x8952_u32
  CON_18_ATI = 0x8953_u32
  CON_19_ATI = 0x8954_u32
  CON_20_ATI = 0x8955_u32
  CON_21_ATI = 0x8956_u32
  CON_22_ATI = 0x8957_u32
  CON_23_ATI = 0x8958_u32
  CON_24_ATI = 0x8959_u32
  CON_25_ATI = 0x895A_u32
  CON_26_ATI = 0x895B_u32
  CON_27_ATI = 0x895C_u32
  CON_28_ATI = 0x895D_u32
  CON_29_ATI = 0x895E_u32
  CON_30_ATI = 0x895F_u32
  CON_31_ATI = 0x8960_u32
  MOV_ATI = 0x8961_u32
  ADD_ATI = 0x8963_u32
  MUL_ATI = 0x8964_u32
  SUB_ATI = 0x8965_u32
  DOT3_ATI = 0x8966_u32
  DOT4_ATI = 0x8967_u32
  MAD_ATI = 0x8968_u32
  LERP_ATI = 0x8969_u32
  CND_ATI = 0x896A_u32
  CND0_ATI = 0x896B_u32
  DOT2_ADD_ATI = 0x896C_u32
  SECONDARY_INTERPOLATOR_ATI = 0x896D_u32
  NUM_FRAGMENT_REGISTERS_ATI = 0x896E_u32
  NUM_FRAGMENT_CONSTANTS_ATI = 0x896F_u32
  NUM_PASSES_ATI = 0x8970_u32
  NUM_INSTRUCTIONS_PER_PASS_ATI = 0x8971_u32
  NUM_INSTRUCTIONS_TOTAL_ATI = 0x8972_u32
  NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI = 0x8973_u32
  NUM_LOOPBACK_COMPONENTS_ATI = 0x8974_u32
  COLOR_ALPHA_PAIRING_ATI = 0x8975_u32
  SWIZZLE_STR_ATI = 0x8976_u32
  SWIZZLE_STQ_ATI = 0x8977_u32
  SWIZZLE_STR_DR_ATI = 0x8978_u32
  SWIZZLE_STQ_DQ_ATI = 0x8979_u32
  SWIZZLE_STRQ_ATI = 0x897A_u32
  SWIZZLE_STRQ_DQ_ATI = 0x897B_u32
  RED_BIT_ATI = 0x00000001_u32
  GREEN_BIT_ATI = 0x00000002_u32
  BLUE_BIT_ATI = 0x00000004_u32
  GL_2X_BIT_ATI = 0x00000001_u32
  GL_4X_BIT_ATI = 0x00000002_u32
  GL_8X_BIT_ATI = 0x00000004_u32
  HALF_BIT_ATI = 0x00000008_u32
  QUARTER_BIT_ATI = 0x00000010_u32
  EIGHTH_BIT_ATI = 0x00000020_u32
  SATURATE_BIT_ATI = 0x00000040_u32
  COMP_BIT_ATI = 0x00000002_u32
  NEGATE_BIT_ATI = 0x00000004_u32
  BIAS_BIT_ATI = 0x00000008_u32
  alias PFNGLGENFRAGMENTSHADERSATIPROC = Uint -> Uint
  alias PFNGLBINDFRAGMENTSHADERATIPROC = Uint -> Void
  alias PFNGLDELETEFRAGMENTSHADERATIPROC = Uint -> Void
  alias PFNGLBEGINFRAGMENTSHADERATIPROC = -> Void
  alias PFNGLENDFRAGMENTSHADERATIPROC = -> Void
  alias PFNGLPASSTEXCOORDATIPROC = (Uint, Uint, Enum) -> Void
  alias PFNGLSAMPLEMAPATIPROC = (Uint, Uint, Enum) -> Void
  alias PFNGLCOLORFRAGMENTOP1ATIPROC = (Enum, Uint, Uint, Uint, Uint, Uint, Uint) -> Void
  alias PFNGLCOLORFRAGMENTOP2ATIPROC = (Enum, Uint, Uint, Uint, Uint, Uint, Uint, Uint, Uint, Uint) -> Void
  alias PFNGLCOLORFRAGMENTOP3ATIPROC = (Enum, Uint, Uint, Uint, Uint, Uint, Uint, Uint, Uint, Uint, Uint, Uint, Uint) -> Void
  alias PFNGLALPHAFRAGMENTOP1ATIPROC = (Enum, Uint, Uint, Uint, Uint, Uint) -> Void
  alias PFNGLALPHAFRAGMENTOP2ATIPROC = (Enum, Uint, Uint, Uint, Uint, Uint, Uint, Uint, Uint) -> Void
  alias PFNGLALPHAFRAGMENTOP3ATIPROC = (Enum, Uint, Uint, Uint, Uint, Uint, Uint, Uint, Uint, Uint, Uint, Uint) -> Void
  alias PFNGLSETFRAGMENTSHADERCONSTANTATIPROC = (Uint, Float*) -> Void
  ATI_MAP_OBJECT_BUFFER = 1
  alias PFNGLMAPOBJECTBUFFERATIPROC = Uint -> Void*
  alias PFNGLUNMAPOBJECTBUFFERATIPROC = Uint -> Void
  ATI_MEMINFO = 1
  VBO_FREE_MEMORY_ATI = 0x87FB_u32
  TEXTURE_FREE_MEMORY_ATI = 0x87FC_u32
  RENDERBUFFER_FREE_MEMORY_ATI = 0x87FD_u32
  ATI_PIXEL_FORMAT_FLOAT = 1
  RGBA_FLOAT_MODE_ATI = 0x8820_u32
  COLOR_CLEAR_UNCLAMPED_VALUE_ATI = 0x8835_u32
  ATI_PN_TRIANGLES = 1
  PN_TRIANGLES_ATI = 0x87F0_u32
  MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI = 0x87F1_u32
  PN_TRIANGLES_POINT_MODE_ATI = 0x87F2_u32
  PN_TRIANGLES_NORMAL_MODE_ATI = 0x87F3_u32
  PN_TRIANGLES_TESSELATION_LEVEL_ATI = 0x87F4_u32
  PN_TRIANGLES_POINT_MODE_LINEAR_ATI = 0x87F5_u32
  PN_TRIANGLES_POINT_MODE_CUBIC_ATI = 0x87F6_u32
  PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI = 0x87F7_u32
  PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI = 0x87F8_u32
  alias PFNGLPNTRIANGLESIATIPROC = (Enum, Int) -> Void
  alias PFNGLPNTRIANGLESFATIPROC = (Enum, Float) -> Void
  ATI_SEPARATE_STENCIL = 1
  STENCIL_BACK_FUNC_ATI = 0x8800_u32
  STENCIL_BACK_FAIL_ATI = 0x8801_u32
  STENCIL_BACK_PASS_DEPTH_FAIL_ATI = 0x8802_u32
  STENCIL_BACK_PASS_DEPTH_PASS_ATI = 0x8803_u32
  alias PFNGLSTENCILOPSEPARATEATIPROC = (Enum, Enum, Enum, Enum) -> Void
  alias PFNGLSTENCILFUNCSEPARATEATIPROC = (Enum, Enum, Int, Uint) -> Void
  ATI_TEXT_FRAGMENT_SHADER = 1
  TEXT_FRAGMENT_SHADER_ATI = 0x8200_u32
  ATI_TEXTURE_ENV_COMBINE3 = 1
  MODULATE_ADD_ATI = 0x8744_u32
  MODULATE_SIGNED_ADD_ATI = 0x8745_u32
  MODULATE_SUBTRACT_ATI = 0x8746_u32
  ATI_TEXTURE_FLOAT = 1
  RGBA_FLOAT32_ATI = 0x8814_u32
  RGB_FLOAT32_ATI = 0x8815_u32
  ALPHA_FLOAT32_ATI = 0x8816_u32
  INTENSITY_FLOAT32_ATI = 0x8817_u32
  LUMINANCE_FLOAT32_ATI = 0x8818_u32
  LUMINANCE_ALPHA_FLOAT32_ATI = 0x8819_u32
  RGBA_FLOAT16_ATI = 0x881A_u32
  RGB_FLOAT16_ATI = 0x881B_u32
  ALPHA_FLOAT16_ATI = 0x881C_u32
  INTENSITY_FLOAT16_ATI = 0x881D_u32
  LUMINANCE_FLOAT16_ATI = 0x881E_u32
  LUMINANCE_ALPHA_FLOAT16_ATI = 0x881F_u32
  ATI_TEXTURE_MIRROR_ONCE = 1
  MIRROR_CLAMP_ATI = 0x8742_u32
  MIRROR_CLAMP_TO_EDGE_ATI = 0x8743_u32
  ATI_VERTEX_ARRAY_OBJECT = 1
  STATIC_ATI = 0x8760_u32
  DYNAMIC_ATI = 0x8761_u32
  PRESERVE_ATI = 0x8762_u32
  DISCARD_ATI = 0x8763_u32
  OBJECT_BUFFER_SIZE_ATI = 0x8764_u32
  OBJECT_BUFFER_USAGE_ATI = 0x8765_u32
  ARRAY_OBJECT_BUFFER_ATI = 0x8766_u32
  ARRAY_OBJECT_OFFSET_ATI = 0x8767_u32
  alias PFNGLNEWOBJECTBUFFERATIPROC = (Sizei, Void*, Enum) -> Uint
  alias PFNGLISOBJECTBUFFERATIPROC = Uint -> Boolean
  alias PFNGLUPDATEOBJECTBUFFERATIPROC = (Uint, Uint, Sizei, Void*, Enum) -> Void
  alias PFNGLGETOBJECTBUFFERFVATIPROC = (Uint, Enum, Float*) -> Void
  alias PFNGLGETOBJECTBUFFERIVATIPROC = (Uint, Enum, Int*) -> Void
  alias PFNGLFREEOBJECTBUFFERATIPROC = Uint -> Void
  alias PFNGLARRAYOBJECTATIPROC = (Enum, Int, Enum, Sizei, Uint, Uint) -> Void
  alias PFNGLGETARRAYOBJECTFVATIPROC = (Enum, Enum, Float*) -> Void
  alias PFNGLGETARRAYOBJECTIVATIPROC = (Enum, Enum, Int*) -> Void
  alias PFNGLVARIANTARRAYOBJECTATIPROC = (Uint, Enum, Sizei, Uint, Uint) -> Void
  alias PFNGLGETVARIANTARRAYOBJECTFVATIPROC = (Uint, Enum, Float*) -> Void
  alias PFNGLGETVARIANTARRAYOBJECTIVATIPROC = (Uint, Enum, Int*) -> Void
  ATI_VERTEX_ATTRIB_ARRAY_OBJECT = 1
  alias PFNGLVERTEXATTRIBARRAYOBJECTATIPROC = (Uint, Int, Enum, Boolean, Sizei, Uint, Uint) -> Void
  alias PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC = (Uint, Enum, Float*) -> Void
  alias PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC = (Uint, Enum, Int*) -> Void
  ATI_VERTEX_STREAMS = 1
  MAX_VERTEX_STREAMS_ATI = 0x876B_u32
  VERTEX_STREAM0_ATI = 0x876C_u32
  VERTEX_STREAM1_ATI = 0x876D_u32
  VERTEX_STREAM2_ATI = 0x876E_u32
  VERTEX_STREAM3_ATI = 0x876F_u32
  VERTEX_STREAM4_ATI = 0x8770_u32
  VERTEX_STREAM5_ATI = 0x8771_u32
  VERTEX_STREAM6_ATI = 0x8772_u32
  VERTEX_STREAM7_ATI = 0x8773_u32
  VERTEX_SOURCE_ATI = 0x8774_u32
  alias PFNGLVERTEXSTREAM1SATIPROC = (Enum, Short) -> Void
  alias PFNGLVERTEXSTREAM1SVATIPROC = (Enum, Short*) -> Void
  alias PFNGLVERTEXSTREAM1IATIPROC = (Enum, Int) -> Void
  alias PFNGLVERTEXSTREAM1IVATIPROC = (Enum, Int*) -> Void
  alias PFNGLVERTEXSTREAM1FATIPROC = (Enum, Float) -> Void
  alias PFNGLVERTEXSTREAM1FVATIPROC = (Enum, Float*) -> Void
  alias PFNGLVERTEXSTREAM1DATIPROC = (Enum, Double) -> Void
  alias PFNGLVERTEXSTREAM1DVATIPROC = (Enum, Double*) -> Void
  alias PFNGLVERTEXSTREAM2SATIPROC = (Enum, Short, Short) -> Void
  alias PFNGLVERTEXSTREAM2SVATIPROC = (Enum, Short*) -> Void
  alias PFNGLVERTEXSTREAM2IATIPROC = (Enum, Int, Int) -> Void
  alias PFNGLVERTEXSTREAM2IVATIPROC = (Enum, Int*) -> Void
  alias PFNGLVERTEXSTREAM2FATIPROC = (Enum, Float, Float) -> Void
  alias PFNGLVERTEXSTREAM2FVATIPROC = (Enum, Float*) -> Void
  alias PFNGLVERTEXSTREAM2DATIPROC = (Enum, Double, Double) -> Void
  alias PFNGLVERTEXSTREAM2DVATIPROC = (Enum, Double*) -> Void
  alias PFNGLVERTEXSTREAM3SATIPROC = (Enum, Short, Short, Short) -> Void
  alias PFNGLVERTEXSTREAM3SVATIPROC = (Enum, Short*) -> Void
  alias PFNGLVERTEXSTREAM3IATIPROC = (Enum, Int, Int, Int) -> Void
  alias PFNGLVERTEXSTREAM3IVATIPROC = (Enum, Int*) -> Void
  alias PFNGLVERTEXSTREAM3FATIPROC = (Enum, Float, Float, Float) -> Void
  alias PFNGLVERTEXSTREAM3FVATIPROC = (Enum, Float*) -> Void
  alias PFNGLVERTEXSTREAM3DATIPROC = (Enum, Double, Double, Double) -> Void
  alias PFNGLVERTEXSTREAM3DVATIPROC = (Enum, Double*) -> Void
  alias PFNGLVERTEXSTREAM4SATIPROC = (Enum, Short, Short, Short, Short) -> Void
  alias PFNGLVERTEXSTREAM4SVATIPROC = (Enum, Short*) -> Void
  alias PFNGLVERTEXSTREAM4IATIPROC = (Enum, Int, Int, Int, Int) -> Void
  alias PFNGLVERTEXSTREAM4IVATIPROC = (Enum, Int*) -> Void
  alias PFNGLVERTEXSTREAM4FATIPROC = (Enum, Float, Float, Float, Float) -> Void
  alias PFNGLVERTEXSTREAM4FVATIPROC = (Enum, Float*) -> Void
  alias PFNGLVERTEXSTREAM4DATIPROC = (Enum, Double, Double, Double, Double) -> Void
  alias PFNGLVERTEXSTREAM4DVATIPROC = (Enum, Double*) -> Void
  alias PFNGLNORMALSTREAM3BATIPROC = (Enum, Byte, Byte, Byte) -> Void
  alias PFNGLNORMALSTREAM3BVATIPROC = (Enum, Byte*) -> Void
  alias PFNGLNORMALSTREAM3SATIPROC = (Enum, Short, Short, Short) -> Void
  alias PFNGLNORMALSTREAM3SVATIPROC = (Enum, Short*) -> Void
  alias PFNGLNORMALSTREAM3IATIPROC = (Enum, Int, Int, Int) -> Void
  alias PFNGLNORMALSTREAM3IVATIPROC = (Enum, Int*) -> Void
  alias PFNGLNORMALSTREAM3FATIPROC = (Enum, Float, Float, Float) -> Void
  alias PFNGLNORMALSTREAM3FVATIPROC = (Enum, Float*) -> Void
  alias PFNGLNORMALSTREAM3DATIPROC = (Enum, Double, Double, Double) -> Void
  alias PFNGLNORMALSTREAM3DVATIPROC = (Enum, Double*) -> Void
  alias PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC = Enum -> Void
  alias PFNGLVERTEXBLENDENVIATIPROC = (Enum, Int) -> Void
  alias PFNGLVERTEXBLENDENVFATIPROC = (Enum, Float) -> Void
  EXT_422_PIXELS = 1
  GL_422_EXT = 0x80CC_u32
  GL_422_REV_EXT = 0x80CD_u32
  GL_422_AVERAGE_EXT = 0x80CE_u32
  GL_422_REV_AVERAGE_EXT = 0x80CF_u32
  EXT_ABGR = 1
  ABGR_EXT = 0x8000_u32
  EXT_BGRA = 1
  BGR_EXT = 0x80E0_u32
  BGRA_EXT = 0x80E1_u32
  EXT_BINDABLE_UNIFORM = 1
  MAX_VERTEX_BINDABLE_UNIFORMS_EXT = 0x8DE2_u32
  MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT = 0x8DE3_u32
  MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT = 0x8DE4_u32
  MAX_BINDABLE_UNIFORM_SIZE_EXT = 0x8DED_u32
  UNIFORM_BUFFER_EXT = 0x8DEE_u32
  UNIFORM_BUFFER_BINDING_EXT = 0x8DEF_u32
  alias PFNGLUNIFORMBUFFEREXTPROC = (Uint, Int, Uint) -> Void
  alias PFNGLGETUNIFORMBUFFERSIZEEXTPROC = (Uint, Int) -> Int
  alias PFNGLGETUNIFORMOFFSETEXTPROC = (Uint, Int) -> Intptr
  EXT_BLEND_COLOR = 1
  CONSTANT_COLOR_EXT = 0x8001_u32
  ONE_MINUS_CONSTANT_COLOR_EXT = 0x8002_u32
  CONSTANT_ALPHA_EXT = 0x8003_u32
  ONE_MINUS_CONSTANT_ALPHA_EXT = 0x8004_u32
  BLEND_COLOR_EXT = 0x8005_u32
  alias PFNGLBLENDCOLOREXTPROC = (Float, Float, Float, Float) -> Void
  EXT_BLEND_EQUATION_SEPARATE = 1
  BLEND_EQUATION_RGB_EXT = 0x8009_u32
  BLEND_EQUATION_ALPHA_EXT = 0x883D_u32
  alias PFNGLBLENDEQUATIONSEPARATEEXTPROC = (Enum, Enum) -> Void
  EXT_BLEND_FUNC_SEPARATE = 1
  BLEND_DST_RGB_EXT = 0x80C8_u32
  BLEND_SRC_RGB_EXT = 0x80C9_u32
  BLEND_DST_ALPHA_EXT = 0x80CA_u32
  BLEND_SRC_ALPHA_EXT = 0x80CB_u32
  alias PFNGLBLENDFUNCSEPARATEEXTPROC = (Enum, Enum, Enum, Enum) -> Void
  EXT_BLEND_LOGIC_OP = 1
  EXT_BLEND_MINMAX = 1
  MIN_EXT = 0x8007_u32
  MAX_EXT = 0x8008_u32
  FUNC_ADD_EXT = 0x8006_u32
  BLEND_EQUATION_EXT = 0x8009_u32
  alias PFNGLBLENDEQUATIONEXTPROC = Enum -> Void
  EXT_BLEND_SUBTRACT = 1
  FUNC_SUBTRACT_EXT = 0x800A_u32
  FUNC_REVERSE_SUBTRACT_EXT = 0x800B_u32
  EXT_CLIP_VOLUME_HINT = 1
  CLIP_VOLUME_CLIPPING_HINT_EXT = 0x80F0_u32
  EXT_CMYKA = 1
  CMYK_EXT = 0x800C_u32
  CMYKA_EXT = 0x800D_u32
  PACK_CMYK_HINT_EXT = 0x800E_u32
  UNPACK_CMYK_HINT_EXT = 0x800F_u32
  EXT_COLOR_SUBTABLE = 1
  alias PFNGLCOLORSUBTABLEEXTPROC = (Enum, Sizei, Sizei, Enum, Enum, Void*) -> Void
  alias PFNGLCOPYCOLORSUBTABLEEXTPROC = (Enum, Sizei, Int, Int, Sizei) -> Void
  EXT_COMPILED_VERTEX_ARRAY = 1
  ARRAY_ELEMENT_LOCK_FIRST_EXT = 0x81A8_u32
  ARRAY_ELEMENT_LOCK_COUNT_EXT = 0x81A9_u32
  alias PFNGLLOCKARRAYSEXTPROC = (Int, Sizei) -> Void
  alias PFNGLUNLOCKARRAYSEXTPROC = -> Void
  EXT_CONVOLUTION = 1
  CONVOLUTION_1D_EXT = 0x8010_u32
  CONVOLUTION_2D_EXT = 0x8011_u32
  SEPARABLE_2D_EXT = 0x8012_u32
  CONVOLUTION_BORDER_MODE_EXT = 0x8013_u32
  CONVOLUTION_FILTER_SCALE_EXT = 0x8014_u32
  CONVOLUTION_FILTER_BIAS_EXT = 0x8015_u32
  REDUCE_EXT = 0x8016_u32
  CONVOLUTION_FORMAT_EXT = 0x8017_u32
  CONVOLUTION_WIDTH_EXT = 0x8018_u32
  CONVOLUTION_HEIGHT_EXT = 0x8019_u32
  MAX_CONVOLUTION_WIDTH_EXT = 0x801A_u32
  MAX_CONVOLUTION_HEIGHT_EXT = 0x801B_u32
  POST_CONVOLUTION_RED_SCALE_EXT = 0x801C_u32
  POST_CONVOLUTION_GREEN_SCALE_EXT = 0x801D_u32
  POST_CONVOLUTION_BLUE_SCALE_EXT = 0x801E_u32
  POST_CONVOLUTION_ALPHA_SCALE_EXT = 0x801F_u32
  POST_CONVOLUTION_RED_BIAS_EXT = 0x8020_u32
  POST_CONVOLUTION_GREEN_BIAS_EXT = 0x8021_u32
  POST_CONVOLUTION_BLUE_BIAS_EXT = 0x8022_u32
  POST_CONVOLUTION_ALPHA_BIAS_EXT = 0x8023_u32
  alias PFNGLCONVOLUTIONFILTER1DEXTPROC = (Enum, Enum, Sizei, Enum, Enum, Void*) -> Void
  alias PFNGLCONVOLUTIONFILTER2DEXTPROC = (Enum, Enum, Sizei, Sizei, Enum, Enum, Void*) -> Void
  alias PFNGLCONVOLUTIONPARAMETERFEXTPROC = (Enum, Enum, Float) -> Void
  alias PFNGLCONVOLUTIONPARAMETERFVEXTPROC = (Enum, Enum, Float*) -> Void
  alias PFNGLCONVOLUTIONPARAMETERIEXTPROC = (Enum, Enum, Int) -> Void
  alias PFNGLCONVOLUTIONPARAMETERIVEXTPROC = (Enum, Enum, Int*) -> Void
  alias PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC = (Enum, Enum, Int, Int, Sizei) -> Void
  alias PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC = (Enum, Enum, Int, Int, Sizei, Sizei) -> Void
  alias PFNGLGETCONVOLUTIONFILTEREXTPROC = (Enum, Enum, Enum, Void*) -> Void
  alias PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC = (Enum, Enum, Float*) -> Void
  alias PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC = (Enum, Enum, Int*) -> Void
  alias PFNGLGETSEPARABLEFILTEREXTPROC = (Enum, Enum, Enum, Void*, Void*, Void*) -> Void
  alias PFNGLSEPARABLEFILTER2DEXTPROC = (Enum, Enum, Sizei, Sizei, Enum, Enum, Void*, Void*) -> Void
  EXT_COORDINATE_FRAME = 1
  TANGENT_ARRAY_EXT = 0x8439_u32
  BINORMAL_ARRAY_EXT = 0x843A_u32
  CURRENT_TANGENT_EXT = 0x843B_u32
  CURRENT_BINORMAL_EXT = 0x843C_u32
  TANGENT_ARRAY_TYPE_EXT = 0x843E_u32
  TANGENT_ARRAY_STRIDE_EXT = 0x843F_u32
  BINORMAL_ARRAY_TYPE_EXT = 0x8440_u32
  BINORMAL_ARRAY_STRIDE_EXT = 0x8441_u32
  TANGENT_ARRAY_POINTER_EXT = 0x8442_u32
  BINORMAL_ARRAY_POINTER_EXT = 0x8443_u32
  MAP1_TANGENT_EXT = 0x8444_u32
  MAP2_TANGENT_EXT = 0x8445_u32
  MAP1_BINORMAL_EXT = 0x8446_u32
  MAP2_BINORMAL_EXT = 0x8447_u32
  alias PFNGLTANGENT3BEXTPROC = (Byte, Byte, Byte) -> Void
  alias PFNGLTANGENT3BVEXTPROC = Byte* -> Void
  alias PFNGLTANGENT3DEXTPROC = (Double, Double, Double) -> Void
  alias PFNGLTANGENT3DVEXTPROC = Double* -> Void
  alias PFNGLTANGENT3FEXTPROC = (Float, Float, Float) -> Void
  alias PFNGLTANGENT3FVEXTPROC = Float* -> Void
  alias PFNGLTANGENT3IEXTPROC = (Int, Int, Int) -> Void
  alias PFNGLTANGENT3IVEXTPROC = Int* -> Void
  alias PFNGLTANGENT3SEXTPROC = (Short, Short, Short) -> Void
  alias PFNGLTANGENT3SVEXTPROC = Short* -> Void
  alias PFNGLBINORMAL3BEXTPROC = (Byte, Byte, Byte) -> Void
  alias PFNGLBINORMAL3BVEXTPROC = Byte* -> Void
  alias PFNGLBINORMAL3DEXTPROC = (Double, Double, Double) -> Void
  alias PFNGLBINORMAL3DVEXTPROC = Double* -> Void
  alias PFNGLBINORMAL3FEXTPROC = (Float, Float, Float) -> Void
  alias PFNGLBINORMAL3FVEXTPROC = Float* -> Void
  alias PFNGLBINORMAL3IEXTPROC = (Int, Int, Int) -> Void
  alias PFNGLBINORMAL3IVEXTPROC = Int* -> Void
  alias PFNGLBINORMAL3SEXTPROC = (Short, Short, Short) -> Void
  alias PFNGLBINORMAL3SVEXTPROC = Short* -> Void
  alias PFNGLTANGENTPOINTEREXTPROC = (Enum, Sizei, Void*) -> Void
  alias PFNGLBINORMALPOINTEREXTPROC = (Enum, Sizei, Void*) -> Void
  EXT_COPY_TEXTURE = 1
  alias PFNGLCOPYTEXIMAGE1DEXTPROC = (Enum, Int, Enum, Int, Int, Sizei, Int) -> Void
  alias PFNGLCOPYTEXIMAGE2DEXTPROC = (Enum, Int, Enum, Int, Int, Sizei, Sizei, Int) -> Void
  alias PFNGLCOPYTEXSUBIMAGE1DEXTPROC = (Enum, Int, Int, Int, Int, Sizei) -> Void
  alias PFNGLCOPYTEXSUBIMAGE2DEXTPROC = (Enum, Int, Int, Int, Int, Int, Sizei, Sizei) -> Void
  alias PFNGLCOPYTEXSUBIMAGE3DEXTPROC = (Enum, Int, Int, Int, Int, Int, Int, Sizei, Sizei) -> Void
  EXT_CULL_VERTEX = 1
  CULL_VERTEX_EXT = 0x81AA_u32
  CULL_VERTEX_EYE_POSITION_EXT = 0x81AB_u32
  CULL_VERTEX_OBJECT_POSITION_EXT = 0x81AC_u32
  alias PFNGLCULLPARAMETERDVEXTPROC = (Enum, Double*) -> Void
  alias PFNGLCULLPARAMETERFVEXTPROC = (Enum, Float*) -> Void
  EXT_DEBUG_LABEL = 1
  PROGRAM_PIPELINE_OBJECT_EXT = 0x8A4F_u32
  PROGRAM_OBJECT_EXT = 0x8B40_u32
  SHADER_OBJECT_EXT = 0x8B48_u32
  BUFFER_OBJECT_EXT = 0x9151_u32
  QUERY_OBJECT_EXT = 0x9153_u32
  VERTEX_ARRAY_OBJECT_EXT = 0x9154_u32
  alias PFNGLLABELOBJECTEXTPROC = (Enum, Uint, Sizei, Char*) -> Void
  alias PFNGLGETOBJECTLABELEXTPROC = (Enum, Uint, Sizei, Sizei*, Char*) -> Void
  EXT_DEBUG_MARKER = 1
  alias PFNGLINSERTEVENTMARKEREXTPROC = (Sizei, Char*) -> Void
  alias PFNGLPUSHGROUPMARKEREXTPROC = (Sizei, Char*) -> Void
  alias PFNGLPOPGROUPMARKEREXTPROC = -> Void
  EXT_DEPTH_BOUNDS_TEST = 1
  DEPTH_BOUNDS_TEST_EXT = 0x8890_u32
  DEPTH_BOUNDS_EXT = 0x8891_u32
  alias PFNGLDEPTHBOUNDSEXTPROC = (Clampd, Clampd) -> Void
  EXT_DIRECT_STATE_ACCESS = 1
  PROGRAM_MATRIX_EXT = 0x8E2D_u32
  TRANSPOSE_PROGRAM_MATRIX_EXT = 0x8E2E_u32
  PROGRAM_MATRIX_STACK_DEPTH_EXT = 0x8E2F_u32
  alias PFNGLMATRIXLOADFEXTPROC = (Enum, Float*) -> Void
  alias PFNGLMATRIXLOADDEXTPROC = (Enum, Double*) -> Void
  alias PFNGLMATRIXMULTFEXTPROC = (Enum, Float*) -> Void
  alias PFNGLMATRIXMULTDEXTPROC = (Enum, Double*) -> Void
  alias PFNGLMATRIXLOADIDENTITYEXTPROC = Enum -> Void
  alias PFNGLMATRIXROTATEFEXTPROC = (Enum, Float, Float, Float, Float) -> Void
  alias PFNGLMATRIXROTATEDEXTPROC = (Enum, Double, Double, Double, Double) -> Void
  alias PFNGLMATRIXSCALEFEXTPROC = (Enum, Float, Float, Float) -> Void
  alias PFNGLMATRIXSCALEDEXTPROC = (Enum, Double, Double, Double) -> Void
  alias PFNGLMATRIXTRANSLATEFEXTPROC = (Enum, Float, Float, Float) -> Void
  alias PFNGLMATRIXTRANSLATEDEXTPROC = (Enum, Double, Double, Double) -> Void
  alias PFNGLMATRIXFRUSTUMEXTPROC = (Enum, Double, Double, Double, Double, Double, Double) -> Void
  alias PFNGLMATRIXORTHOEXTPROC = (Enum, Double, Double, Double, Double, Double, Double) -> Void
  alias PFNGLMATRIXPOPEXTPROC = Enum -> Void
  alias PFNGLMATRIXPUSHEXTPROC = Enum -> Void
  alias PFNGLCLIENTATTRIBDEFAULTEXTPROC = Bitfield -> Void
  alias PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC = Bitfield -> Void
  alias PFNGLTEXTUREPARAMETERFEXTPROC = (Uint, Enum, Enum, Float) -> Void
  alias PFNGLTEXTUREPARAMETERFVEXTPROC = (Uint, Enum, Enum, Float*) -> Void
  alias PFNGLTEXTUREPARAMETERIEXTPROC = (Uint, Enum, Enum, Int) -> Void
  alias PFNGLTEXTUREPARAMETERIVEXTPROC = (Uint, Enum, Enum, Int*) -> Void
  alias PFNGLTEXTUREIMAGE1DEXTPROC = (Uint, Enum, Int, Int, Sizei, Int, Enum, Enum, Void*) -> Void
  alias PFNGLTEXTUREIMAGE2DEXTPROC = (Uint, Enum, Int, Int, Sizei, Sizei, Int, Enum, Enum, Void*) -> Void
  alias PFNGLTEXTURESUBIMAGE1DEXTPROC = (Uint, Enum, Int, Int, Sizei, Enum, Enum, Void*) -> Void
  alias PFNGLTEXTURESUBIMAGE2DEXTPROC = (Uint, Enum, Int, Int, Int, Sizei, Sizei, Enum, Enum, Void*) -> Void
  alias PFNGLCOPYTEXTUREIMAGE1DEXTPROC = (Uint, Enum, Int, Enum, Int, Int, Sizei, Int) -> Void
  alias PFNGLCOPYTEXTUREIMAGE2DEXTPROC = (Uint, Enum, Int, Enum, Int, Int, Sizei, Sizei, Int) -> Void
  alias PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC = (Uint, Enum, Int, Int, Int, Int, Sizei) -> Void
  alias PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC = (Uint, Enum, Int, Int, Int, Int, Int, Sizei, Sizei) -> Void
  alias PFNGLGETTEXTUREIMAGEEXTPROC = (Uint, Enum, Int, Enum, Enum, Void*) -> Void
  alias PFNGLGETTEXTUREPARAMETERFVEXTPROC = (Uint, Enum, Enum, Float*) -> Void
  alias PFNGLGETTEXTUREPARAMETERIVEXTPROC = (Uint, Enum, Enum, Int*) -> Void
  alias PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC = (Uint, Enum, Int, Enum, Float*) -> Void
  alias PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC = (Uint, Enum, Int, Enum, Int*) -> Void
  alias PFNGLTEXTUREIMAGE3DEXTPROC = (Uint, Enum, Int, Int, Sizei, Sizei, Sizei, Int, Enum, Enum, Void*) -> Void
  alias PFNGLTEXTURESUBIMAGE3DEXTPROC = (Uint, Enum, Int, Int, Int, Int, Sizei, Sizei, Sizei, Enum, Enum, Void*) -> Void
  alias PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC = (Uint, Enum, Int, Int, Int, Int, Int, Int, Sizei, Sizei) -> Void
  alias PFNGLBINDMULTITEXTUREEXTPROC = (Enum, Enum, Uint) -> Void
  alias PFNGLMULTITEXCOORDPOINTEREXTPROC = (Enum, Int, Enum, Sizei, Void*) -> Void
  alias PFNGLMULTITEXENVFEXTPROC = (Enum, Enum, Enum, Float) -> Void
  alias PFNGLMULTITEXENVFVEXTPROC = (Enum, Enum, Enum, Float*) -> Void
  alias PFNGLMULTITEXENVIEXTPROC = (Enum, Enum, Enum, Int) -> Void
  alias PFNGLMULTITEXENVIVEXTPROC = (Enum, Enum, Enum, Int*) -> Void
  alias PFNGLMULTITEXGENDEXTPROC = (Enum, Enum, Enum, Double) -> Void
  alias PFNGLMULTITEXGENDVEXTPROC = (Enum, Enum, Enum, Double*) -> Void
  alias PFNGLMULTITEXGENFEXTPROC = (Enum, Enum, Enum, Float) -> Void
  alias PFNGLMULTITEXGENFVEXTPROC = (Enum, Enum, Enum, Float*) -> Void
  alias PFNGLMULTITEXGENIEXTPROC = (Enum, Enum, Enum, Int) -> Void
  alias PFNGLMULTITEXGENIVEXTPROC = (Enum, Enum, Enum, Int*) -> Void
  alias PFNGLGETMULTITEXENVFVEXTPROC = (Enum, Enum, Enum, Float*) -> Void
  alias PFNGLGETMULTITEXENVIVEXTPROC = (Enum, Enum, Enum, Int*) -> Void
  alias PFNGLGETMULTITEXGENDVEXTPROC = (Enum, Enum, Enum, Double*) -> Void
  alias PFNGLGETMULTITEXGENFVEXTPROC = (Enum, Enum, Enum, Float*) -> Void
  alias PFNGLGETMULTITEXGENIVEXTPROC = (Enum, Enum, Enum, Int*) -> Void
  alias PFNGLMULTITEXPARAMETERIEXTPROC = (Enum, Enum, Enum, Int) -> Void
  alias PFNGLMULTITEXPARAMETERIVEXTPROC = (Enum, Enum, Enum, Int*) -> Void
  alias PFNGLMULTITEXPARAMETERFEXTPROC = (Enum, Enum, Enum, Float) -> Void
  alias PFNGLMULTITEXPARAMETERFVEXTPROC = (Enum, Enum, Enum, Float*) -> Void
  alias PFNGLMULTITEXIMAGE1DEXTPROC = (Enum, Enum, Int, Int, Sizei, Int, Enum, Enum, Void*) -> Void
  alias PFNGLMULTITEXIMAGE2DEXTPROC = (Enum, Enum, Int, Int, Sizei, Sizei, Int, Enum, Enum, Void*) -> Void
  alias PFNGLMULTITEXSUBIMAGE1DEXTPROC = (Enum, Enum, Int, Int, Sizei, Enum, Enum, Void*) -> Void
  alias PFNGLMULTITEXSUBIMAGE2DEXTPROC = (Enum, Enum, Int, Int, Int, Sizei, Sizei, Enum, Enum, Void*) -> Void
  alias PFNGLCOPYMULTITEXIMAGE1DEXTPROC = (Enum, Enum, Int, Enum, Int, Int, Sizei, Int) -> Void
  alias PFNGLCOPYMULTITEXIMAGE2DEXTPROC = (Enum, Enum, Int, Enum, Int, Int, Sizei, Sizei, Int) -> Void
  alias PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC = (Enum, Enum, Int, Int, Int, Int, Sizei) -> Void
  alias PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC = (Enum, Enum, Int, Int, Int, Int, Int, Sizei, Sizei) -> Void
  alias PFNGLGETMULTITEXIMAGEEXTPROC = (Enum, Enum, Int, Enum, Enum, Void*) -> Void
  alias PFNGLGETMULTITEXPARAMETERFVEXTPROC = (Enum, Enum, Enum, Float*) -> Void
  alias PFNGLGETMULTITEXPARAMETERIVEXTPROC = (Enum, Enum, Enum, Int*) -> Void
  alias PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC = (Enum, Enum, Int, Enum, Float*) -> Void
  alias PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC = (Enum, Enum, Int, Enum, Int*) -> Void
  alias PFNGLMULTITEXIMAGE3DEXTPROC = (Enum, Enum, Int, Int, Sizei, Sizei, Sizei, Int, Enum, Enum, Void*) -> Void
  alias PFNGLMULTITEXSUBIMAGE3DEXTPROC = (Enum, Enum, Int, Int, Int, Int, Sizei, Sizei, Sizei, Enum, Enum, Void*) -> Void
  alias PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC = (Enum, Enum, Int, Int, Int, Int, Int, Int, Sizei, Sizei) -> Void
  alias PFNGLENABLECLIENTSTATEINDEXEDEXTPROC = (Enum, Uint) -> Void
  alias PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC = (Enum, Uint) -> Void
  alias PFNGLGETFLOATINDEXEDVEXTPROC = (Enum, Uint, Float*) -> Void
  alias PFNGLGETDOUBLEINDEXEDVEXTPROC = (Enum, Uint, Double*) -> Void
  alias PFNGLGETPOINTERINDEXEDVEXTPROC = (Enum, Uint, Void**) -> Void
  alias PFNGLENABLEINDEXEDEXTPROC = (Enum, Uint) -> Void
  alias PFNGLDISABLEINDEXEDEXTPROC = (Enum, Uint) -> Void
  alias PFNGLISENABLEDINDEXEDEXTPROC = (Enum, Uint) -> Boolean
  alias PFNGLGETINTEGERINDEXEDVEXTPROC = (Enum, Uint, Int*) -> Void
  alias PFNGLGETBOOLEANINDEXEDVEXTPROC = (Enum, Uint, Boolean*) -> Void
  alias PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC = (Uint, Enum, Int, Enum, Sizei, Sizei, Sizei, Int, Sizei, Void*) -> Void
  alias PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC = (Uint, Enum, Int, Enum, Sizei, Sizei, Int, Sizei, Void*) -> Void
  alias PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC = (Uint, Enum, Int, Enum, Sizei, Int, Sizei, Void*) -> Void
  alias PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC = (Uint, Enum, Int, Int, Int, Int, Sizei, Sizei, Sizei, Enum, Sizei, Void*) -> Void
  alias PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC = (Uint, Enum, Int, Int, Int, Sizei, Sizei, Enum, Sizei, Void*) -> Void
  alias PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC = (Uint, Enum, Int, Int, Sizei, Enum, Sizei, Void*) -> Void
  alias PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC = (Uint, Enum, Int, Void*) -> Void
  alias PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC = (Enum, Enum, Int, Enum, Sizei, Sizei, Sizei, Int, Sizei, Void*) -> Void
  alias PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC = (Enum, Enum, Int, Enum, Sizei, Sizei, Int, Sizei, Void*) -> Void
  alias PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC = (Enum, Enum, Int, Enum, Sizei, Int, Sizei, Void*) -> Void
  alias PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC = (Enum, Enum, Int, Int, Int, Int, Sizei, Sizei, Sizei, Enum, Sizei, Void*) -> Void
  alias PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC = (Enum, Enum, Int, Int, Int, Sizei, Sizei, Enum, Sizei, Void*) -> Void
  alias PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC = (Enum, Enum, Int, Int, Sizei, Enum, Sizei, Void*) -> Void
  alias PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC = (Enum, Enum, Int, Void*) -> Void
  alias PFNGLMATRIXLOADTRANSPOSEFEXTPROC = (Enum, Float*) -> Void
  alias PFNGLMATRIXLOADTRANSPOSEDEXTPROC = (Enum, Double*) -> Void
  alias PFNGLMATRIXMULTTRANSPOSEFEXTPROC = (Enum, Float*) -> Void
  alias PFNGLMATRIXMULTTRANSPOSEDEXTPROC = (Enum, Double*) -> Void
  alias PFNGLNAMEDBUFFERDATAEXTPROC = (Uint, Sizeiptr, Void*, Enum) -> Void
  alias PFNGLNAMEDBUFFERSUBDATAEXTPROC = (Uint, Intptr, Sizeiptr, Void*) -> Void
  alias PFNGLMAPNAMEDBUFFEREXTPROC = (Uint, Enum) -> Void*
  alias PFNGLUNMAPNAMEDBUFFEREXTPROC = Uint -> Boolean
  alias PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC = (Uint, Enum, Int*) -> Void
  alias PFNGLGETNAMEDBUFFERPOINTERVEXTPROC = (Uint, Enum, Void**) -> Void
  alias PFNGLGETNAMEDBUFFERSUBDATAEXTPROC = (Uint, Intptr, Sizeiptr, Void*) -> Void
  alias PFNGLPROGRAMUNIFORM1FEXTPROC = (Uint, Int, Float) -> Void
  alias PFNGLPROGRAMUNIFORM2FEXTPROC = (Uint, Int, Float, Float) -> Void
  alias PFNGLPROGRAMUNIFORM3FEXTPROC = (Uint, Int, Float, Float, Float) -> Void
  alias PFNGLPROGRAMUNIFORM4FEXTPROC = (Uint, Int, Float, Float, Float, Float) -> Void
  alias PFNGLPROGRAMUNIFORM1IEXTPROC = (Uint, Int, Int) -> Void
  alias PFNGLPROGRAMUNIFORM2IEXTPROC = (Uint, Int, Int, Int) -> Void
  alias PFNGLPROGRAMUNIFORM3IEXTPROC = (Uint, Int, Int, Int, Int) -> Void
  alias PFNGLPROGRAMUNIFORM4IEXTPROC = (Uint, Int, Int, Int, Int, Int) -> Void
  alias PFNGLPROGRAMUNIFORM1FVEXTPROC = (Uint, Int, Sizei, Float*) -> Void
  alias PFNGLPROGRAMUNIFORM2FVEXTPROC = (Uint, Int, Sizei, Float*) -> Void
  alias PFNGLPROGRAMUNIFORM3FVEXTPROC = (Uint, Int, Sizei, Float*) -> Void
  alias PFNGLPROGRAMUNIFORM4FVEXTPROC = (Uint, Int, Sizei, Float*) -> Void
  alias PFNGLPROGRAMUNIFORM1IVEXTPROC = (Uint, Int, Sizei, Int*) -> Void
  alias PFNGLPROGRAMUNIFORM2IVEXTPROC = (Uint, Int, Sizei, Int*) -> Void
  alias PFNGLPROGRAMUNIFORM3IVEXTPROC = (Uint, Int, Sizei, Int*) -> Void
  alias PFNGLPROGRAMUNIFORM4IVEXTPROC = (Uint, Int, Sizei, Int*) -> Void
  alias PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC = (Uint, Int, Sizei, Boolean, Float*) -> Void
  alias PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC = (Uint, Int, Sizei, Boolean, Float*) -> Void
  alias PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC = (Uint, Int, Sizei, Boolean, Float*) -> Void
  alias PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC = (Uint, Int, Sizei, Boolean, Float*) -> Void
  alias PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC = (Uint, Int, Sizei, Boolean, Float*) -> Void
  alias PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC = (Uint, Int, Sizei, Boolean, Float*) -> Void
  alias PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC = (Uint, Int, Sizei, Boolean, Float*) -> Void
  alias PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC = (Uint, Int, Sizei, Boolean, Float*) -> Void
  alias PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC = (Uint, Int, Sizei, Boolean, Float*) -> Void
  alias PFNGLTEXTUREBUFFEREXTPROC = (Uint, Enum, Enum, Uint) -> Void
  alias PFNGLMULTITEXBUFFEREXTPROC = (Enum, Enum, Enum, Uint) -> Void
  alias PFNGLTEXTUREPARAMETERIIVEXTPROC = (Uint, Enum, Enum, Int*) -> Void
  alias PFNGLTEXTUREPARAMETERIUIVEXTPROC = (Uint, Enum, Enum, Uint*) -> Void
  alias PFNGLGETTEXTUREPARAMETERIIVEXTPROC = (Uint, Enum, Enum, Int*) -> Void
  alias PFNGLGETTEXTUREPARAMETERIUIVEXTPROC = (Uint, Enum, Enum, Uint*) -> Void
  alias PFNGLMULTITEXPARAMETERIIVEXTPROC = (Enum, Enum, Enum, Int*) -> Void
  alias PFNGLMULTITEXPARAMETERIUIVEXTPROC = (Enum, Enum, Enum, Uint*) -> Void
  alias PFNGLGETMULTITEXPARAMETERIIVEXTPROC = (Enum, Enum, Enum, Int*) -> Void
  alias PFNGLGETMULTITEXPARAMETERIUIVEXTPROC = (Enum, Enum, Enum, Uint*) -> Void
  alias PFNGLPROGRAMUNIFORM1UIEXTPROC = (Uint, Int, Uint) -> Void
  alias PFNGLPROGRAMUNIFORM2UIEXTPROC = (Uint, Int, Uint, Uint) -> Void
  alias PFNGLPROGRAMUNIFORM3UIEXTPROC = (Uint, Int, Uint, Uint, Uint) -> Void
  alias PFNGLPROGRAMUNIFORM4UIEXTPROC = (Uint, Int, Uint, Uint, Uint, Uint) -> Void
  alias PFNGLPROGRAMUNIFORM1UIVEXTPROC = (Uint, Int, Sizei, Uint*) -> Void
  alias PFNGLPROGRAMUNIFORM2UIVEXTPROC = (Uint, Int, Sizei, Uint*) -> Void
  alias PFNGLPROGRAMUNIFORM3UIVEXTPROC = (Uint, Int, Sizei, Uint*) -> Void
  alias PFNGLPROGRAMUNIFORM4UIVEXTPROC = (Uint, Int, Sizei, Uint*) -> Void
  alias PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC = (Uint, Enum, Uint, Sizei, Float*) -> Void
  alias PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC = (Uint, Enum, Uint, Int, Int, Int, Int) -> Void
  alias PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC = (Uint, Enum, Uint, Int*) -> Void
  alias PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC = (Uint, Enum, Uint, Sizei, Int*) -> Void
  alias PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC = (Uint, Enum, Uint, Uint, Uint, Uint, Uint) -> Void
  alias PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC = (Uint, Enum, Uint, Uint*) -> Void
  alias PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC = (Uint, Enum, Uint, Sizei, Uint*) -> Void
  alias PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC = (Uint, Enum, Uint, Int*) -> Void
  alias PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC = (Uint, Enum, Uint, Uint*) -> Void
  alias PFNGLENABLECLIENTSTATEIEXTPROC = (Enum, Uint) -> Void
  alias PFNGLDISABLECLIENTSTATEIEXTPROC = (Enum, Uint) -> Void
  alias PFNGLGETFLOATIVEXTPROC = (Enum, Uint, Float*) -> Void
  alias PFNGLGETDOUBLEIVEXTPROC = (Enum, Uint, Double*) -> Void
  alias PFNGLGETPOINTERIVEXTPROC = (Enum, Uint, Void**) -> Void
  alias PFNGLNAMEDPROGRAMSTRINGEXTPROC = (Uint, Enum, Enum, Sizei, Void*) -> Void
  alias PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC = (Uint, Enum, Uint, Double, Double, Double, Double) -> Void
  alias PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC = (Uint, Enum, Uint, Double*) -> Void
  alias PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC = (Uint, Enum, Uint, Float, Float, Float, Float) -> Void
  alias PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC = (Uint, Enum, Uint, Float*) -> Void
  alias PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC = (Uint, Enum, Uint, Double*) -> Void
  alias PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC = (Uint, Enum, Uint, Float*) -> Void
  alias PFNGLGETNAMEDPROGRAMIVEXTPROC = (Uint, Enum, Enum, Int*) -> Void
  alias PFNGLGETNAMEDPROGRAMSTRINGEXTPROC = (Uint, Enum, Enum, Void*) -> Void
  alias PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC = (Uint, Enum, Sizei, Sizei) -> Void
  alias PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC = (Uint, Enum, Int*) -> Void
  alias PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC = (Uint, Sizei, Enum, Sizei, Sizei) -> Void
  alias PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC = (Uint, Sizei, Sizei, Enum, Sizei, Sizei) -> Void
  alias PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC = (Uint, Enum) -> Enum
  alias PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC = (Uint, Enum, Enum, Uint, Int) -> Void
  alias PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC = (Uint, Enum, Enum, Uint, Int) -> Void
  alias PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC = (Uint, Enum, Enum, Uint, Int, Int) -> Void
  alias PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC = (Uint, Enum, Enum, Uint) -> Void
  alias PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC = (Uint, Enum, Enum, Int*) -> Void
  alias PFNGLGENERATETEXTUREMIPMAPEXTPROC = (Uint, Enum) -> Void
  alias PFNGLGENERATEMULTITEXMIPMAPEXTPROC = (Enum, Enum) -> Void
  alias PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC = (Uint, Enum) -> Void
  alias PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC = (Uint, Sizei, Enum*) -> Void
  alias PFNGLFRAMEBUFFERREADBUFFEREXTPROC = (Uint, Enum) -> Void
  alias PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC = (Uint, Enum, Int*) -> Void
  alias PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC = (Uint, Uint, Intptr, Intptr, Sizeiptr) -> Void
  alias PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC = (Uint, Enum, Uint, Int) -> Void
  alias PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC = (Uint, Enum, Uint, Int, Int) -> Void
  alias PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC = (Uint, Enum, Uint, Int, Enum) -> Void
  alias PFNGLTEXTURERENDERBUFFEREXTPROC = (Uint, Enum, Uint) -> Void
  alias PFNGLMULTITEXRENDERBUFFEREXTPROC = (Enum, Enum, Uint) -> Void
  alias PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC = (Uint, Uint, Int, Enum, Sizei, Intptr) -> Void
  alias PFNGLVERTEXARRAYCOLOROFFSETEXTPROC = (Uint, Uint, Int, Enum, Sizei, Intptr) -> Void
  alias PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC = (Uint, Uint, Sizei, Intptr) -> Void
  alias PFNGLVERTEXARRAYINDEXOFFSETEXTPROC = (Uint, Uint, Enum, Sizei, Intptr) -> Void
  alias PFNGLVERTEXARRAYNORMALOFFSETEXTPROC = (Uint, Uint, Enum, Sizei, Intptr) -> Void
  alias PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC = (Uint, Uint, Int, Enum, Sizei, Intptr) -> Void
  alias PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC = (Uint, Uint, Enum, Int, Enum, Sizei, Intptr) -> Void
  alias PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC = (Uint, Uint, Enum, Sizei, Intptr) -> Void
  alias PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC = (Uint, Uint, Int, Enum, Sizei, Intptr) -> Void
  alias PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC = (Uint, Uint, Uint, Int, Enum, Boolean, Sizei, Intptr) -> Void
  alias PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC = (Uint, Uint, Uint, Int, Enum, Sizei, Intptr) -> Void
  alias PFNGLENABLEVERTEXARRAYEXTPROC = (Uint, Enum) -> Void
  alias PFNGLDISABLEVERTEXARRAYEXTPROC = (Uint, Enum) -> Void
  alias PFNGLENABLEVERTEXARRAYATTRIBEXTPROC = (Uint, Uint) -> Void
  alias PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC = (Uint, Uint) -> Void
  alias PFNGLGETVERTEXARRAYINTEGERVEXTPROC = (Uint, Enum, Int*) -> Void
  alias PFNGLGETVERTEXARRAYPOINTERVEXTPROC = (Uint, Enum, Void**) -> Void
  alias PFNGLGETVERTEXARRAYINTEGERIVEXTPROC = (Uint, Uint, Enum, Int*) -> Void
  alias PFNGLGETVERTEXARRAYPOINTERIVEXTPROC = (Uint, Uint, Enum, Void**) -> Void
  alias PFNGLMAPNAMEDBUFFERRANGEEXTPROC = (Uint, Intptr, Sizeiptr, Bitfield) -> Void*
  alias PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC = (Uint, Intptr, Sizeiptr) -> Void
  alias PFNGLNAMEDBUFFERSTORAGEEXTPROC = (Uint, Sizeiptr, Void*, Bitfield) -> Void
  alias PFNGLCLEARNAMEDBUFFERDATAEXTPROC = (Uint, Enum, Enum, Enum, Void*) -> Void
  alias PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC = (Uint, Enum, Sizeiptr, Sizeiptr, Enum, Enum, Void*) -> Void
  alias PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC = (Uint, Enum, Int) -> Void
  alias PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC = (Uint, Enum, Int*) -> Void
  alias PFNGLPROGRAMUNIFORM1DEXTPROC = (Uint, Int, Double) -> Void
  alias PFNGLPROGRAMUNIFORM2DEXTPROC = (Uint, Int, Double, Double) -> Void
  alias PFNGLPROGRAMUNIFORM3DEXTPROC = (Uint, Int, Double, Double, Double) -> Void
  alias PFNGLPROGRAMUNIFORM4DEXTPROC = (Uint, Int, Double, Double, Double, Double) -> Void
  alias PFNGLPROGRAMUNIFORM1DVEXTPROC = (Uint, Int, Sizei, Double*) -> Void
  alias PFNGLPROGRAMUNIFORM2DVEXTPROC = (Uint, Int, Sizei, Double*) -> Void
  alias PFNGLPROGRAMUNIFORM3DVEXTPROC = (Uint, Int, Sizei, Double*) -> Void
  alias PFNGLPROGRAMUNIFORM4DVEXTPROC = (Uint, Int, Sizei, Double*) -> Void
  alias PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC = (Uint, Int, Sizei, Boolean, Double*) -> Void
  alias PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC = (Uint, Int, Sizei, Boolean, Double*) -> Void
  alias PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC = (Uint, Int, Sizei, Boolean, Double*) -> Void
  alias PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC = (Uint, Int, Sizei, Boolean, Double*) -> Void
  alias PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC = (Uint, Int, Sizei, Boolean, Double*) -> Void
  alias PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC = (Uint, Int, Sizei, Boolean, Double*) -> Void
  alias PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC = (Uint, Int, Sizei, Boolean, Double*) -> Void
  alias PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC = (Uint, Int, Sizei, Boolean, Double*) -> Void
  alias PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC = (Uint, Int, Sizei, Boolean, Double*) -> Void
  alias PFNGLTEXTUREBUFFERRANGEEXTPROC = (Uint, Enum, Enum, Uint, Intptr, Sizeiptr) -> Void
  alias PFNGLTEXTURESTORAGE1DEXTPROC = (Uint, Enum, Sizei, Enum, Sizei) -> Void
  alias PFNGLTEXTURESTORAGE2DEXTPROC = (Uint, Enum, Sizei, Enum, Sizei, Sizei) -> Void
  alias PFNGLTEXTURESTORAGE3DEXTPROC = (Uint, Enum, Sizei, Enum, Sizei, Sizei, Sizei) -> Void
  alias PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC = (Uint, Enum, Sizei, Enum, Sizei, Sizei, Boolean) -> Void
  alias PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC = (Uint, Enum, Sizei, Enum, Sizei, Sizei, Sizei, Boolean) -> Void
  alias PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC = (Uint, Uint, Uint, Intptr, Sizei) -> Void
  alias PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC = (Uint, Uint, Int, Enum, Boolean, Uint) -> Void
  alias PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC = (Uint, Uint, Int, Enum, Uint) -> Void
  alias PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC = (Uint, Uint, Int, Enum, Uint) -> Void
  alias PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC = (Uint, Uint, Uint) -> Void
  alias PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC = (Uint, Uint, Uint) -> Void
  alias PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC = (Uint, Uint, Uint, Int, Enum, Sizei, Intptr) -> Void
  alias PFNGLTEXTUREPAGECOMMITMENTEXTPROC = (Uint, Int, Int, Int, Int, Sizei, Sizei, Sizei, Boolean) -> Void
  alias PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC = (Uint, Uint, Uint) -> Void
  EXT_DRAW_BUFFERS2 = 1
  alias PFNGLCOLORMASKINDEXEDEXTPROC = (Uint, Boolean, Boolean, Boolean, Boolean) -> Void
  EXT_DRAW_INSTANCED = 1
  alias PFNGLDRAWARRAYSINSTANCEDEXTPROC = (Enum, Int, Sizei, Sizei) -> Void
  alias PFNGLDRAWELEMENTSINSTANCEDEXTPROC = (Enum, Sizei, Enum, Void*, Sizei) -> Void
  EXT_DRAW_RANGE_ELEMENTS = 1
  MAX_ELEMENTS_VERTICES_EXT = 0x80E8_u32
  MAX_ELEMENTS_INDICES_EXT = 0x80E9_u32
  alias PFNGLDRAWRANGEELEMENTSEXTPROC = (Enum, Uint, Uint, Sizei, Enum, Void*) -> Void
  EXT_FOG_COORD = 1
  FOG_COORDINATE_SOURCE_EXT = 0x8450_u32
  FOG_COORDINATE_EXT = 0x8451_u32
  FRAGMENT_DEPTH_EXT = 0x8452_u32
  CURRENT_FOG_COORDINATE_EXT = 0x8453_u32
  FOG_COORDINATE_ARRAY_TYPE_EXT = 0x8454_u32
  FOG_COORDINATE_ARRAY_STRIDE_EXT = 0x8455_u32
  FOG_COORDINATE_ARRAY_POINTER_EXT = 0x8456_u32
  FOG_COORDINATE_ARRAY_EXT = 0x8457_u32
  alias PFNGLFOGCOORDFEXTPROC = Float -> Void
  alias PFNGLFOGCOORDFVEXTPROC = Float* -> Void
  alias PFNGLFOGCOORDDEXTPROC = Double -> Void
  alias PFNGLFOGCOORDDVEXTPROC = Double* -> Void
  alias PFNGLFOGCOORDPOINTEREXTPROC = (Enum, Sizei, Void*) -> Void
  EXT_FRAMEBUFFER_BLIT = 1
  READ_FRAMEBUFFER_EXT = 0x8CA8_u32
  DRAW_FRAMEBUFFER_EXT = 0x8CA9_u32
  DRAW_FRAMEBUFFER_BINDING_EXT = 0x8CA6_u32
  READ_FRAMEBUFFER_BINDING_EXT = 0x8CAA_u32
  alias PFNGLBLITFRAMEBUFFEREXTPROC = (Int, Int, Int, Int, Int, Int, Int, Int, Bitfield, Enum) -> Void
  EXT_FRAMEBUFFER_MULTISAMPLE = 1
  RENDERBUFFER_SAMPLES_EXT = 0x8CAB_u32
  FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT = 0x8D56_u32
  MAX_SAMPLES_EXT = 0x8D57_u32
  alias PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC = (Enum, Sizei, Enum, Sizei, Sizei) -> Void
  EXT_FRAMEBUFFER_MULTISAMPLE_BLIT_SCALED = 1
  SCALED_RESOLVE_FASTEST_EXT = 0x90BA_u32
  SCALED_RESOLVE_NICEST_EXT = 0x90BB_u32
  EXT_FRAMEBUFFER_OBJECT = 1
  INVALID_FRAMEBUFFER_OPERATION_EXT = 0x0506_u32
  MAX_RENDERBUFFER_SIZE_EXT = 0x84E8_u32
  FRAMEBUFFER_BINDING_EXT = 0x8CA6_u32
  RENDERBUFFER_BINDING_EXT = 0x8CA7_u32
  FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT = 0x8CD0_u32
  FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT = 0x8CD1_u32
  FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT = 0x8CD2_u32
  FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT = 0x8CD3_u32
  FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT = 0x8CD4_u32
  FRAMEBUFFER_COMPLETE_EXT = 0x8CD5_u32
  FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT = 0x8CD6_u32
  FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT = 0x8CD7_u32
  FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT = 0x8CD9_u32
  FRAMEBUFFER_INCOMPLETE_FORMATS_EXT = 0x8CDA_u32
  FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT = 0x8CDB_u32
  FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT = 0x8CDC_u32
  FRAMEBUFFER_UNSUPPORTED_EXT = 0x8CDD_u32
  MAX_COLOR_ATTACHMENTS_EXT = 0x8CDF_u32
  COLOR_ATTACHMENT0_EXT = 0x8CE0_u32
  COLOR_ATTACHMENT1_EXT = 0x8CE1_u32
  COLOR_ATTACHMENT2_EXT = 0x8CE2_u32
  COLOR_ATTACHMENT3_EXT = 0x8CE3_u32
  COLOR_ATTACHMENT4_EXT = 0x8CE4_u32
  COLOR_ATTACHMENT5_EXT = 0x8CE5_u32
  COLOR_ATTACHMENT6_EXT = 0x8CE6_u32
  COLOR_ATTACHMENT7_EXT = 0x8CE7_u32
  COLOR_ATTACHMENT8_EXT = 0x8CE8_u32
  COLOR_ATTACHMENT9_EXT = 0x8CE9_u32
  COLOR_ATTACHMENT10_EXT = 0x8CEA_u32
  COLOR_ATTACHMENT11_EXT = 0x8CEB_u32
  COLOR_ATTACHMENT12_EXT = 0x8CEC_u32
  COLOR_ATTACHMENT13_EXT = 0x8CED_u32
  COLOR_ATTACHMENT14_EXT = 0x8CEE_u32
  COLOR_ATTACHMENT15_EXT = 0x8CEF_u32
  DEPTH_ATTACHMENT_EXT = 0x8D00_u32
  STENCIL_ATTACHMENT_EXT = 0x8D20_u32
  FRAMEBUFFER_EXT = 0x8D40_u32
  RENDERBUFFER_EXT = 0x8D41_u32
  RENDERBUFFER_WIDTH_EXT = 0x8D42_u32
  RENDERBUFFER_HEIGHT_EXT = 0x8D43_u32
  RENDERBUFFER_INTERNAL_FORMAT_EXT = 0x8D44_u32
  STENCIL_INDEX1_EXT = 0x8D46_u32
  STENCIL_INDEX4_EXT = 0x8D47_u32
  STENCIL_INDEX8_EXT = 0x8D48_u32
  STENCIL_INDEX16_EXT = 0x8D49_u32
  RENDERBUFFER_RED_SIZE_EXT = 0x8D50_u32
  RENDERBUFFER_GREEN_SIZE_EXT = 0x8D51_u32
  RENDERBUFFER_BLUE_SIZE_EXT = 0x8D52_u32
  RENDERBUFFER_ALPHA_SIZE_EXT = 0x8D53_u32
  RENDERBUFFER_DEPTH_SIZE_EXT = 0x8D54_u32
  RENDERBUFFER_STENCIL_SIZE_EXT = 0x8D55_u32
  alias PFNGLISRENDERBUFFEREXTPROC = Uint -> Boolean
  alias PFNGLBINDRENDERBUFFEREXTPROC = (Enum, Uint) -> Void
  alias PFNGLDELETERENDERBUFFERSEXTPROC = (Sizei, Uint*) -> Void
  alias PFNGLGENRENDERBUFFERSEXTPROC = (Sizei, Uint*) -> Void
  alias PFNGLRENDERBUFFERSTORAGEEXTPROC = (Enum, Enum, Sizei, Sizei) -> Void
  alias PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC = (Enum, Enum, Int*) -> Void
  alias PFNGLISFRAMEBUFFEREXTPROC = Uint -> Boolean
  alias PFNGLBINDFRAMEBUFFEREXTPROC = (Enum, Uint) -> Void
  alias PFNGLDELETEFRAMEBUFFERSEXTPROC = (Sizei, Uint*) -> Void
  alias PFNGLGENFRAMEBUFFERSEXTPROC = (Sizei, Uint*) -> Void
  alias PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC = Enum -> Enum
  alias PFNGLFRAMEBUFFERTEXTURE1DEXTPROC = (Enum, Enum, Enum, Uint, Int) -> Void
  alias PFNGLFRAMEBUFFERTEXTURE2DEXTPROC = (Enum, Enum, Enum, Uint, Int) -> Void
  alias PFNGLFRAMEBUFFERTEXTURE3DEXTPROC = (Enum, Enum, Enum, Uint, Int, Int) -> Void
  alias PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC = (Enum, Enum, Enum, Uint) -> Void
  alias PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC = (Enum, Enum, Enum, Int*) -> Void
  alias PFNGLGENERATEMIPMAPEXTPROC = Enum -> Void
  EXT_FRAMEBUFFER_S_RGB = 1
  FRAMEBUFFER_SRGB_EXT = 0x8DB9_u32
  FRAMEBUFFER_SRGB_CAPABLE_EXT = 0x8DBA_u32
  EXT_GEOMETRY_SHADER4 = 1
  GEOMETRY_SHADER_EXT = 0x8DD9_u32
  GEOMETRY_VERTICES_OUT_EXT = 0x8DDA_u32
  GEOMETRY_INPUT_TYPE_EXT = 0x8DDB_u32
  GEOMETRY_OUTPUT_TYPE_EXT = 0x8DDC_u32
  MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT = 0x8C29_u32
  MAX_GEOMETRY_VARYING_COMPONENTS_EXT = 0x8DDD_u32
  MAX_VERTEX_VARYING_COMPONENTS_EXT = 0x8DDE_u32
  MAX_VARYING_COMPONENTS_EXT = 0x8B4B_u32
  MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT = 0x8DDF_u32
  MAX_GEOMETRY_OUTPUT_VERTICES_EXT = 0x8DE0_u32
  MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT = 0x8DE1_u32
  LINES_ADJACENCY_EXT = 0x000A_u32
  LINE_STRIP_ADJACENCY_EXT = 0x000B_u32
  TRIANGLES_ADJACENCY_EXT = 0x000C_u32
  TRIANGLE_STRIP_ADJACENCY_EXT = 0x000D_u32
  FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT = 0x8DA8_u32
  FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT = 0x8DA9_u32
  FRAMEBUFFER_ATTACHMENT_LAYERED_EXT = 0x8DA7_u32
  FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT = 0x8CD4_u32
  PROGRAM_POINT_SIZE_EXT = 0x8642_u32
  alias PFNGLPROGRAMPARAMETERIEXTPROC = (Uint, Enum, Int) -> Void
  EXT_GPU_PROGRAM_PARAMETERS = 1
  alias PFNGLPROGRAMENVPARAMETERS4FVEXTPROC = (Enum, Uint, Sizei, Float*) -> Void
  alias PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC = (Enum, Uint, Sizei, Float*) -> Void
  EXT_GPU_SHADER4 = 1
  VERTEX_ATTRIB_ARRAY_INTEGER_EXT = 0x88FD_u32
  SAMPLER_1D_ARRAY_EXT = 0x8DC0_u32
  SAMPLER_2D_ARRAY_EXT = 0x8DC1_u32
  SAMPLER_BUFFER_EXT = 0x8DC2_u32
  SAMPLER_1D_ARRAY_SHADOW_EXT = 0x8DC3_u32
  SAMPLER_2D_ARRAY_SHADOW_EXT = 0x8DC4_u32
  SAMPLER_CUBE_SHADOW_EXT = 0x8DC5_u32
  UNSIGNED_INT_VEC2_EXT = 0x8DC6_u32
  UNSIGNED_INT_VEC3_EXT = 0x8DC7_u32
  UNSIGNED_INT_VEC4_EXT = 0x8DC8_u32
  INT_SAMPLER_1D_EXT = 0x8DC9_u32
  INT_SAMPLER_2D_EXT = 0x8DCA_u32
  INT_SAMPLER_3D_EXT = 0x8DCB_u32
  INT_SAMPLER_CUBE_EXT = 0x8DCC_u32
  INT_SAMPLER_2D_RECT_EXT = 0x8DCD_u32
  INT_SAMPLER_1D_ARRAY_EXT = 0x8DCE_u32
  INT_SAMPLER_2D_ARRAY_EXT = 0x8DCF_u32
  INT_SAMPLER_BUFFER_EXT = 0x8DD0_u32
  UNSIGNED_INT_SAMPLER_1D_EXT = 0x8DD1_u32
  UNSIGNED_INT_SAMPLER_2D_EXT = 0x8DD2_u32
  UNSIGNED_INT_SAMPLER_3D_EXT = 0x8DD3_u32
  UNSIGNED_INT_SAMPLER_CUBE_EXT = 0x8DD4_u32
  UNSIGNED_INT_SAMPLER_2D_RECT_EXT = 0x8DD5_u32
  UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT = 0x8DD6_u32
  UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT = 0x8DD7_u32
  UNSIGNED_INT_SAMPLER_BUFFER_EXT = 0x8DD8_u32
  MIN_PROGRAM_TEXEL_OFFSET_EXT = 0x8904_u32
  MAX_PROGRAM_TEXEL_OFFSET_EXT = 0x8905_u32
  alias PFNGLGETUNIFORMUIVEXTPROC = (Uint, Int, Uint*) -> Void
  alias PFNGLBINDFRAGDATALOCATIONEXTPROC = (Uint, Uint, Char*) -> Void
  alias PFNGLGETFRAGDATALOCATIONEXTPROC = (Uint, Char*) -> Int
  alias PFNGLUNIFORM1UIEXTPROC = (Int, Uint) -> Void
  alias PFNGLUNIFORM2UIEXTPROC = (Int, Uint, Uint) -> Void
  alias PFNGLUNIFORM3UIEXTPROC = (Int, Uint, Uint, Uint) -> Void
  alias PFNGLUNIFORM4UIEXTPROC = (Int, Uint, Uint, Uint, Uint) -> Void
  alias PFNGLUNIFORM1UIVEXTPROC = (Int, Sizei, Uint*) -> Void
  alias PFNGLUNIFORM2UIVEXTPROC = (Int, Sizei, Uint*) -> Void
  alias PFNGLUNIFORM3UIVEXTPROC = (Int, Sizei, Uint*) -> Void
  alias PFNGLUNIFORM4UIVEXTPROC = (Int, Sizei, Uint*) -> Void
  EXT_HISTOGRAM = 1
  HISTOGRAM_EXT = 0x8024_u32
  PROXY_HISTOGRAM_EXT = 0x8025_u32
  HISTOGRAM_WIDTH_EXT = 0x8026_u32
  HISTOGRAM_FORMAT_EXT = 0x8027_u32
  HISTOGRAM_RED_SIZE_EXT = 0x8028_u32
  HISTOGRAM_GREEN_SIZE_EXT = 0x8029_u32
  HISTOGRAM_BLUE_SIZE_EXT = 0x802A_u32
  HISTOGRAM_ALPHA_SIZE_EXT = 0x802B_u32
  HISTOGRAM_LUMINANCE_SIZE_EXT = 0x802C_u32
  HISTOGRAM_SINK_EXT = 0x802D_u32
  MINMAX_EXT = 0x802E_u32
  MINMAX_FORMAT_EXT = 0x802F_u32
  MINMAX_SINK_EXT = 0x8030_u32
  TABLE_TOO_LARGE_EXT = 0x8031_u32
  alias PFNGLGETHISTOGRAMEXTPROC = (Enum, Boolean, Enum, Enum, Void*) -> Void
  alias PFNGLGETHISTOGRAMPARAMETERFVEXTPROC = (Enum, Enum, Float*) -> Void
  alias PFNGLGETHISTOGRAMPARAMETERIVEXTPROC = (Enum, Enum, Int*) -> Void
  alias PFNGLGETMINMAXEXTPROC = (Enum, Boolean, Enum, Enum, Void*) -> Void
  alias PFNGLGETMINMAXPARAMETERFVEXTPROC = (Enum, Enum, Float*) -> Void
  alias PFNGLGETMINMAXPARAMETERIVEXTPROC = (Enum, Enum, Int*) -> Void
  alias PFNGLHISTOGRAMEXTPROC = (Enum, Sizei, Enum, Boolean) -> Void
  alias PFNGLMINMAXEXTPROC = (Enum, Enum, Boolean) -> Void
  alias PFNGLRESETHISTOGRAMEXTPROC = Enum -> Void
  alias PFNGLRESETMINMAXEXTPROC = Enum -> Void
  EXT_INDEX_ARRAY_FORMATS = 1
  IUI_V2F_EXT = 0x81AD_u32
  IUI_V3F_EXT = 0x81AE_u32
  IUI_N3F_V2F_EXT = 0x81AF_u32
  IUI_N3F_V3F_EXT = 0x81B0_u32
  T2F_IUI_V2F_EXT = 0x81B1_u32
  T2F_IUI_V3F_EXT = 0x81B2_u32
  T2F_IUI_N3F_V2F_EXT = 0x81B3_u32
  T2F_IUI_N3F_V3F_EXT = 0x81B4_u32
  EXT_INDEX_FUNC = 1
  INDEX_TEST_EXT = 0x81B5_u32
  INDEX_TEST_FUNC_EXT = 0x81B6_u32
  INDEX_TEST_REF_EXT = 0x81B7_u32
  alias PFNGLINDEXFUNCEXTPROC = (Enum, Clampf) -> Void
  EXT_INDEX_MATERIAL = 1
  INDEX_MATERIAL_EXT = 0x81B8_u32
  INDEX_MATERIAL_PARAMETER_EXT = 0x81B9_u32
  INDEX_MATERIAL_FACE_EXT = 0x81BA_u32
  alias PFNGLINDEXMATERIALEXTPROC = (Enum, Enum) -> Void
  EXT_INDEX_TEXTURE = 1
  EXT_LIGHT_TEXTURE = 1
  FRAGMENT_MATERIAL_EXT = 0x8349_u32
  FRAGMENT_NORMAL_EXT = 0x834A_u32
  FRAGMENT_COLOR_EXT = 0x834C_u32
  ATTENUATION_EXT = 0x834D_u32
  SHADOW_ATTENUATION_EXT = 0x834E_u32
  TEXTURE_APPLICATION_MODE_EXT = 0x834F_u32
  TEXTURE_LIGHT_EXT = 0x8350_u32
  TEXTURE_MATERIAL_FACE_EXT = 0x8351_u32
  TEXTURE_MATERIAL_PARAMETER_EXT = 0x8352_u32
  alias PFNGLAPPLYTEXTUREEXTPROC = Enum -> Void
  alias PFNGLTEXTURELIGHTEXTPROC = Enum -> Void
  alias PFNGLTEXTUREMATERIALEXTPROC = (Enum, Enum) -> Void
  EXT_MISC_ATTRIBUTE = 1
  EXT_MULTI_DRAW_ARRAYS = 1
  alias PFNGLMULTIDRAWARRAYSEXTPROC = (Enum, Int*, Sizei*, Sizei) -> Void
  alias PFNGLMULTIDRAWELEMENTSEXTPROC = (Enum, Sizei*, Enum, Void**, Sizei) -> Void
  EXT_MULTISAMPLE = 1
  MULTISAMPLE_EXT = 0x809D_u32
  SAMPLE_ALPHA_TO_MASK_EXT = 0x809E_u32
  SAMPLE_ALPHA_TO_ONE_EXT = 0x809F_u32
  SAMPLE_MASK_EXT = 0x80A0_u32
  GL_1PASS_EXT = 0x80A1_u32
  GL_2PASS_0_EXT = 0x80A2_u32
  GL_2PASS_1_EXT = 0x80A3_u32
  GL_4PASS_0_EXT = 0x80A4_u32
  GL_4PASS_1_EXT = 0x80A5_u32
  GL_4PASS_2_EXT = 0x80A6_u32
  GL_4PASS_3_EXT = 0x80A7_u32
  SAMPLE_BUFFERS_EXT = 0x80A8_u32
  SAMPLES_EXT = 0x80A9_u32
  SAMPLE_MASK_VALUE_EXT = 0x80AA_u32
  SAMPLE_MASK_INVERT_EXT = 0x80AB_u32
  SAMPLE_PATTERN_EXT = 0x80AC_u32
  MULTISAMPLE_BIT_EXT = 0x20000000_u32
  alias PFNGLSAMPLEMASKEXTPROC = (Clampf, Boolean) -> Void
  alias PFNGLSAMPLEPATTERNEXTPROC = Enum -> Void
  EXT_PACKED_DEPTH_STENCIL = 1
  DEPTH_STENCIL_EXT = 0x84F9_u32
  UNSIGNED_INT_24_8_EXT = 0x84FA_u32
  DEPTH24_STENCIL8_EXT = 0x88F0_u32
  TEXTURE_STENCIL_SIZE_EXT = 0x88F1_u32
  EXT_PACKED_FLOAT = 1
  R11F_G11F_B10F_EXT = 0x8C3A_u32
  UNSIGNED_INT_10F_11F_11F_REV_EXT = 0x8C3B_u32
  RGBA_SIGNED_COMPONENTS_EXT = 0x8C3C_u32
  EXT_PACKED_PIXELS = 1
  UNSIGNED_BYTE_3_3_2_EXT = 0x8032_u32
  UNSIGNED_SHORT_4_4_4_4_EXT = 0x8033_u32
  UNSIGNED_SHORT_5_5_5_1_EXT = 0x8034_u32
  UNSIGNED_INT_8_8_8_8_EXT = 0x8035_u32
  UNSIGNED_INT_10_10_10_2_EXT = 0x8036_u32
  EXT_PALETTED_TEXTURE = 1
  COLOR_INDEX1_EXT = 0x80E2_u32
  COLOR_INDEX2_EXT = 0x80E3_u32
  COLOR_INDEX4_EXT = 0x80E4_u32
  COLOR_INDEX8_EXT = 0x80E5_u32
  COLOR_INDEX12_EXT = 0x80E6_u32
  COLOR_INDEX16_EXT = 0x80E7_u32
  TEXTURE_INDEX_SIZE_EXT = 0x80ED_u32
  alias PFNGLCOLORTABLEEXTPROC = (Enum, Enum, Sizei, Enum, Enum, Void*) -> Void
  alias PFNGLGETCOLORTABLEEXTPROC = (Enum, Enum, Enum, Void*) -> Void
  alias PFNGLGETCOLORTABLEPARAMETERIVEXTPROC = (Enum, Enum, Int*) -> Void
  alias PFNGLGETCOLORTABLEPARAMETERFVEXTPROC = (Enum, Enum, Float*) -> Void
  EXT_PIXEL_BUFFER_OBJECT = 1
  PIXEL_PACK_BUFFER_EXT = 0x88EB_u32
  PIXEL_UNPACK_BUFFER_EXT = 0x88EC_u32
  PIXEL_PACK_BUFFER_BINDING_EXT = 0x88ED_u32
  PIXEL_UNPACK_BUFFER_BINDING_EXT = 0x88EF_u32
  EXT_PIXEL_TRANSFORM = 1
  PIXEL_TRANSFORM_2D_EXT = 0x8330_u32
  PIXEL_MAG_FILTER_EXT = 0x8331_u32
  PIXEL_MIN_FILTER_EXT = 0x8332_u32
  PIXEL_CUBIC_WEIGHT_EXT = 0x8333_u32
  CUBIC_EXT = 0x8334_u32
  AVERAGE_EXT = 0x8335_u32
  PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT = 0x8336_u32
  MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT = 0x8337_u32
  PIXEL_TRANSFORM_2D_MATRIX_EXT = 0x8338_u32
  alias PFNGLPIXELTRANSFORMPARAMETERIEXTPROC = (Enum, Enum, Int) -> Void
  alias PFNGLPIXELTRANSFORMPARAMETERFEXTPROC = (Enum, Enum, Float) -> Void
  alias PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC = (Enum, Enum, Int*) -> Void
  alias PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC = (Enum, Enum, Float*) -> Void
  alias PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC = (Enum, Enum, Int*) -> Void
  alias PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC = (Enum, Enum, Float*) -> Void
  EXT_PIXEL_TRANSFORM_COLOR_TABLE = 1
  EXT_POINT_PARAMETERS = 1
  POINT_SIZE_MIN_EXT = 0x8126_u32
  POINT_SIZE_MAX_EXT = 0x8127_u32
  POINT_FADE_THRESHOLD_SIZE_EXT = 0x8128_u32
  DISTANCE_ATTENUATION_EXT = 0x8129_u32
  alias PFNGLPOINTPARAMETERFEXTPROC = (Enum, Float) -> Void
  alias PFNGLPOINTPARAMETERFVEXTPROC = (Enum, Float*) -> Void
  EXT_POLYGON_OFFSET = 1
  POLYGON_OFFSET_EXT = 0x8037_u32
  POLYGON_OFFSET_FACTOR_EXT = 0x8038_u32
  POLYGON_OFFSET_BIAS_EXT = 0x8039_u32
  alias PFNGLPOLYGONOFFSETEXTPROC = (Float, Float) -> Void
  EXT_PROVOKING_VERTEX = 1
  QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT = 0x8E4C_u32
  FIRST_VERTEX_CONVENTION_EXT = 0x8E4D_u32
  LAST_VERTEX_CONVENTION_EXT = 0x8E4E_u32
  PROVOKING_VERTEX_EXT = 0x8E4F_u32
  alias PFNGLPROVOKINGVERTEXEXTPROC = Enum -> Void
  EXT_RESCALE_NORMAL = 1
  RESCALE_NORMAL_EXT = 0x803A_u32
  EXT_SECONDARY_COLOR = 1
  COLOR_SUM_EXT = 0x8458_u32
  CURRENT_SECONDARY_COLOR_EXT = 0x8459_u32
  SECONDARY_COLOR_ARRAY_SIZE_EXT = 0x845A_u32
  SECONDARY_COLOR_ARRAY_TYPE_EXT = 0x845B_u32
  SECONDARY_COLOR_ARRAY_STRIDE_EXT = 0x845C_u32
  SECONDARY_COLOR_ARRAY_POINTER_EXT = 0x845D_u32
  SECONDARY_COLOR_ARRAY_EXT = 0x845E_u32
  alias PFNGLSECONDARYCOLOR3BEXTPROC = (Byte, Byte, Byte) -> Void
  alias PFNGLSECONDARYCOLOR3BVEXTPROC = Byte* -> Void
  alias PFNGLSECONDARYCOLOR3DEXTPROC = (Double, Double, Double) -> Void
  alias PFNGLSECONDARYCOLOR3DVEXTPROC = Double* -> Void
  alias PFNGLSECONDARYCOLOR3FEXTPROC = (Float, Float, Float) -> Void
  alias PFNGLSECONDARYCOLOR3FVEXTPROC = Float* -> Void
  alias PFNGLSECONDARYCOLOR3IEXTPROC = (Int, Int, Int) -> Void
  alias PFNGLSECONDARYCOLOR3IVEXTPROC = Int* -> Void
  alias PFNGLSECONDARYCOLOR3SEXTPROC = (Short, Short, Short) -> Void
  alias PFNGLSECONDARYCOLOR3SVEXTPROC = Short* -> Void
  alias PFNGLSECONDARYCOLOR3UBEXTPROC = (Ubyte, Ubyte, Ubyte) -> Void
  alias PFNGLSECONDARYCOLOR3UBVEXTPROC = Ubyte* -> Void
  alias PFNGLSECONDARYCOLOR3UIEXTPROC = (Uint, Uint, Uint) -> Void
  alias PFNGLSECONDARYCOLOR3UIVEXTPROC = Uint* -> Void
  alias PFNGLSECONDARYCOLOR3USEXTPROC = (Ushort, Ushort, Ushort) -> Void
  alias PFNGLSECONDARYCOLOR3USVEXTPROC = Ushort* -> Void
  alias PFNGLSECONDARYCOLORPOINTEREXTPROC = (Int, Enum, Sizei, Void*) -> Void
  EXT_SEPARATE_SHADER_OBJECTS = 1
  ACTIVE_PROGRAM_EXT = 0x8B8D_u32
  alias PFNGLUSESHADERPROGRAMEXTPROC = (Enum, Uint) -> Void
  alias PFNGLACTIVEPROGRAMEXTPROC = Uint -> Void
  alias PFNGLCREATESHADERPROGRAMEXTPROC = (Enum, Char*) -> Uint
  EXT_SEPARATE_SPECULAR_COLOR = 1
  LIGHT_MODEL_COLOR_CONTROL_EXT = 0x81F8_u32
  SINGLE_COLOR_EXT = 0x81F9_u32
  SEPARATE_SPECULAR_COLOR_EXT = 0x81FA_u32
  EXT_SHADER_IMAGE_LOAD_FORMATTED = 1
  EXT_SHADER_IMAGE_LOAD_STORE = 1
  MAX_IMAGE_UNITS_EXT = 0x8F38_u32
  MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT = 0x8F39_u32
  IMAGE_BINDING_NAME_EXT = 0x8F3A_u32
  IMAGE_BINDING_LEVEL_EXT = 0x8F3B_u32
  IMAGE_BINDING_LAYERED_EXT = 0x8F3C_u32
  IMAGE_BINDING_LAYER_EXT = 0x8F3D_u32
  IMAGE_BINDING_ACCESS_EXT = 0x8F3E_u32
  IMAGE_1D_EXT = 0x904C_u32
  IMAGE_2D_EXT = 0x904D_u32
  IMAGE_3D_EXT = 0x904E_u32
  IMAGE_2D_RECT_EXT = 0x904F_u32
  IMAGE_CUBE_EXT = 0x9050_u32
  IMAGE_BUFFER_EXT = 0x9051_u32
  IMAGE_1D_ARRAY_EXT = 0x9052_u32
  IMAGE_2D_ARRAY_EXT = 0x9053_u32
  IMAGE_CUBE_MAP_ARRAY_EXT = 0x9054_u32
  IMAGE_2D_MULTISAMPLE_EXT = 0x9055_u32
  IMAGE_2D_MULTISAMPLE_ARRAY_EXT = 0x9056_u32
  INT_IMAGE_1D_EXT = 0x9057_u32
  INT_IMAGE_2D_EXT = 0x9058_u32
  INT_IMAGE_3D_EXT = 0x9059_u32
  INT_IMAGE_2D_RECT_EXT = 0x905A_u32
  INT_IMAGE_CUBE_EXT = 0x905B_u32
  INT_IMAGE_BUFFER_EXT = 0x905C_u32
  INT_IMAGE_1D_ARRAY_EXT = 0x905D_u32
  INT_IMAGE_2D_ARRAY_EXT = 0x905E_u32
  INT_IMAGE_CUBE_MAP_ARRAY_EXT = 0x905F_u32
  INT_IMAGE_2D_MULTISAMPLE_EXT = 0x9060_u32
  INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT = 0x9061_u32
  UNSIGNED_INT_IMAGE_1D_EXT = 0x9062_u32
  UNSIGNED_INT_IMAGE_2D_EXT = 0x9063_u32
  UNSIGNED_INT_IMAGE_3D_EXT = 0x9064_u32
  UNSIGNED_INT_IMAGE_2D_RECT_EXT = 0x9065_u32
  UNSIGNED_INT_IMAGE_CUBE_EXT = 0x9066_u32
  UNSIGNED_INT_IMAGE_BUFFER_EXT = 0x9067_u32
  UNSIGNED_INT_IMAGE_1D_ARRAY_EXT = 0x9068_u32
  UNSIGNED_INT_IMAGE_2D_ARRAY_EXT = 0x9069_u32
  UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT = 0x906A_u32
  UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT = 0x906B_u32
  UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT = 0x906C_u32
  MAX_IMAGE_SAMPLES_EXT = 0x906D_u32
  IMAGE_BINDING_FORMAT_EXT = 0x906E_u32
  VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT = 0x00000001_u32
  ELEMENT_ARRAY_BARRIER_BIT_EXT = 0x00000002_u32
  UNIFORM_BARRIER_BIT_EXT = 0x00000004_u32
  TEXTURE_FETCH_BARRIER_BIT_EXT = 0x00000008_u32
  SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT = 0x00000020_u32
  COMMAND_BARRIER_BIT_EXT = 0x00000040_u32
  PIXEL_BUFFER_BARRIER_BIT_EXT = 0x00000080_u32
  TEXTURE_UPDATE_BARRIER_BIT_EXT = 0x00000100_u32
  BUFFER_UPDATE_BARRIER_BIT_EXT = 0x00000200_u32
  FRAMEBUFFER_BARRIER_BIT_EXT = 0x00000400_u32
  TRANSFORM_FEEDBACK_BARRIER_BIT_EXT = 0x00000800_u32
  ATOMIC_COUNTER_BARRIER_BIT_EXT = 0x00001000_u32
  ALL_BARRIER_BITS_EXT = 0xFFFFFFFF_u32
  alias PFNGLBINDIMAGETEXTUREEXTPROC = (Uint, Uint, Int, Boolean, Int, Enum, Int) -> Void
  alias PFNGLMEMORYBARRIEREXTPROC = Bitfield -> Void
  EXT_SHADER_INTEGER_MIX = 1
  EXT_SHADOW_FUNCS = 1
  EXT_SHARED_TEXTURE_PALETTE = 1
  SHARED_TEXTURE_PALETTE_EXT = 0x81FB_u32
  EXT_STENCIL_CLEAR_TAG = 1
  STENCIL_TAG_BITS_EXT = 0x88F2_u32
  STENCIL_CLEAR_TAG_VALUE_EXT = 0x88F3_u32
  alias PFNGLSTENCILCLEARTAGEXTPROC = (Sizei, Uint) -> Void
  EXT_STENCIL_TWO_SIDE = 1
  STENCIL_TEST_TWO_SIDE_EXT = 0x8910_u32
  ACTIVE_STENCIL_FACE_EXT = 0x8911_u32
  alias PFNGLACTIVESTENCILFACEEXTPROC = Enum -> Void
  EXT_STENCIL_WRAP = 1
  INCR_WRAP_EXT = 0x8507_u32
  DECR_WRAP_EXT = 0x8508_u32
  EXT_SUBTEXTURE = 1
  alias PFNGLTEXSUBIMAGE1DEXTPROC = (Enum, Int, Int, Sizei, Enum, Enum, Void*) -> Void
  alias PFNGLTEXSUBIMAGE2DEXTPROC = (Enum, Int, Int, Int, Sizei, Sizei, Enum, Enum, Void*) -> Void
  EXT_TEXTURE = 1
  ALPHA4_EXT = 0x803B_u32
  ALPHA8_EXT = 0x803C_u32
  ALPHA12_EXT = 0x803D_u32
  ALPHA16_EXT = 0x803E_u32
  LUMINANCE4_EXT = 0x803F_u32
  LUMINANCE8_EXT = 0x8040_u32
  LUMINANCE12_EXT = 0x8041_u32
  LUMINANCE16_EXT = 0x8042_u32
  LUMINANCE4_ALPHA4_EXT = 0x8043_u32
  LUMINANCE6_ALPHA2_EXT = 0x8044_u32
  LUMINANCE8_ALPHA8_EXT = 0x8045_u32
  LUMINANCE12_ALPHA4_EXT = 0x8046_u32
  LUMINANCE12_ALPHA12_EXT = 0x8047_u32
  LUMINANCE16_ALPHA16_EXT = 0x8048_u32
  INTENSITY_EXT = 0x8049_u32
  INTENSITY4_EXT = 0x804A_u32
  INTENSITY8_EXT = 0x804B_u32
  INTENSITY12_EXT = 0x804C_u32
  INTENSITY16_EXT = 0x804D_u32
  RGB2_EXT = 0x804E_u32
  RGB4_EXT = 0x804F_u32
  RGB5_EXT = 0x8050_u32
  RGB8_EXT = 0x8051_u32
  RGB10_EXT = 0x8052_u32
  RGB12_EXT = 0x8053_u32
  RGB16_EXT = 0x8054_u32
  RGBA2_EXT = 0x8055_u32
  RGBA4_EXT = 0x8056_u32
  RGB5_A1_EXT = 0x8057_u32
  RGBA8_EXT = 0x8058_u32
  RGB10_A2_EXT = 0x8059_u32
  RGBA12_EXT = 0x805A_u32
  RGBA16_EXT = 0x805B_u32
  TEXTURE_RED_SIZE_EXT = 0x805C_u32
  TEXTURE_GREEN_SIZE_EXT = 0x805D_u32
  TEXTURE_BLUE_SIZE_EXT = 0x805E_u32
  TEXTURE_ALPHA_SIZE_EXT = 0x805F_u32
  TEXTURE_LUMINANCE_SIZE_EXT = 0x8060_u32
  TEXTURE_INTENSITY_SIZE_EXT = 0x8061_u32
  REPLACE_EXT = 0x8062_u32
  PROXY_TEXTURE_1D_EXT = 0x8063_u32
  PROXY_TEXTURE_2D_EXT = 0x8064_u32
  TEXTURE_TOO_LARGE_EXT = 0x8065_u32
  EXT_TEXTURE3_D = 1
  PACK_SKIP_IMAGES_EXT = 0x806B_u32
  PACK_IMAGE_HEIGHT_EXT = 0x806C_u32
  UNPACK_SKIP_IMAGES_EXT = 0x806D_u32
  UNPACK_IMAGE_HEIGHT_EXT = 0x806E_u32
  TEXTURE_3D_EXT = 0x806F_u32
  PROXY_TEXTURE_3D_EXT = 0x8070_u32
  TEXTURE_DEPTH_EXT = 0x8071_u32
  TEXTURE_WRAP_R_EXT = 0x8072_u32
  MAX_3D_TEXTURE_SIZE_EXT = 0x8073_u32
  alias PFNGLTEXIMAGE3DEXTPROC = (Enum, Int, Enum, Sizei, Sizei, Sizei, Int, Enum, Enum, Void*) -> Void
  alias PFNGLTEXSUBIMAGE3DEXTPROC = (Enum, Int, Int, Int, Int, Sizei, Sizei, Sizei, Enum, Enum, Void*) -> Void
  EXT_TEXTURE_ARRAY = 1
  TEXTURE_1D_ARRAY_EXT = 0x8C18_u32
  PROXY_TEXTURE_1D_ARRAY_EXT = 0x8C19_u32
  TEXTURE_2D_ARRAY_EXT = 0x8C1A_u32
  PROXY_TEXTURE_2D_ARRAY_EXT = 0x8C1B_u32
  TEXTURE_BINDING_1D_ARRAY_EXT = 0x8C1C_u32
  TEXTURE_BINDING_2D_ARRAY_EXT = 0x8C1D_u32
  MAX_ARRAY_TEXTURE_LAYERS_EXT = 0x88FF_u32
  COMPARE_REF_DEPTH_TO_TEXTURE_EXT = 0x884E_u32
  alias PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC = (Enum, Enum, Uint, Int, Int) -> Void
  EXT_TEXTURE_BUFFER_OBJECT = 1
  TEXTURE_BUFFER_EXT = 0x8C2A_u32
  MAX_TEXTURE_BUFFER_SIZE_EXT = 0x8C2B_u32
  TEXTURE_BINDING_BUFFER_EXT = 0x8C2C_u32
  TEXTURE_BUFFER_DATA_STORE_BINDING_EXT = 0x8C2D_u32
  TEXTURE_BUFFER_FORMAT_EXT = 0x8C2E_u32
  alias PFNGLTEXBUFFEREXTPROC = (Enum, Enum, Uint) -> Void
  EXT_TEXTURE_COMPRESSION_LATC = 1
  COMPRESSED_LUMINANCE_LATC1_EXT = 0x8C70_u32
  COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT = 0x8C71_u32
  COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT = 0x8C72_u32
  COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT = 0x8C73_u32
  EXT_TEXTURE_COMPRESSION_RGTC = 1
  COMPRESSED_RED_RGTC1_EXT = 0x8DBB_u32
  COMPRESSED_SIGNED_RED_RGTC1_EXT = 0x8DBC_u32
  COMPRESSED_RED_GREEN_RGTC2_EXT = 0x8DBD_u32
  COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT = 0x8DBE_u32
  EXT_TEXTURE_COMPRESSION_S3TC = 1
  COMPRESSED_RGB_S3TC_DXT1_EXT = 0x83F0_u32
  COMPRESSED_RGBA_S3TC_DXT1_EXT = 0x83F1_u32
  COMPRESSED_RGBA_S3TC_DXT3_EXT = 0x83F2_u32
  COMPRESSED_RGBA_S3TC_DXT5_EXT = 0x83F3_u32
  EXT_TEXTURE_CUBE_MAP = 1
  NORMAL_MAP_EXT = 0x8511_u32
  REFLECTION_MAP_EXT = 0x8512_u32
  TEXTURE_CUBE_MAP_EXT = 0x8513_u32
  TEXTURE_BINDING_CUBE_MAP_EXT = 0x8514_u32
  TEXTURE_CUBE_MAP_POSITIVE_X_EXT = 0x8515_u32
  TEXTURE_CUBE_MAP_NEGATIVE_X_EXT = 0x8516_u32
  TEXTURE_CUBE_MAP_POSITIVE_Y_EXT = 0x8517_u32
  TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT = 0x8518_u32
  TEXTURE_CUBE_MAP_POSITIVE_Z_EXT = 0x8519_u32
  TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT = 0x851A_u32
  PROXY_TEXTURE_CUBE_MAP_EXT = 0x851B_u32
  MAX_CUBE_MAP_TEXTURE_SIZE_EXT = 0x851C_u32
  EXT_TEXTURE_ENV_ADD = 1
  EXT_TEXTURE_ENV_COMBINE = 1
  COMBINE_EXT = 0x8570_u32
  COMBINE_RGB_EXT = 0x8571_u32
  COMBINE_ALPHA_EXT = 0x8572_u32
  RGB_SCALE_EXT = 0x8573_u32
  ADD_SIGNED_EXT = 0x8574_u32
  INTERPOLATE_EXT = 0x8575_u32
  CONSTANT_EXT = 0x8576_u32
  PRIMARY_COLOR_EXT = 0x8577_u32
  PREVIOUS_EXT = 0x8578_u32
  SOURCE0_RGB_EXT = 0x8580_u32
  SOURCE1_RGB_EXT = 0x8581_u32
  SOURCE2_RGB_EXT = 0x8582_u32
  SOURCE0_ALPHA_EXT = 0x8588_u32
  SOURCE1_ALPHA_EXT = 0x8589_u32
  SOURCE2_ALPHA_EXT = 0x858A_u32
  OPERAND0_RGB_EXT = 0x8590_u32
  OPERAND1_RGB_EXT = 0x8591_u32
  OPERAND2_RGB_EXT = 0x8592_u32
  OPERAND0_ALPHA_EXT = 0x8598_u32
  OPERAND1_ALPHA_EXT = 0x8599_u32
  OPERAND2_ALPHA_EXT = 0x859A_u32
  EXT_TEXTURE_ENV_DOT3 = 1
  DOT3_RGB_EXT = 0x8740_u32
  DOT3_RGBA_EXT = 0x8741_u32
  EXT_TEXTURE_FILTER_ANISOTROPIC = 1
  TEXTURE_MAX_ANISOTROPY_EXT = 0x84FE_u32
  MAX_TEXTURE_MAX_ANISOTROPY_EXT = 0x84FF_u32
  EXT_TEXTURE_INTEGER = 1
  RGBA32UI_EXT = 0x8D70_u32
  RGB32UI_EXT = 0x8D71_u32
  ALPHA32UI_EXT = 0x8D72_u32
  INTENSITY32UI_EXT = 0x8D73_u32
  LUMINANCE32UI_EXT = 0x8D74_u32
  LUMINANCE_ALPHA32UI_EXT = 0x8D75_u32
  RGBA16UI_EXT = 0x8D76_u32
  RGB16UI_EXT = 0x8D77_u32
  ALPHA16UI_EXT = 0x8D78_u32
  INTENSITY16UI_EXT = 0x8D79_u32
  LUMINANCE16UI_EXT = 0x8D7A_u32
  LUMINANCE_ALPHA16UI_EXT = 0x8D7B_u32
  RGBA8UI_EXT = 0x8D7C_u32
  RGB8UI_EXT = 0x8D7D_u32
  ALPHA8UI_EXT = 0x8D7E_u32
  INTENSITY8UI_EXT = 0x8D7F_u32
  LUMINANCE8UI_EXT = 0x8D80_u32
  LUMINANCE_ALPHA8UI_EXT = 0x8D81_u32
  RGBA32I_EXT = 0x8D82_u32
  RGB32I_EXT = 0x8D83_u32
  ALPHA32I_EXT = 0x8D84_u32
  INTENSITY32I_EXT = 0x8D85_u32
  LUMINANCE32I_EXT = 0x8D86_u32
  LUMINANCE_ALPHA32I_EXT = 0x8D87_u32
  RGBA16I_EXT = 0x8D88_u32
  RGB16I_EXT = 0x8D89_u32
  ALPHA16I_EXT = 0x8D8A_u32
  INTENSITY16I_EXT = 0x8D8B_u32
  LUMINANCE16I_EXT = 0x8D8C_u32
  LUMINANCE_ALPHA16I_EXT = 0x8D8D_u32
  RGBA8I_EXT = 0x8D8E_u32
  RGB8I_EXT = 0x8D8F_u32
  ALPHA8I_EXT = 0x8D90_u32
  INTENSITY8I_EXT = 0x8D91_u32
  LUMINANCE8I_EXT = 0x8D92_u32
  LUMINANCE_ALPHA8I_EXT = 0x8D93_u32
  RED_INTEGER_EXT = 0x8D94_u32
  GREEN_INTEGER_EXT = 0x8D95_u32
  BLUE_INTEGER_EXT = 0x8D96_u32
  ALPHA_INTEGER_EXT = 0x8D97_u32
  RGB_INTEGER_EXT = 0x8D98_u32
  RGBA_INTEGER_EXT = 0x8D99_u32
  BGR_INTEGER_EXT = 0x8D9A_u32
  BGRA_INTEGER_EXT = 0x8D9B_u32
  LUMINANCE_INTEGER_EXT = 0x8D9C_u32
  LUMINANCE_ALPHA_INTEGER_EXT = 0x8D9D_u32
  RGBA_INTEGER_MODE_EXT = 0x8D9E_u32
  alias PFNGLTEXPARAMETERIIVEXTPROC = (Enum, Enum, Int*) -> Void
  alias PFNGLTEXPARAMETERIUIVEXTPROC = (Enum, Enum, Uint*) -> Void
  alias PFNGLGETTEXPARAMETERIIVEXTPROC = (Enum, Enum, Int*) -> Void
  alias PFNGLGETTEXPARAMETERIUIVEXTPROC = (Enum, Enum, Uint*) -> Void
  alias PFNGLCLEARCOLORIIEXTPROC = (Int, Int, Int, Int) -> Void
  alias PFNGLCLEARCOLORIUIEXTPROC = (Uint, Uint, Uint, Uint) -> Void
  EXT_TEXTURE_LOD_BIAS = 1
  MAX_TEXTURE_LOD_BIAS_EXT = 0x84FD_u32
  TEXTURE_FILTER_CONTROL_EXT = 0x8500_u32
  TEXTURE_LOD_BIAS_EXT = 0x8501_u32
  EXT_TEXTURE_MIRROR_CLAMP = 1
  MIRROR_CLAMP_EXT = 0x8742_u32
  MIRROR_CLAMP_TO_EDGE_EXT = 0x8743_u32
  MIRROR_CLAMP_TO_BORDER_EXT = 0x8912_u32
  EXT_TEXTURE_OBJECT = 1
  TEXTURE_PRIORITY_EXT = 0x8066_u32
  TEXTURE_RESIDENT_EXT = 0x8067_u32
  TEXTURE_1D_BINDING_EXT = 0x8068_u32
  TEXTURE_2D_BINDING_EXT = 0x8069_u32
  TEXTURE_3D_BINDING_EXT = 0x806A_u32
  alias PFNGLARETEXTURESRESIDENTEXTPROC = (Sizei, Uint*, Boolean*) -> Boolean
  alias PFNGLBINDTEXTUREEXTPROC = (Enum, Uint) -> Void
  alias PFNGLDELETETEXTURESEXTPROC = (Sizei, Uint*) -> Void
  alias PFNGLGENTEXTURESEXTPROC = (Sizei, Uint*) -> Void
  alias PFNGLISTEXTUREEXTPROC = Uint -> Boolean
  alias PFNGLPRIORITIZETEXTURESEXTPROC = (Sizei, Uint*, Clampf*) -> Void
  EXT_TEXTURE_PERTURB_NORMAL = 1
  PERTURB_EXT = 0x85AE_u32
  TEXTURE_NORMAL_EXT = 0x85AF_u32
  alias PFNGLTEXTURENORMALEXTPROC = Enum -> Void
  EXT_TEXTURE_S_RGB = 1
  SRGB_EXT = 0x8C40_u32
  SRGB8_EXT = 0x8C41_u32
  SRGB_ALPHA_EXT = 0x8C42_u32
  SRGB8_ALPHA8_EXT = 0x8C43_u32
  SLUMINANCE_ALPHA_EXT = 0x8C44_u32
  SLUMINANCE8_ALPHA8_EXT = 0x8C45_u32
  SLUMINANCE_EXT = 0x8C46_u32
  SLUMINANCE8_EXT = 0x8C47_u32
  COMPRESSED_SRGB_EXT = 0x8C48_u32
  COMPRESSED_SRGB_ALPHA_EXT = 0x8C49_u32
  COMPRESSED_SLUMINANCE_EXT = 0x8C4A_u32
  COMPRESSED_SLUMINANCE_ALPHA_EXT = 0x8C4B_u32
  COMPRESSED_SRGB_S3TC_DXT1_EXT = 0x8C4C_u32
  COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT = 0x8C4D_u32
  COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT = 0x8C4E_u32
  COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT = 0x8C4F_u32
  EXT_TEXTURE_S_RGB_DECODE = 1
  TEXTURE_SRGB_DECODE_EXT = 0x8A48_u32
  DECODE_EXT = 0x8A49_u32
  SKIP_DECODE_EXT = 0x8A4A_u32
  EXT_TEXTURE_SHARED_EXPONENT = 1
  RGB9_E5_EXT = 0x8C3D_u32
  UNSIGNED_INT_5_9_9_9_REV_EXT = 0x8C3E_u32
  TEXTURE_SHARED_SIZE_EXT = 0x8C3F_u32
  EXT_TEXTURE_SNORM = 1
  ALPHA_SNORM = 0x9010_u32
  LUMINANCE_SNORM = 0x9011_u32
  LUMINANCE_ALPHA_SNORM = 0x9012_u32
  INTENSITY_SNORM = 0x9013_u32
  ALPHA8_SNORM = 0x9014_u32
  LUMINANCE8_SNORM = 0x9015_u32
  LUMINANCE8_ALPHA8_SNORM = 0x9016_u32
  INTENSITY8_SNORM = 0x9017_u32
  ALPHA16_SNORM = 0x9018_u32
  LUMINANCE16_SNORM = 0x9019_u32
  LUMINANCE16_ALPHA16_SNORM = 0x901A_u32
  INTENSITY16_SNORM = 0x901B_u32
  RED_SNORM = 0x8F90_u32
  RG_SNORM = 0x8F91_u32
  RGB_SNORM = 0x8F92_u32
  RGBA_SNORM = 0x8F93_u32
  EXT_TEXTURE_SWIZZLE = 1
  TEXTURE_SWIZZLE_R_EXT = 0x8E42_u32
  TEXTURE_SWIZZLE_G_EXT = 0x8E43_u32
  TEXTURE_SWIZZLE_B_EXT = 0x8E44_u32
  TEXTURE_SWIZZLE_A_EXT = 0x8E45_u32
  TEXTURE_SWIZZLE_RGBA_EXT = 0x8E46_u32
  EXT_TIMER_QUERY = 1
  TIME_ELAPSED_EXT = 0x88BF_u32
  alias PFNGLGETQUERYOBJECTI64VEXTPROC = (Uint, Enum, Int64*) -> Void
  alias PFNGLGETQUERYOBJECTUI64VEXTPROC = (Uint, Enum, Uint64*) -> Void
  EXT_TRANSFORM_FEEDBACK = 1
  TRANSFORM_FEEDBACK_BUFFER_EXT = 0x8C8E_u32
  TRANSFORM_FEEDBACK_BUFFER_START_EXT = 0x8C84_u32
  TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT = 0x8C85_u32
  TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT = 0x8C8F_u32
  INTERLEAVED_ATTRIBS_EXT = 0x8C8C_u32
  SEPARATE_ATTRIBS_EXT = 0x8C8D_u32
  PRIMITIVES_GENERATED_EXT = 0x8C87_u32
  TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT = 0x8C88_u32
  RASTERIZER_DISCARD_EXT = 0x8C89_u32
  MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT = 0x8C8A_u32
  MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT = 0x8C8B_u32
  MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT = 0x8C80_u32
  TRANSFORM_FEEDBACK_VARYINGS_EXT = 0x8C83_u32
  TRANSFORM_FEEDBACK_BUFFER_MODE_EXT = 0x8C7F_u32
  TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT = 0x8C76_u32
  alias PFNGLBEGINTRANSFORMFEEDBACKEXTPROC = Enum -> Void
  alias PFNGLENDTRANSFORMFEEDBACKEXTPROC = -> Void
  alias PFNGLBINDBUFFERRANGEEXTPROC = (Enum, Uint, Uint, Intptr, Sizeiptr) -> Void
  alias PFNGLBINDBUFFEROFFSETEXTPROC = (Enum, Uint, Uint, Intptr) -> Void
  alias PFNGLBINDBUFFERBASEEXTPROC = (Enum, Uint, Uint) -> Void
  alias PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC = (Uint, Sizei, Char**, Enum) -> Void
  alias PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC = (Uint, Uint, Sizei, Sizei*, Sizei*, Enum*, Char*) -> Void
  EXT_VERTEX_ARRAY = 1
  VERTEX_ARRAY_EXT = 0x8074_u32
  NORMAL_ARRAY_EXT = 0x8075_u32
  COLOR_ARRAY_EXT = 0x8076_u32
  INDEX_ARRAY_EXT = 0x8077_u32
  TEXTURE_COORD_ARRAY_EXT = 0x8078_u32
  EDGE_FLAG_ARRAY_EXT = 0x8079_u32
  VERTEX_ARRAY_SIZE_EXT = 0x807A_u32
  VERTEX_ARRAY_TYPE_EXT = 0x807B_u32
  VERTEX_ARRAY_STRIDE_EXT = 0x807C_u32
  VERTEX_ARRAY_COUNT_EXT = 0x807D_u32
  NORMAL_ARRAY_TYPE_EXT = 0x807E_u32
  NORMAL_ARRAY_STRIDE_EXT = 0x807F_u32
  NORMAL_ARRAY_COUNT_EXT = 0x8080_u32
  COLOR_ARRAY_SIZE_EXT = 0x8081_u32
  COLOR_ARRAY_TYPE_EXT = 0x8082_u32
  COLOR_ARRAY_STRIDE_EXT = 0x8083_u32
  COLOR_ARRAY_COUNT_EXT = 0x8084_u32
  INDEX_ARRAY_TYPE_EXT = 0x8085_u32
  INDEX_ARRAY_STRIDE_EXT = 0x8086_u32
  INDEX_ARRAY_COUNT_EXT = 0x8087_u32
  TEXTURE_COORD_ARRAY_SIZE_EXT = 0x8088_u32
  TEXTURE_COORD_ARRAY_TYPE_EXT = 0x8089_u32
  TEXTURE_COORD_ARRAY_STRIDE_EXT = 0x808A_u32
  TEXTURE_COORD_ARRAY_COUNT_EXT = 0x808B_u32
  EDGE_FLAG_ARRAY_STRIDE_EXT = 0x808C_u32
  EDGE_FLAG_ARRAY_COUNT_EXT = 0x808D_u32
  VERTEX_ARRAY_POINTER_EXT = 0x808E_u32
  NORMAL_ARRAY_POINTER_EXT = 0x808F_u32
  COLOR_ARRAY_POINTER_EXT = 0x8090_u32
  INDEX_ARRAY_POINTER_EXT = 0x8091_u32
  TEXTURE_COORD_ARRAY_POINTER_EXT = 0x8092_u32
  EDGE_FLAG_ARRAY_POINTER_EXT = 0x8093_u32
  alias PFNGLARRAYELEMENTEXTPROC = Int -> Void
  alias PFNGLCOLORPOINTEREXTPROC = (Int, Enum, Sizei, Sizei, Void*) -> Void
  alias PFNGLDRAWARRAYSEXTPROC = (Enum, Int, Sizei) -> Void
  alias PFNGLEDGEFLAGPOINTEREXTPROC = (Sizei, Sizei, Boolean*) -> Void
  alias PFNGLGETPOINTERVEXTPROC = (Enum, Void**) -> Void
  alias PFNGLINDEXPOINTEREXTPROC = (Enum, Sizei, Sizei, Void*) -> Void
  alias PFNGLNORMALPOINTEREXTPROC = (Enum, Sizei, Sizei, Void*) -> Void
  alias PFNGLTEXCOORDPOINTEREXTPROC = (Int, Enum, Sizei, Sizei, Void*) -> Void
  alias PFNGLVERTEXPOINTEREXTPROC = (Int, Enum, Sizei, Sizei, Void*) -> Void
  EXT_VERTEX_ARRAY_BGRA = 1
  EXT_VERTEX_ATTRIB_64BIT = 1
  DOUBLE_VEC2_EXT = 0x8FFC_u32
  DOUBLE_VEC3_EXT = 0x8FFD_u32
  DOUBLE_VEC4_EXT = 0x8FFE_u32
  DOUBLE_MAT2_EXT = 0x8F46_u32
  DOUBLE_MAT3_EXT = 0x8F47_u32
  DOUBLE_MAT4_EXT = 0x8F48_u32
  DOUBLE_MAT_2X3_EXT = 0x8F49_u32
  DOUBLE_MAT_2X4_EXT = 0x8F4A_u32
  DOUBLE_MAT_3X2_EXT = 0x8F4B_u32
  DOUBLE_MAT_3X4_EXT = 0x8F4C_u32
  DOUBLE_MAT_4X2_EXT = 0x8F4D_u32
  DOUBLE_MAT_4X3_EXT = 0x8F4E_u32
  alias PFNGLVERTEXATTRIBL1DEXTPROC = (Uint, Double) -> Void
  alias PFNGLVERTEXATTRIBL2DEXTPROC = (Uint, Double, Double) -> Void
  alias PFNGLVERTEXATTRIBL3DEXTPROC = (Uint, Double, Double, Double) -> Void
  alias PFNGLVERTEXATTRIBL4DEXTPROC = (Uint, Double, Double, Double, Double) -> Void
  alias PFNGLVERTEXATTRIBL1DVEXTPROC = (Uint, Double*) -> Void
  alias PFNGLVERTEXATTRIBL2DVEXTPROC = (Uint, Double*) -> Void
  alias PFNGLVERTEXATTRIBL3DVEXTPROC = (Uint, Double*) -> Void
  alias PFNGLVERTEXATTRIBL4DVEXTPROC = (Uint, Double*) -> Void
  alias PFNGLVERTEXATTRIBLPOINTEREXTPROC = (Uint, Int, Enum, Sizei, Void*) -> Void
  alias PFNGLGETVERTEXATTRIBLDVEXTPROC = (Uint, Enum, Double*) -> Void
  EXT_VERTEX_SHADER = 1
  VERTEX_SHADER_EXT = 0x8780_u32
  VERTEX_SHADER_BINDING_EXT = 0x8781_u32
  OP_INDEX_EXT = 0x8782_u32
  OP_NEGATE_EXT = 0x8783_u32
  OP_DOT3_EXT = 0x8784_u32
  OP_DOT4_EXT = 0x8785_u32
  OP_MUL_EXT = 0x8786_u32
  OP_ADD_EXT = 0x8787_u32
  OP_MADD_EXT = 0x8788_u32
  OP_FRAC_EXT = 0x8789_u32
  OP_MAX_EXT = 0x878A_u32
  OP_MIN_EXT = 0x878B_u32
  OP_SET_GE_EXT = 0x878C_u32
  OP_SET_LT_EXT = 0x878D_u32
  OP_CLAMP_EXT = 0x878E_u32
  OP_FLOOR_EXT = 0x878F_u32
  OP_ROUND_EXT = 0x8790_u32
  OP_EXP_BASE_2_EXT = 0x8791_u32
  OP_LOG_BASE_2_EXT = 0x8792_u32
  OP_POWER_EXT = 0x8793_u32
  OP_RECIP_EXT = 0x8794_u32
  OP_RECIP_SQRT_EXT = 0x8795_u32
  OP_SUB_EXT = 0x8796_u32
  OP_CROSS_PRODUCT_EXT = 0x8797_u32
  OP_MULTIPLY_MATRIX_EXT = 0x8798_u32
  OP_MOV_EXT = 0x8799_u32
  OUTPUT_VERTEX_EXT = 0x879A_u32
  OUTPUT_COLOR0_EXT = 0x879B_u32
  OUTPUT_COLOR1_EXT = 0x879C_u32
  OUTPUT_TEXTURE_COORD0_EXT = 0x879D_u32
  OUTPUT_TEXTURE_COORD1_EXT = 0x879E_u32
  OUTPUT_TEXTURE_COORD2_EXT = 0x879F_u32
  OUTPUT_TEXTURE_COORD3_EXT = 0x87A0_u32
  OUTPUT_TEXTURE_COORD4_EXT = 0x87A1_u32
  OUTPUT_TEXTURE_COORD5_EXT = 0x87A2_u32
  OUTPUT_TEXTURE_COORD6_EXT = 0x87A3_u32
  OUTPUT_TEXTURE_COORD7_EXT = 0x87A4_u32
  OUTPUT_TEXTURE_COORD8_EXT = 0x87A5_u32
  OUTPUT_TEXTURE_COORD9_EXT = 0x87A6_u32
  OUTPUT_TEXTURE_COORD10_EXT = 0x87A7_u32
  OUTPUT_TEXTURE_COORD11_EXT = 0x87A8_u32
  OUTPUT_TEXTURE_COORD12_EXT = 0x87A9_u32
  OUTPUT_TEXTURE_COORD13_EXT = 0x87AA_u32
  OUTPUT_TEXTURE_COORD14_EXT = 0x87AB_u32
  OUTPUT_TEXTURE_COORD15_EXT = 0x87AC_u32
  OUTPUT_TEXTURE_COORD16_EXT = 0x87AD_u32
  OUTPUT_TEXTURE_COORD17_EXT = 0x87AE_u32
  OUTPUT_TEXTURE_COORD18_EXT = 0x87AF_u32
  OUTPUT_TEXTURE_COORD19_EXT = 0x87B0_u32
  OUTPUT_TEXTURE_COORD20_EXT = 0x87B1_u32
  OUTPUT_TEXTURE_COORD21_EXT = 0x87B2_u32
  OUTPUT_TEXTURE_COORD22_EXT = 0x87B3_u32
  OUTPUT_TEXTURE_COORD23_EXT = 0x87B4_u32
  OUTPUT_TEXTURE_COORD24_EXT = 0x87B5_u32
  OUTPUT_TEXTURE_COORD25_EXT = 0x87B6_u32
  OUTPUT_TEXTURE_COORD26_EXT = 0x87B7_u32
  OUTPUT_TEXTURE_COORD27_EXT = 0x87B8_u32
  OUTPUT_TEXTURE_COORD28_EXT = 0x87B9_u32
  OUTPUT_TEXTURE_COORD29_EXT = 0x87BA_u32
  OUTPUT_TEXTURE_COORD30_EXT = 0x87BB_u32
  OUTPUT_TEXTURE_COORD31_EXT = 0x87BC_u32
  OUTPUT_FOG_EXT = 0x87BD_u32
  SCALAR_EXT = 0x87BE_u32
  VECTOR_EXT = 0x87BF_u32
  MATRIX_EXT = 0x87C0_u32
  VARIANT_EXT = 0x87C1_u32
  INVARIANT_EXT = 0x87C2_u32
  LOCAL_CONSTANT_EXT = 0x87C3_u32
  LOCAL_EXT = 0x87C4_u32
  MAX_VERTEX_SHADER_INSTRUCTIONS_EXT = 0x87C5_u32
  MAX_VERTEX_SHADER_VARIANTS_EXT = 0x87C6_u32
  MAX_VERTEX_SHADER_INVARIANTS_EXT = 0x87C7_u32
  MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = 0x87C8_u32
  MAX_VERTEX_SHADER_LOCALS_EXT = 0x87C9_u32
  MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT = 0x87CA_u32
  MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT = 0x87CB_u32
  MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = 0x87CC_u32
  MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT = 0x87CD_u32
  MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT = 0x87CE_u32
  VERTEX_SHADER_INSTRUCTIONS_EXT = 0x87CF_u32
  VERTEX_SHADER_VARIANTS_EXT = 0x87D0_u32
  VERTEX_SHADER_INVARIANTS_EXT = 0x87D1_u32
  VERTEX_SHADER_LOCAL_CONSTANTS_EXT = 0x87D2_u32
  VERTEX_SHADER_LOCALS_EXT = 0x87D3_u32
  VERTEX_SHADER_OPTIMIZED_EXT = 0x87D4_u32
  X_EXT = 0x87D5_u32
  Y_EXT = 0x87D6_u32
  Z_EXT = 0x87D7_u32
  W_EXT = 0x87D8_u32
  NEGATIVE_X_EXT = 0x87D9_u32
  NEGATIVE_Y_EXT = 0x87DA_u32
  NEGATIVE_Z_EXT = 0x87DB_u32
  NEGATIVE_W_EXT = 0x87DC_u32
  ZERO_EXT = 0x87DD_u32
  ONE_EXT = 0x87DE_u32
  NEGATIVE_ONE_EXT = 0x87DF_u32
  NORMALIZED_RANGE_EXT = 0x87E0_u32
  FULL_RANGE_EXT = 0x87E1_u32
  CURRENT_VERTEX_EXT = 0x87E2_u32
  MVP_MATRIX_EXT = 0x87E3_u32
  VARIANT_VALUE_EXT = 0x87E4_u32
  VARIANT_DATATYPE_EXT = 0x87E5_u32
  VARIANT_ARRAY_STRIDE_EXT = 0x87E6_u32
  VARIANT_ARRAY_TYPE_EXT = 0x87E7_u32
  VARIANT_ARRAY_EXT = 0x87E8_u32
  VARIANT_ARRAY_POINTER_EXT = 0x87E9_u32
  INVARIANT_VALUE_EXT = 0x87EA_u32
  INVARIANT_DATATYPE_EXT = 0x87EB_u32
  LOCAL_CONSTANT_VALUE_EXT = 0x87EC_u32
  LOCAL_CONSTANT_DATATYPE_EXT = 0x87ED_u32
  alias PFNGLBEGINVERTEXSHADEREXTPROC = -> Void
  alias PFNGLENDVERTEXSHADEREXTPROC = -> Void
  alias PFNGLBINDVERTEXSHADEREXTPROC = Uint -> Void
  alias PFNGLGENVERTEXSHADERSEXTPROC = Uint -> Uint
  alias PFNGLDELETEVERTEXSHADEREXTPROC = Uint -> Void
  alias PFNGLSHADEROP1EXTPROC = (Enum, Uint, Uint) -> Void
  alias PFNGLSHADEROP2EXTPROC = (Enum, Uint, Uint, Uint) -> Void
  alias PFNGLSHADEROP3EXTPROC = (Enum, Uint, Uint, Uint, Uint) -> Void
  alias PFNGLSWIZZLEEXTPROC = (Uint, Uint, Enum, Enum, Enum, Enum) -> Void
  alias PFNGLWRITEMASKEXTPROC = (Uint, Uint, Enum, Enum, Enum, Enum) -> Void
  alias PFNGLINSERTCOMPONENTEXTPROC = (Uint, Uint, Uint) -> Void
  alias PFNGLEXTRACTCOMPONENTEXTPROC = (Uint, Uint, Uint) -> Void
  alias PFNGLGENSYMBOLSEXTPROC = (Enum, Enum, Enum, Uint) -> Uint
  alias PFNGLSETINVARIANTEXTPROC = (Uint, Enum, Void*) -> Void
  alias PFNGLSETLOCALCONSTANTEXTPROC = (Uint, Enum, Void*) -> Void
  alias PFNGLVARIANTBVEXTPROC = (Uint, Byte*) -> Void
  alias PFNGLVARIANTSVEXTPROC = (Uint, Short*) -> Void
  alias PFNGLVARIANTIVEXTPROC = (Uint, Int*) -> Void
  alias PFNGLVARIANTFVEXTPROC = (Uint, Float*) -> Void
  alias PFNGLVARIANTDVEXTPROC = (Uint, Double*) -> Void
  alias PFNGLVARIANTUBVEXTPROC = (Uint, Ubyte*) -> Void
  alias PFNGLVARIANTUSVEXTPROC = (Uint, Ushort*) -> Void
  alias PFNGLVARIANTUIVEXTPROC = (Uint, Uint*) -> Void
  alias PFNGLVARIANTPOINTEREXTPROC = (Uint, Enum, Uint, Void*) -> Void
  alias PFNGLENABLEVARIANTCLIENTSTATEEXTPROC = Uint -> Void
  alias PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC = Uint -> Void
  alias PFNGLBINDLIGHTPARAMETEREXTPROC = (Enum, Enum) -> Uint
  alias PFNGLBINDMATERIALPARAMETEREXTPROC = (Enum, Enum) -> Uint
  alias PFNGLBINDTEXGENPARAMETEREXTPROC = (Enum, Enum, Enum) -> Uint
  alias PFNGLBINDTEXTUREUNITPARAMETEREXTPROC = (Enum, Enum) -> Uint
  alias PFNGLBINDPARAMETEREXTPROC = Enum -> Uint
  alias PFNGLISVARIANTENABLEDEXTPROC = (Uint, Enum) -> Boolean
  alias PFNGLGETVARIANTBOOLEANVEXTPROC = (Uint, Enum, Boolean*) -> Void
  alias PFNGLGETVARIANTINTEGERVEXTPROC = (Uint, Enum, Int*) -> Void
  alias PFNGLGETVARIANTFLOATVEXTPROC = (Uint, Enum, Float*) -> Void
  alias PFNGLGETVARIANTPOINTERVEXTPROC = (Uint, Enum, Void**) -> Void
  alias PFNGLGETINVARIANTBOOLEANVEXTPROC = (Uint, Enum, Boolean*) -> Void
  alias PFNGLGETINVARIANTINTEGERVEXTPROC = (Uint, Enum, Int*) -> Void
  alias PFNGLGETINVARIANTFLOATVEXTPROC = (Uint, Enum, Float*) -> Void
  alias PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC = (Uint, Enum, Boolean*) -> Void
  alias PFNGLGETLOCALCONSTANTINTEGERVEXTPROC = (Uint, Enum, Int*) -> Void
  alias PFNGLGETLOCALCONSTANTFLOATVEXTPROC = (Uint, Enum, Float*) -> Void
  EXT_VERTEX_WEIGHTING = 1
  MODELVIEW0_STACK_DEPTH_EXT = 0x0BA3_u32
  MODELVIEW1_STACK_DEPTH_EXT = 0x8502_u32
  MODELVIEW0_MATRIX_EXT = 0x0BA6_u32
  MODELVIEW1_MATRIX_EXT = 0x8506_u32
  VERTEX_WEIGHTING_EXT = 0x8509_u32
  MODELVIEW0_EXT = 0x1700_u32
  MODELVIEW1_EXT = 0x850A_u32
  CURRENT_VERTEX_WEIGHT_EXT = 0x850B_u32
  VERTEX_WEIGHT_ARRAY_EXT = 0x850C_u32
  VERTEX_WEIGHT_ARRAY_SIZE_EXT = 0x850D_u32
  VERTEX_WEIGHT_ARRAY_TYPE_EXT = 0x850E_u32
  VERTEX_WEIGHT_ARRAY_STRIDE_EXT = 0x850F_u32
  VERTEX_WEIGHT_ARRAY_POINTER_EXT = 0x8510_u32
  alias PFNGLVERTEXWEIGHTFEXTPROC = Float -> Void
  alias PFNGLVERTEXWEIGHTFVEXTPROC = Float* -> Void
  alias PFNGLVERTEXWEIGHTPOINTEREXTPROC = (Int, Enum, Sizei, Void*) -> Void
  EXT_X11_SYNC_OBJECT = 1
  SYNC_X11_FENCE_EXT = 0x90E1_u32
  alias PFNGLIMPORTSYNCEXTPROC = (Enum, Intptr, Bitfield) -> Sync
  GREMEDY_FRAME_TERMINATOR = 1
  alias PFNGLFRAMETERMINATORGREMEDYPROC = -> Void
  GREMEDY_STRING_MARKER = 1
  alias PFNGLSTRINGMARKERGREMEDYPROC = (Sizei, Void*) -> Void
  HP_CONVOLUTION_BORDER_MODES = 1
  IGNORE_BORDER_HP = 0x8150_u32
  CONSTANT_BORDER_HP = 0x8151_u32
  REPLICATE_BORDER_HP = 0x8153_u32
  CONVOLUTION_BORDER_COLOR_HP = 0x8154_u32
  HP_IMAGE_TRANSFORM = 1
  IMAGE_SCALE_X_HP = 0x8155_u32
  IMAGE_SCALE_Y_HP = 0x8156_u32
  IMAGE_TRANSLATE_X_HP = 0x8157_u32
  IMAGE_TRANSLATE_Y_HP = 0x8158_u32
  IMAGE_ROTATE_ANGLE_HP = 0x8159_u32
  IMAGE_ROTATE_ORIGIN_X_HP = 0x815A_u32
  IMAGE_ROTATE_ORIGIN_Y_HP = 0x815B_u32
  IMAGE_MAG_FILTER_HP = 0x815C_u32
  IMAGE_MIN_FILTER_HP = 0x815D_u32
  IMAGE_CUBIC_WEIGHT_HP = 0x815E_u32
  CUBIC_HP = 0x815F_u32
  AVERAGE_HP = 0x8160_u32
  IMAGE_TRANSFORM_2D_HP = 0x8161_u32
  POST_IMAGE_TRANSFORM_COLOR_TABLE_HP = 0x8162_u32
  PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP = 0x8163_u32
  alias PFNGLIMAGETRANSFORMPARAMETERIHPPROC = (Enum, Enum, Int) -> Void
  alias PFNGLIMAGETRANSFORMPARAMETERFHPPROC = (Enum, Enum, Float) -> Void
  alias PFNGLIMAGETRANSFORMPARAMETERIVHPPROC = (Enum, Enum, Int*) -> Void
  alias PFNGLIMAGETRANSFORMPARAMETERFVHPPROC = (Enum, Enum, Float*) -> Void
  alias PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC = (Enum, Enum, Int*) -> Void
  alias PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC = (Enum, Enum, Float*) -> Void
  HP_OCCLUSION_TEST = 1
  OCCLUSION_TEST_HP = 0x8165_u32
  OCCLUSION_TEST_RESULT_HP = 0x8166_u32
  HP_TEXTURE_LIGHTING = 1
  TEXTURE_LIGHTING_MODE_HP = 0x8167_u32
  TEXTURE_POST_SPECULAR_HP = 0x8168_u32
  TEXTURE_PRE_SPECULAR_HP = 0x8169_u32
  IBM_CULL_VERTEX = 1
  CULL_VERTEX_IBM = 103050
  IBM_MULTIMODE_DRAW_ARRAYS = 1
  alias PFNGLMULTIMODEDRAWARRAYSIBMPROC = (Enum*, Int*, Sizei*, Sizei, Int) -> Void
  alias PFNGLMULTIMODEDRAWELEMENTSIBMPROC = (Enum*, Sizei*, Enum, Void**, Sizei, Int) -> Void
  IBM_RASTERPOS_CLIP = 1
  RASTER_POSITION_UNCLIPPED_IBM = 0x19262_u32
  IBM_STATIC_DATA = 1
  ALL_STATIC_DATA_IBM = 103060
  STATIC_VERTEX_ARRAY_IBM = 103061
  alias PFNGLFLUSHSTATICDATAIBMPROC = Enum -> Void
  IBM_TEXTURE_MIRRORED_REPEAT = 1
  MIRRORED_REPEAT_IBM = 0x8370_u32
  IBM_VERTEX_ARRAY_LISTS = 1
  VERTEX_ARRAY_LIST_IBM = 103070
  NORMAL_ARRAY_LIST_IBM = 103071
  COLOR_ARRAY_LIST_IBM = 103072
  INDEX_ARRAY_LIST_IBM = 103073
  TEXTURE_COORD_ARRAY_LIST_IBM = 103074
  EDGE_FLAG_ARRAY_LIST_IBM = 103075
  FOG_COORDINATE_ARRAY_LIST_IBM = 103076
  SECONDARY_COLOR_ARRAY_LIST_IBM = 103077
  VERTEX_ARRAY_LIST_STRIDE_IBM = 103080
  NORMAL_ARRAY_LIST_STRIDE_IBM = 103081
  COLOR_ARRAY_LIST_STRIDE_IBM = 103082
  INDEX_ARRAY_LIST_STRIDE_IBM = 103083
  TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM = 103084
  EDGE_FLAG_ARRAY_LIST_STRIDE_IBM = 103085
  FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM = 103086
  SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM = 103087
  alias PFNGLCOLORPOINTERLISTIBMPROC = (Int, Enum, Int, Void**, Int) -> Void
  alias PFNGLSECONDARYCOLORPOINTERLISTIBMPROC = (Int, Enum, Int, Void**, Int) -> Void
  alias PFNGLEDGEFLAGPOINTERLISTIBMPROC = (Int, Boolean**, Int) -> Void
  alias PFNGLFOGCOORDPOINTERLISTIBMPROC = (Enum, Int, Void**, Int) -> Void
  alias PFNGLINDEXPOINTERLISTIBMPROC = (Enum, Int, Void**, Int) -> Void
  alias PFNGLNORMALPOINTERLISTIBMPROC = (Enum, Int, Void**, Int) -> Void
  alias PFNGLTEXCOORDPOINTERLISTIBMPROC = (Int, Enum, Int, Void**, Int) -> Void
  alias PFNGLVERTEXPOINTERLISTIBMPROC = (Int, Enum, Int, Void**, Int) -> Void
  INGR_BLEND_FUNC_SEPARATE = 1
  alias PFNGLBLENDFUNCSEPARATEINGRPROC = (Enum, Enum, Enum, Enum) -> Void
  INGR_COLOR_CLAMP = 1
  RED_MIN_CLAMP_INGR = 0x8560_u32
  GREEN_MIN_CLAMP_INGR = 0x8561_u32
  BLUE_MIN_CLAMP_INGR = 0x8562_u32
  ALPHA_MIN_CLAMP_INGR = 0x8563_u32
  RED_MAX_CLAMP_INGR = 0x8564_u32
  GREEN_MAX_CLAMP_INGR = 0x8565_u32
  BLUE_MAX_CLAMP_INGR = 0x8566_u32
  ALPHA_MAX_CLAMP_INGR = 0x8567_u32
  INGR_INTERLACE_READ = 1
  INTERLACE_READ_INGR = 0x8568_u32
  INTEL_FRAGMENT_SHADER_ORDERING = 1
  INTEL_MAP_TEXTURE = 1
  TEXTURE_MEMORY_LAYOUT_INTEL = 0x83FF_u32
  LAYOUT_DEFAULT_INTEL = 0
  LAYOUT_LINEAR_INTEL = 1
  LAYOUT_LINEAR_CPU_CACHED_INTEL = 2
  alias PFNGLSYNCTEXTUREINTELPROC = Uint -> Void
  alias PFNGLUNMAPTEXTURE2DINTELPROC = (Uint, Int) -> Void
  alias PFNGLMAPTEXTURE2DINTELPROC = (Uint, Int, Bitfield, Int*, Enum*) -> Void*
  INTEL_PARALLEL_ARRAYS = 1
  PARALLEL_ARRAYS_INTEL = 0x83F4_u32
  VERTEX_ARRAY_PARALLEL_POINTERS_INTEL = 0x83F5_u32
  NORMAL_ARRAY_PARALLEL_POINTERS_INTEL = 0x83F6_u32
  COLOR_ARRAY_PARALLEL_POINTERS_INTEL = 0x83F7_u32
  TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL = 0x83F8_u32
  alias PFNGLVERTEXPOINTERVINTELPROC = (Int, Enum, Void**) -> Void
  alias PFNGLNORMALPOINTERVINTELPROC = (Enum, Void**) -> Void
  alias PFNGLCOLORPOINTERVINTELPROC = (Int, Enum, Void**) -> Void
  alias PFNGLTEXCOORDPOINTERVINTELPROC = (Int, Enum, Void**) -> Void
  INTEL_PERFORMANCE_QUERY = 1
  PERFQUERY_SINGLE_CONTEXT_INTEL = 0x00000000_u32
  PERFQUERY_GLOBAL_CONTEXT_INTEL = 0x00000001_u32
  PERFQUERY_WAIT_INTEL = 0x83FB_u32
  PERFQUERY_FLUSH_INTEL = 0x83FA_u32
  PERFQUERY_DONOT_FLUSH_INTEL = 0x83F9_u32
  PERFQUERY_COUNTER_EVENT_INTEL = 0x94F0_u32
  PERFQUERY_COUNTER_DURATION_NORM_INTEL = 0x94F1_u32
  PERFQUERY_COUNTER_DURATION_RAW_INTEL = 0x94F2_u32
  PERFQUERY_COUNTER_THROUGHPUT_INTEL = 0x94F3_u32
  PERFQUERY_COUNTER_RAW_INTEL = 0x94F4_u32
  PERFQUERY_COUNTER_TIMESTAMP_INTEL = 0x94F5_u32
  PERFQUERY_COUNTER_DATA_UINT32_INTEL = 0x94F8_u32
  PERFQUERY_COUNTER_DATA_UINT64_INTEL = 0x94F9_u32
  PERFQUERY_COUNTER_DATA_FLOAT_INTEL = 0x94FA_u32
  PERFQUERY_COUNTER_DATA_DOUBLE_INTEL = 0x94FB_u32
  PERFQUERY_COUNTER_DATA_BOOL32_INTEL = 0x94FC_u32
  PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL = 0x94FD_u32
  PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL = 0x94FE_u32
  PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL = 0x94FF_u32
  PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL = 0x9500_u32
  alias PFNGLBEGINPERFQUERYINTELPROC = Uint -> Void
  alias PFNGLCREATEPERFQUERYINTELPROC = (Uint, Uint*) -> Void
  alias PFNGLDELETEPERFQUERYINTELPROC = Uint -> Void
  alias PFNGLENDPERFQUERYINTELPROC = Uint -> Void
  alias PFNGLGETFIRSTPERFQUERYIDINTELPROC = Uint* -> Void
  alias PFNGLGETNEXTPERFQUERYIDINTELPROC = (Uint, Uint*) -> Void
  alias PFNGLGETPERFCOUNTERINFOINTELPROC = (Uint, Uint, Uint, Char*, Uint, Char*, Uint*, Uint*, Uint*, Uint*, Uint64*) -> Void
  alias PFNGLGETPERFQUERYDATAINTELPROC = (Uint, Uint, Sizei, Void*, Uint*) -> Void
  alias PFNGLGETPERFQUERYIDBYNAMEINTELPROC = (Char*, Uint*) -> Void
  alias PFNGLGETPERFQUERYINFOINTELPROC = (Uint, Uint, Char*, Uint*, Uint*, Uint*, Uint*) -> Void
  MESAX_TEXTURE_STACK = 1
  TEXTURE_1D_STACK_MESAX = 0x8759_u32
  TEXTURE_2D_STACK_MESAX = 0x875A_u32
  PROXY_TEXTURE_1D_STACK_MESAX = 0x875B_u32
  PROXY_TEXTURE_2D_STACK_MESAX = 0x875C_u32
  TEXTURE_1D_STACK_BINDING_MESAX = 0x875D_u32
  TEXTURE_2D_STACK_BINDING_MESAX = 0x875E_u32
  MESA_PACK_INVERT = 1
  PACK_INVERT_MESA = 0x8758_u32
  MESA_RESIZE_BUFFERS = 1
  alias PFNGLRESIZEBUFFERSMESAPROC = -> Void
  MESA_WINDOW_POS = 1
  alias PFNGLWINDOWPOS2DMESAPROC = (Double, Double) -> Void
  alias PFNGLWINDOWPOS2DVMESAPROC = Double* -> Void
  alias PFNGLWINDOWPOS2FMESAPROC = (Float, Float) -> Void
  alias PFNGLWINDOWPOS2FVMESAPROC = Float* -> Void
  alias PFNGLWINDOWPOS2IMESAPROC = (Int, Int) -> Void
  alias PFNGLWINDOWPOS2IVMESAPROC = Int* -> Void
  alias PFNGLWINDOWPOS2SMESAPROC = (Short, Short) -> Void
  alias PFNGLWINDOWPOS2SVMESAPROC = Short* -> Void
  alias PFNGLWINDOWPOS3DMESAPROC = (Double, Double, Double) -> Void
  alias PFNGLWINDOWPOS3DVMESAPROC = Double* -> Void
  alias PFNGLWINDOWPOS3FMESAPROC = (Float, Float, Float) -> Void
  alias PFNGLWINDOWPOS3FVMESAPROC = Float* -> Void
  alias PFNGLWINDOWPOS3IMESAPROC = (Int, Int, Int) -> Void
  alias PFNGLWINDOWPOS3IVMESAPROC = Int* -> Void
  alias PFNGLWINDOWPOS3SMESAPROC = (Short, Short, Short) -> Void
  alias PFNGLWINDOWPOS3SVMESAPROC = Short* -> Void
  alias PFNGLWINDOWPOS4DMESAPROC = (Double, Double, Double, Double) -> Void
  alias PFNGLWINDOWPOS4DVMESAPROC = Double* -> Void
  alias PFNGLWINDOWPOS4FMESAPROC = (Float, Float, Float, Float) -> Void
  alias PFNGLWINDOWPOS4FVMESAPROC = Float* -> Void
  alias PFNGLWINDOWPOS4IMESAPROC = (Int, Int, Int, Int) -> Void
  alias PFNGLWINDOWPOS4IVMESAPROC = Int* -> Void
  alias PFNGLWINDOWPOS4SMESAPROC = (Short, Short, Short, Short) -> Void
  alias PFNGLWINDOWPOS4SVMESAPROC = Short* -> Void
  MESA_YCBCR_TEXTURE = 1
  UNSIGNED_SHORT_8_8_MESA = 0x85BA_u32
  UNSIGNED_SHORT_8_8_REV_MESA = 0x85BB_u32
  YCBCR_MESA = 0x8757_u32
  NVX_CONDITIONAL_RENDER = 1
  alias PFNGLBEGINCONDITIONALRENDERNVXPROC = Uint -> Void
  alias PFNGLENDCONDITIONALRENDERNVXPROC = -> Void
  NVX_GPU_MEMORY_INFO = 1
  GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX = 0x9047_u32
  GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX = 0x9048_u32
  GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX = 0x9049_u32
  GPU_MEMORY_INFO_EVICTION_COUNT_NVX = 0x904A_u32
  GPU_MEMORY_INFO_EVICTED_MEMORY_NVX = 0x904B_u32
  NV_BINDLESS_MULTI_DRAW_INDIRECT = 1
  alias PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC = (Enum, Void*, Sizei, Sizei, Int) -> Void
  alias PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC = (Enum, Enum, Void*, Sizei, Sizei, Int) -> Void
  NV_BINDLESS_MULTI_DRAW_INDIRECT_COUNT = 1
  alias PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC = (Enum, Void*, Sizei, Sizei, Sizei, Int) -> Void
  alias PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC = (Enum, Enum, Void*, Sizei, Sizei, Sizei, Int) -> Void
  NV_BINDLESS_TEXTURE = 1
  alias PFNGLGETTEXTUREHANDLENVPROC = Uint -> Uint64
  alias PFNGLGETTEXTURESAMPLERHANDLENVPROC = (Uint, Uint) -> Uint64
  alias PFNGLMAKETEXTUREHANDLERESIDENTNVPROC = Uint64 -> Void
  alias PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC = Uint64 -> Void
  alias PFNGLGETIMAGEHANDLENVPROC = (Uint, Int, Boolean, Int, Enum) -> Uint64
  alias PFNGLMAKEIMAGEHANDLERESIDENTNVPROC = (Uint64, Enum) -> Void
  alias PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC = Uint64 -> Void
  alias PFNGLUNIFORMHANDLEUI64NVPROC = (Int, Uint64) -> Void
  alias PFNGLUNIFORMHANDLEUI64VNVPROC = (Int, Sizei, Uint64*) -> Void
  alias PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC = (Uint, Int, Uint64) -> Void
  alias PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC = (Uint, Int, Sizei, Uint64*) -> Void
  alias PFNGLISTEXTUREHANDLERESIDENTNVPROC = Uint64 -> Boolean
  alias PFNGLISIMAGEHANDLERESIDENTNVPROC = Uint64 -> Boolean
  NV_BLEND_EQUATION_ADVANCED = 1
  BLEND_OVERLAP_NV = 0x9281_u32
  BLEND_PREMULTIPLIED_SRC_NV = 0x9280_u32
  BLUE_NV = 0x1905_u32
  COLORBURN_NV = 0x929A_u32
  COLORDODGE_NV = 0x9299_u32
  CONJOINT_NV = 0x9284_u32
  CONTRAST_NV = 0x92A1_u32
  DARKEN_NV = 0x9297_u32
  DIFFERENCE_NV = 0x929E_u32
  DISJOINT_NV = 0x9283_u32
  DST_ATOP_NV = 0x928F_u32
  DST_IN_NV = 0x928B_u32
  DST_NV = 0x9287_u32
  DST_OUT_NV = 0x928D_u32
  DST_OVER_NV = 0x9289_u32
  EXCLUSION_NV = 0x92A0_u32
  GREEN_NV = 0x1904_u32
  HARDLIGHT_NV = 0x929B_u32
  HARDMIX_NV = 0x92A9_u32
  HSL_COLOR_NV = 0x92AF_u32
  HSL_HUE_NV = 0x92AD_u32
  HSL_LUMINOSITY_NV = 0x92B0_u32
  HSL_SATURATION_NV = 0x92AE_u32
  INVERT_OVG_NV = 0x92B4_u32
  INVERT_RGB_NV = 0x92A3_u32
  LIGHTEN_NV = 0x9298_u32
  LINEARBURN_NV = 0x92A5_u32
  LINEARDODGE_NV = 0x92A4_u32
  LINEARLIGHT_NV = 0x92A7_u32
  MINUS_CLAMPED_NV = 0x92B3_u32
  MINUS_NV = 0x929F_u32
  MULTIPLY_NV = 0x9294_u32
  OVERLAY_NV = 0x9296_u32
  PINLIGHT_NV = 0x92A8_u32
  PLUS_CLAMPED_ALPHA_NV = 0x92B2_u32
  PLUS_CLAMPED_NV = 0x92B1_u32
  PLUS_DARKER_NV = 0x9292_u32
  PLUS_NV = 0x9291_u32
  RED_NV = 0x1903_u32
  SCREEN_NV = 0x9295_u32
  SOFTLIGHT_NV = 0x929C_u32
  SRC_ATOP_NV = 0x928E_u32
  SRC_IN_NV = 0x928A_u32
  SRC_NV = 0x9286_u32
  SRC_OUT_NV = 0x928C_u32
  SRC_OVER_NV = 0x9288_u32
  UNCORRELATED_NV = 0x9282_u32
  VIVIDLIGHT_NV = 0x92A6_u32
  XOR_NV = 0x1506_u32
  alias PFNGLBLENDPARAMETERINVPROC = (Enum, Int) -> Void
  alias PFNGLBLENDBARRIERNVPROC = -> Void
  NV_BLEND_EQUATION_ADVANCED_COHERENT = 1
  BLEND_ADVANCED_COHERENT_NV = 0x9285_u32
  NV_BLEND_SQUARE = 1
  NV_COMPUTE_PROGRAM5 = 1
  COMPUTE_PROGRAM_NV = 0x90FB_u32
  COMPUTE_PROGRAM_PARAMETER_BUFFER_NV = 0x90FC_u32
  NV_CONDITIONAL_RENDER = 1
  QUERY_WAIT_NV = 0x8E13_u32
  QUERY_NO_WAIT_NV = 0x8E14_u32
  QUERY_BY_REGION_WAIT_NV = 0x8E15_u32
  QUERY_BY_REGION_NO_WAIT_NV = 0x8E16_u32
  alias PFNGLBEGINCONDITIONALRENDERNVPROC = (Uint, Enum) -> Void
  alias PFNGLENDCONDITIONALRENDERNVPROC = -> Void
  NV_COPY_DEPTH_TO_COLOR = 1
  DEPTH_STENCIL_TO_RGBA_NV = 0x886E_u32
  DEPTH_STENCIL_TO_BGRA_NV = 0x886F_u32
  NV_COPY_IMAGE = 1
  alias PFNGLCOPYIMAGESUBDATANVPROC = (Uint, Enum, Int, Int, Int, Int, Uint, Enum, Int, Int, Int, Int, Sizei, Sizei, Sizei) -> Void
  NV_DEEP_TEXTURE3_D = 1
  MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV = 0x90D0_u32
  MAX_DEEP_3D_TEXTURE_DEPTH_NV = 0x90D1_u32
  NV_DEPTH_BUFFER_FLOAT = 1
  DEPTH_COMPONENT32F_NV = 0x8DAB_u32
  DEPTH32F_STENCIL8_NV = 0x8DAC_u32
  FLOAT_32_UNSIGNED_INT_24_8_REV_NV = 0x8DAD_u32
  DEPTH_BUFFER_FLOAT_MODE_NV = 0x8DAF_u32
  alias PFNGLDEPTHRANGEDNVPROC = (Double, Double) -> Void
  alias PFNGLCLEARDEPTHDNVPROC = Double -> Void
  alias PFNGLDEPTHBOUNDSDNVPROC = (Double, Double) -> Void
  NV_DEPTH_CLAMP = 1
  DEPTH_CLAMP_NV = 0x864F_u32
  NV_DRAW_TEXTURE = 1
  alias PFNGLDRAWTEXTURENVPROC = (Uint, Uint, Float, Float, Float, Float, Float, Float, Float, Float, Float) -> Void
  NV_EVALUATORS = 1
  EVAL_2D_NV = 0x86C0_u32
  EVAL_TRIANGULAR_2D_NV = 0x86C1_u32
  MAP_TESSELLATION_NV = 0x86C2_u32
  MAP_ATTRIB_U_ORDER_NV = 0x86C3_u32
  MAP_ATTRIB_V_ORDER_NV = 0x86C4_u32
  EVAL_FRACTIONAL_TESSELLATION_NV = 0x86C5_u32
  EVAL_VERTEX_ATTRIB0_NV = 0x86C6_u32
  EVAL_VERTEX_ATTRIB1_NV = 0x86C7_u32
  EVAL_VERTEX_ATTRIB2_NV = 0x86C8_u32
  EVAL_VERTEX_ATTRIB3_NV = 0x86C9_u32
  EVAL_VERTEX_ATTRIB4_NV = 0x86CA_u32
  EVAL_VERTEX_ATTRIB5_NV = 0x86CB_u32
  EVAL_VERTEX_ATTRIB6_NV = 0x86CC_u32
  EVAL_VERTEX_ATTRIB7_NV = 0x86CD_u32
  EVAL_VERTEX_ATTRIB8_NV = 0x86CE_u32
  EVAL_VERTEX_ATTRIB9_NV = 0x86CF_u32
  EVAL_VERTEX_ATTRIB10_NV = 0x86D0_u32
  EVAL_VERTEX_ATTRIB11_NV = 0x86D1_u32
  EVAL_VERTEX_ATTRIB12_NV = 0x86D2_u32
  EVAL_VERTEX_ATTRIB13_NV = 0x86D3_u32
  EVAL_VERTEX_ATTRIB14_NV = 0x86D4_u32
  EVAL_VERTEX_ATTRIB15_NV = 0x86D5_u32
  MAX_MAP_TESSELLATION_NV = 0x86D6_u32
  MAX_RATIONAL_EVAL_ORDER_NV = 0x86D7_u32
  alias PFNGLMAPCONTROLPOINTSNVPROC = (Enum, Uint, Enum, Sizei, Sizei, Int, Int, Boolean, Void*) -> Void
  alias PFNGLMAPPARAMETERIVNVPROC = (Enum, Enum, Int*) -> Void
  alias PFNGLMAPPARAMETERFVNVPROC = (Enum, Enum, Float*) -> Void
  alias PFNGLGETMAPCONTROLPOINTSNVPROC = (Enum, Uint, Enum, Sizei, Sizei, Boolean, Void*) -> Void
  alias PFNGLGETMAPPARAMETERIVNVPROC = (Enum, Enum, Int*) -> Void
  alias PFNGLGETMAPPARAMETERFVNVPROC = (Enum, Enum, Float*) -> Void
  alias PFNGLGETMAPATTRIBPARAMETERIVNVPROC = (Enum, Uint, Enum, Int*) -> Void
  alias PFNGLGETMAPATTRIBPARAMETERFVNVPROC = (Enum, Uint, Enum, Float*) -> Void
  alias PFNGLEVALMAPSNVPROC = (Enum, Enum) -> Void
  NV_EXPLICIT_MULTISAMPLE = 1
  SAMPLE_POSITION_NV = 0x8E50_u32
  SAMPLE_MASK_NV = 0x8E51_u32
  SAMPLE_MASK_VALUE_NV = 0x8E52_u32
  TEXTURE_BINDING_RENDERBUFFER_NV = 0x8E53_u32
  TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV = 0x8E54_u32
  TEXTURE_RENDERBUFFER_NV = 0x8E55_u32
  SAMPLER_RENDERBUFFER_NV = 0x8E56_u32
  INT_SAMPLER_RENDERBUFFER_NV = 0x8E57_u32
  UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV = 0x8E58_u32
  MAX_SAMPLE_MASK_WORDS_NV = 0x8E59_u32
  alias PFNGLGETMULTISAMPLEFVNVPROC = (Enum, Uint, Float*) -> Void
  alias PFNGLSAMPLEMASKINDEXEDNVPROC = (Uint, Bitfield) -> Void
  alias PFNGLTEXRENDERBUFFERNVPROC = (Enum, Uint) -> Void
  NV_FENCE = 1
  ALL_COMPLETED_NV = 0x84F2_u32
  FENCE_STATUS_NV = 0x84F3_u32
  FENCE_CONDITION_NV = 0x84F4_u32
  alias PFNGLDELETEFENCESNVPROC = (Sizei, Uint*) -> Void
  alias PFNGLGENFENCESNVPROC = (Sizei, Uint*) -> Void
  alias PFNGLISFENCENVPROC = Uint -> Boolean
  alias PFNGLTESTFENCENVPROC = Uint -> Boolean
  alias PFNGLGETFENCEIVNVPROC = (Uint, Enum, Int*) -> Void
  alias PFNGLFINISHFENCENVPROC = Uint -> Void
  alias PFNGLSETFENCENVPROC = (Uint, Enum) -> Void
  NV_FLOAT_BUFFER = 1
  FLOAT_R_NV = 0x8880_u32
  FLOAT_RG_NV = 0x8881_u32
  FLOAT_RGB_NV = 0x8882_u32
  FLOAT_RGBA_NV = 0x8883_u32
  FLOAT_R16_NV = 0x8884_u32
  FLOAT_R32_NV = 0x8885_u32
  FLOAT_RG16_NV = 0x8886_u32
  FLOAT_RG32_NV = 0x8887_u32
  FLOAT_RGB16_NV = 0x8888_u32
  FLOAT_RGB32_NV = 0x8889_u32
  FLOAT_RGBA16_NV = 0x888A_u32
  FLOAT_RGBA32_NV = 0x888B_u32
  TEXTURE_FLOAT_COMPONENTS_NV = 0x888C_u32
  FLOAT_CLEAR_COLOR_VALUE_NV = 0x888D_u32
  FLOAT_RGBA_MODE_NV = 0x888E_u32
  NV_FOG_DISTANCE = 1
  FOG_DISTANCE_MODE_NV = 0x855A_u32
  EYE_RADIAL_NV = 0x855B_u32
  EYE_PLANE_ABSOLUTE_NV = 0x855C_u32
  NV_FRAGMENT_PROGRAM = 1
  MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV = 0x8868_u32
  FRAGMENT_PROGRAM_NV = 0x8870_u32
  MAX_TEXTURE_COORDS_NV = 0x8871_u32
  MAX_TEXTURE_IMAGE_UNITS_NV = 0x8872_u32
  FRAGMENT_PROGRAM_BINDING_NV = 0x8873_u32
  PROGRAM_ERROR_STRING_NV = 0x8874_u32
  alias PFNGLPROGRAMNAMEDPARAMETER4FNVPROC = (Uint, Sizei, Ubyte*, Float, Float, Float, Float) -> Void
  alias PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC = (Uint, Sizei, Ubyte*, Float*) -> Void
  alias PFNGLPROGRAMNAMEDPARAMETER4DNVPROC = (Uint, Sizei, Ubyte*, Double, Double, Double, Double) -> Void
  alias PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC = (Uint, Sizei, Ubyte*, Double*) -> Void
  alias PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC = (Uint, Sizei, Ubyte*, Float*) -> Void
  alias PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC = (Uint, Sizei, Ubyte*, Double*) -> Void
  NV_FRAGMENT_PROGRAM2 = 1
  MAX_PROGRAM_EXEC_INSTRUCTIONS_NV = 0x88F4_u32
  MAX_PROGRAM_CALL_DEPTH_NV = 0x88F5_u32
  MAX_PROGRAM_IF_DEPTH_NV = 0x88F6_u32
  MAX_PROGRAM_LOOP_DEPTH_NV = 0x88F7_u32
  MAX_PROGRAM_LOOP_COUNT_NV = 0x88F8_u32
  NV_FRAGMENT_PROGRAM4 = 1
  NV_FRAGMENT_PROGRAM_OPTION = 1
  NV_FRAMEBUFFER_MULTISAMPLE_COVERAGE = 1
  RENDERBUFFER_COVERAGE_SAMPLES_NV = 0x8CAB_u32
  RENDERBUFFER_COLOR_SAMPLES_NV = 0x8E10_u32
  MAX_MULTISAMPLE_COVERAGE_MODES_NV = 0x8E11_u32
  MULTISAMPLE_COVERAGE_MODES_NV = 0x8E12_u32
  alias PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC = (Enum, Sizei, Sizei, Enum, Sizei, Sizei) -> Void
  NV_GEOMETRY_PROGRAM4 = 1
  GEOMETRY_PROGRAM_NV = 0x8C26_u32
  MAX_PROGRAM_OUTPUT_VERTICES_NV = 0x8C27_u32
  MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV = 0x8C28_u32
  alias PFNGLPROGRAMVERTEXLIMITNVPROC = (Enum, Int) -> Void
  alias PFNGLFRAMEBUFFERTEXTUREEXTPROC = (Enum, Enum, Uint, Int) -> Void
  alias PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC = (Enum, Enum, Uint, Int, Enum) -> Void
  NV_GEOMETRY_SHADER4 = 1
  NV_GPU_PROGRAM4 = 1
  MIN_PROGRAM_TEXEL_OFFSET_NV = 0x8904_u32
  MAX_PROGRAM_TEXEL_OFFSET_NV = 0x8905_u32
  PROGRAM_ATTRIB_COMPONENTS_NV = 0x8906_u32
  PROGRAM_RESULT_COMPONENTS_NV = 0x8907_u32
  MAX_PROGRAM_ATTRIB_COMPONENTS_NV = 0x8908_u32
  MAX_PROGRAM_RESULT_COMPONENTS_NV = 0x8909_u32
  MAX_PROGRAM_GENERIC_ATTRIBS_NV = 0x8DA5_u32
  MAX_PROGRAM_GENERIC_RESULTS_NV = 0x8DA6_u32
  alias PFNGLPROGRAMLOCALPARAMETERI4INVPROC = (Enum, Uint, Int, Int, Int, Int) -> Void
  alias PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC = (Enum, Uint, Int*) -> Void
  alias PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC = (Enum, Uint, Sizei, Int*) -> Void
  alias PFNGLPROGRAMLOCALPARAMETERI4UINVPROC = (Enum, Uint, Uint, Uint, Uint, Uint) -> Void
  alias PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC = (Enum, Uint, Uint*) -> Void
  alias PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC = (Enum, Uint, Sizei, Uint*) -> Void
  alias PFNGLPROGRAMENVPARAMETERI4INVPROC = (Enum, Uint, Int, Int, Int, Int) -> Void
  alias PFNGLPROGRAMENVPARAMETERI4IVNVPROC = (Enum, Uint, Int*) -> Void
  alias PFNGLPROGRAMENVPARAMETERSI4IVNVPROC = (Enum, Uint, Sizei, Int*) -> Void
  alias PFNGLPROGRAMENVPARAMETERI4UINVPROC = (Enum, Uint, Uint, Uint, Uint, Uint) -> Void
  alias PFNGLPROGRAMENVPARAMETERI4UIVNVPROC = (Enum, Uint, Uint*) -> Void
  alias PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC = (Enum, Uint, Sizei, Uint*) -> Void
  alias PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC = (Enum, Uint, Int*) -> Void
  alias PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC = (Enum, Uint, Uint*) -> Void
  alias PFNGLGETPROGRAMENVPARAMETERIIVNVPROC = (Enum, Uint, Int*) -> Void
  alias PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC = (Enum, Uint, Uint*) -> Void
  NV_GPU_PROGRAM5 = 1
  MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV = 0x8E5A_u32
  MIN_FRAGMENT_INTERPOLATION_OFFSET_NV = 0x8E5B_u32
  MAX_FRAGMENT_INTERPOLATION_OFFSET_NV = 0x8E5C_u32
  FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV = 0x8E5D_u32
  MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV = 0x8E5E_u32
  MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV = 0x8E5F_u32
  MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV = 0x8F44_u32
  MAX_PROGRAM_SUBROUTINE_NUM_NV = 0x8F45_u32
  alias PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC = (Enum, Sizei, Uint*) -> Void
  alias PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC = (Enum, Uint, Uint*) -> Void
  NV_GPU_PROGRAM5_MEM_EXTENDED = 1
  NV_GPU_SHADER5 = 1
  NV_HALF_FLOAT = 1
  alias HalfNV = UInt16
  HALF_FLOAT_NV = 0x140B_u32
  alias PFNGLVERTEX2HNVPROC = (HalfNV, HalfNV) -> Void
  alias PFNGLVERTEX2HVNVPROC = HalfNV* -> Void
  alias PFNGLVERTEX3HNVPROC = (HalfNV, HalfNV, HalfNV) -> Void
  alias PFNGLVERTEX3HVNVPROC = HalfNV* -> Void
  alias PFNGLVERTEX4HNVPROC = (HalfNV, HalfNV, HalfNV, HalfNV) -> Void
  alias PFNGLVERTEX4HVNVPROC = HalfNV* -> Void
  alias PFNGLNORMAL3HNVPROC = (HalfNV, HalfNV, HalfNV) -> Void
  alias PFNGLNORMAL3HVNVPROC = HalfNV* -> Void
  alias PFNGLCOLOR3HNVPROC = (HalfNV, HalfNV, HalfNV) -> Void
  alias PFNGLCOLOR3HVNVPROC = HalfNV* -> Void
  alias PFNGLCOLOR4HNVPROC = (HalfNV, HalfNV, HalfNV, HalfNV) -> Void
  alias PFNGLCOLOR4HVNVPROC = HalfNV* -> Void
  alias PFNGLTEXCOORD1HNVPROC = HalfNV -> Void
  alias PFNGLTEXCOORD1HVNVPROC = HalfNV* -> Void
  alias PFNGLTEXCOORD2HNVPROC = (HalfNV, HalfNV) -> Void
  alias PFNGLTEXCOORD2HVNVPROC = HalfNV* -> Void
  alias PFNGLTEXCOORD3HNVPROC = (HalfNV, HalfNV, HalfNV) -> Void
  alias PFNGLTEXCOORD3HVNVPROC = HalfNV* -> Void
  alias PFNGLTEXCOORD4HNVPROC = (HalfNV, HalfNV, HalfNV, HalfNV) -> Void
  alias PFNGLTEXCOORD4HVNVPROC = HalfNV* -> Void
  alias PFNGLMULTITEXCOORD1HNVPROC = (Enum, HalfNV) -> Void
  alias PFNGLMULTITEXCOORD1HVNVPROC = (Enum, HalfNV*) -> Void
  alias PFNGLMULTITEXCOORD2HNVPROC = (Enum, HalfNV, HalfNV) -> Void
  alias PFNGLMULTITEXCOORD2HVNVPROC = (Enum, HalfNV*) -> Void
  alias PFNGLMULTITEXCOORD3HNVPROC = (Enum, HalfNV, HalfNV, HalfNV) -> Void
  alias PFNGLMULTITEXCOORD3HVNVPROC = (Enum, HalfNV*) -> Void
  alias PFNGLMULTITEXCOORD4HNVPROC = (Enum, HalfNV, HalfNV, HalfNV, HalfNV) -> Void
  alias PFNGLMULTITEXCOORD4HVNVPROC = (Enum, HalfNV*) -> Void
  alias PFNGLFOGCOORDHNVPROC = HalfNV -> Void
  alias PFNGLFOGCOORDHVNVPROC = HalfNV* -> Void
  alias PFNGLSECONDARYCOLOR3HNVPROC = (HalfNV, HalfNV, HalfNV) -> Void
  alias PFNGLSECONDARYCOLOR3HVNVPROC = HalfNV* -> Void
  alias PFNGLVERTEXWEIGHTHNVPROC = HalfNV -> Void
  alias PFNGLVERTEXWEIGHTHVNVPROC = HalfNV* -> Void
  alias PFNGLVERTEXATTRIB1HNVPROC = (Uint, HalfNV) -> Void
  alias PFNGLVERTEXATTRIB1HVNVPROC = (Uint, HalfNV*) -> Void
  alias PFNGLVERTEXATTRIB2HNVPROC = (Uint, HalfNV, HalfNV) -> Void
  alias PFNGLVERTEXATTRIB2HVNVPROC = (Uint, HalfNV*) -> Void
  alias PFNGLVERTEXATTRIB3HNVPROC = (Uint, HalfNV, HalfNV, HalfNV) -> Void
  alias PFNGLVERTEXATTRIB3HVNVPROC = (Uint, HalfNV*) -> Void
  alias PFNGLVERTEXATTRIB4HNVPROC = (Uint, HalfNV, HalfNV, HalfNV, HalfNV) -> Void
  alias PFNGLVERTEXATTRIB4HVNVPROC = (Uint, HalfNV*) -> Void
  alias PFNGLVERTEXATTRIBS1HVNVPROC = (Uint, Sizei, HalfNV*) -> Void
  alias PFNGLVERTEXATTRIBS2HVNVPROC = (Uint, Sizei, HalfNV*) -> Void
  alias PFNGLVERTEXATTRIBS3HVNVPROC = (Uint, Sizei, HalfNV*) -> Void
  alias PFNGLVERTEXATTRIBS4HVNVPROC = (Uint, Sizei, HalfNV*) -> Void
  NV_LIGHT_MAX_EXPONENT = 1
  MAX_SHININESS_NV = 0x8504_u32
  MAX_SPOT_EXPONENT_NV = 0x8505_u32
  NV_MULTISAMPLE_COVERAGE = 1
  COLOR_SAMPLES_NV = 0x8E20_u32
  NV_MULTISAMPLE_FILTER_HINT = 1
  MULTISAMPLE_FILTER_HINT_NV = 0x8534_u32
  NV_OCCLUSION_QUERY = 1
  PIXEL_COUNTER_BITS_NV = 0x8864_u32
  CURRENT_OCCLUSION_QUERY_ID_NV = 0x8865_u32
  PIXEL_COUNT_NV = 0x8866_u32
  PIXEL_COUNT_AVAILABLE_NV = 0x8867_u32
  alias PFNGLGENOCCLUSIONQUERIESNVPROC = (Sizei, Uint*) -> Void
  alias PFNGLDELETEOCCLUSIONQUERIESNVPROC = (Sizei, Uint*) -> Void
  alias PFNGLISOCCLUSIONQUERYNVPROC = Uint -> Boolean
  alias PFNGLBEGINOCCLUSIONQUERYNVPROC = Uint -> Void
  alias PFNGLENDOCCLUSIONQUERYNVPROC = -> Void
  alias PFNGLGETOCCLUSIONQUERYIVNVPROC = (Uint, Enum, Int*) -> Void
  alias PFNGLGETOCCLUSIONQUERYUIVNVPROC = (Uint, Enum, Uint*) -> Void
  NV_PACKED_DEPTH_STENCIL = 1
  DEPTH_STENCIL_NV = 0x84F9_u32
  UNSIGNED_INT_24_8_NV = 0x84FA_u32
  NV_PARAMETER_BUFFER_OBJECT = 1
  MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV = 0x8DA0_u32
  MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV = 0x8DA1_u32
  VERTEX_PROGRAM_PARAMETER_BUFFER_NV = 0x8DA2_u32
  GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV = 0x8DA3_u32
  FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV = 0x8DA4_u32
  alias PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC = (Enum, Uint, Uint, Sizei, Float*) -> Void
  alias PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC = (Enum, Uint, Uint, Sizei, Int*) -> Void
  alias PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC = (Enum, Uint, Uint, Sizei, Uint*) -> Void
  NV_PARAMETER_BUFFER_OBJECT2 = 1
  NV_PATH_RENDERING = 1
  PATH_FORMAT_SVG_NV = 0x9070_u32
  PATH_FORMAT_PS_NV = 0x9071_u32
  STANDARD_FONT_NAME_NV = 0x9072_u32
  SYSTEM_FONT_NAME_NV = 0x9073_u32
  FILE_NAME_NV = 0x9074_u32
  PATH_STROKE_WIDTH_NV = 0x9075_u32
  PATH_END_CAPS_NV = 0x9076_u32
  PATH_INITIAL_END_CAP_NV = 0x9077_u32
  PATH_TERMINAL_END_CAP_NV = 0x9078_u32
  PATH_JOIN_STYLE_NV = 0x9079_u32
  PATH_MITER_LIMIT_NV = 0x907A_u32
  PATH_DASH_CAPS_NV = 0x907B_u32
  PATH_INITIAL_DASH_CAP_NV = 0x907C_u32
  PATH_TERMINAL_DASH_CAP_NV = 0x907D_u32
  PATH_DASH_OFFSET_NV = 0x907E_u32
  PATH_CLIENT_LENGTH_NV = 0x907F_u32
  PATH_FILL_MODE_NV = 0x9080_u32
  PATH_FILL_MASK_NV = 0x9081_u32
  PATH_FILL_COVER_MODE_NV = 0x9082_u32
  PATH_STROKE_COVER_MODE_NV = 0x9083_u32
  PATH_STROKE_MASK_NV = 0x9084_u32
  COUNT_UP_NV = 0x9088_u32
  COUNT_DOWN_NV = 0x9089_u32
  PATH_OBJECT_BOUNDING_BOX_NV = 0x908A_u32
  CONVEX_HULL_NV = 0x908B_u32
  BOUNDING_BOX_NV = 0x908D_u32
  TRANSLATE_X_NV = 0x908E_u32
  TRANSLATE_Y_NV = 0x908F_u32
  TRANSLATE_2D_NV = 0x9090_u32
  TRANSLATE_3D_NV = 0x9091_u32
  AFFINE_2D_NV = 0x9092_u32
  AFFINE_3D_NV = 0x9094_u32
  TRANSPOSE_AFFINE_2D_NV = 0x9096_u32
  TRANSPOSE_AFFINE_3D_NV = 0x9098_u32
  UTF8_NV = 0x909A_u32
  UTF16_NV = 0x909B_u32
  BOUNDING_BOX_OF_BOUNDING_BOXES_NV = 0x909C_u32
  PATH_COMMAND_COUNT_NV = 0x909D_u32
  PATH_COORD_COUNT_NV = 0x909E_u32
  PATH_DASH_ARRAY_COUNT_NV = 0x909F_u32
  PATH_COMPUTED_LENGTH_NV = 0x90A0_u32
  PATH_FILL_BOUNDING_BOX_NV = 0x90A1_u32
  PATH_STROKE_BOUNDING_BOX_NV = 0x90A2_u32
  SQUARE_NV = 0x90A3_u32
  ROUND_NV = 0x90A4_u32
  TRIANGULAR_NV = 0x90A5_u32
  BEVEL_NV = 0x90A6_u32
  MITER_REVERT_NV = 0x90A7_u32
  MITER_TRUNCATE_NV = 0x90A8_u32
  SKIP_MISSING_GLYPH_NV = 0x90A9_u32
  USE_MISSING_GLYPH_NV = 0x90AA_u32
  PATH_ERROR_POSITION_NV = 0x90AB_u32
  PATH_FOG_GEN_MODE_NV = 0x90AC_u32
  ACCUM_ADJACENT_PAIRS_NV = 0x90AD_u32
  ADJACENT_PAIRS_NV = 0x90AE_u32
  FIRST_TO_REST_NV = 0x90AF_u32
  PATH_GEN_MODE_NV = 0x90B0_u32
  PATH_GEN_COEFF_NV = 0x90B1_u32
  PATH_GEN_COLOR_FORMAT_NV = 0x90B2_u32
  PATH_GEN_COMPONENTS_NV = 0x90B3_u32
  PATH_STENCIL_FUNC_NV = 0x90B7_u32
  PATH_STENCIL_REF_NV = 0x90B8_u32
  PATH_STENCIL_VALUE_MASK_NV = 0x90B9_u32
  PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV = 0x90BD_u32
  PATH_STENCIL_DEPTH_OFFSET_UNITS_NV = 0x90BE_u32
  PATH_COVER_DEPTH_FUNC_NV = 0x90BF_u32
  PATH_DASH_OFFSET_RESET_NV = 0x90B4_u32
  MOVE_TO_RESETS_NV = 0x90B5_u32
  MOVE_TO_CONTINUES_NV = 0x90B6_u32
  CLOSE_PATH_NV = 0x00_u32
  MOVE_TO_NV = 0x02_u32
  RELATIVE_MOVE_TO_NV = 0x03_u32
  LINE_TO_NV = 0x04_u32
  RELATIVE_LINE_TO_NV = 0x05_u32
  HORIZONTAL_LINE_TO_NV = 0x06_u32
  RELATIVE_HORIZONTAL_LINE_TO_NV = 0x07_u32
  VERTICAL_LINE_TO_NV = 0x08_u32
  RELATIVE_VERTICAL_LINE_TO_NV = 0x09_u32
  QUADRATIC_CURVE_TO_NV = 0x0A_u32
  RELATIVE_QUADRATIC_CURVE_TO_NV = 0x0B_u32
  CUBIC_CURVE_TO_NV = 0x0C_u32
  RELATIVE_CUBIC_CURVE_TO_NV = 0x0D_u32
  SMOOTH_QUADRATIC_CURVE_TO_NV = 0x0E_u32
  RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV = 0x0F_u32
  SMOOTH_CUBIC_CURVE_TO_NV = 0x10_u32
  RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV = 0x11_u32
  SMALL_CCW_ARC_TO_NV = 0x12_u32
  RELATIVE_SMALL_CCW_ARC_TO_NV = 0x13_u32
  SMALL_CW_ARC_TO_NV = 0x14_u32
  RELATIVE_SMALL_CW_ARC_TO_NV = 0x15_u32
  LARGE_CCW_ARC_TO_NV = 0x16_u32
  RELATIVE_LARGE_CCW_ARC_TO_NV = 0x17_u32
  LARGE_CW_ARC_TO_NV = 0x18_u32
  RELATIVE_LARGE_CW_ARC_TO_NV = 0x19_u32
  RESTART_PATH_NV = 0xF0_u32
  DUP_FIRST_CUBIC_CURVE_TO_NV = 0xF2_u32
  DUP_LAST_CUBIC_CURVE_TO_NV = 0xF4_u32
  RECT_NV = 0xF6_u32
  CIRCULAR_CCW_ARC_TO_NV = 0xF8_u32
  CIRCULAR_CW_ARC_TO_NV = 0xFA_u32
  CIRCULAR_TANGENT_ARC_TO_NV = 0xFC_u32
  ARC_TO_NV = 0xFE_u32
  RELATIVE_ARC_TO_NV = 0xFF_u32
  BOLD_BIT_NV = 0x01_u32
  ITALIC_BIT_NV = 0x02_u32
  GLYPH_WIDTH_BIT_NV = 0x01_u32
  GLYPH_HEIGHT_BIT_NV = 0x02_u32
  GLYPH_HORIZONTAL_BEARING_X_BIT_NV = 0x04_u32
  GLYPH_HORIZONTAL_BEARING_Y_BIT_NV = 0x08_u32
  GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV = 0x10_u32
  GLYPH_VERTICAL_BEARING_X_BIT_NV = 0x20_u32
  GLYPH_VERTICAL_BEARING_Y_BIT_NV = 0x40_u32
  GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV = 0x80_u32
  GLYPH_HAS_KERNING_BIT_NV = 0x100_u32
  FONT_X_MIN_BOUNDS_BIT_NV = 0x00010000_u32
  FONT_Y_MIN_BOUNDS_BIT_NV = 0x00020000_u32
  FONT_X_MAX_BOUNDS_BIT_NV = 0x00040000_u32
  FONT_Y_MAX_BOUNDS_BIT_NV = 0x00080000_u32
  FONT_UNITS_PER_EM_BIT_NV = 0x00100000_u32
  FONT_ASCENDER_BIT_NV = 0x00200000_u32
  FONT_DESCENDER_BIT_NV = 0x00400000_u32
  FONT_HEIGHT_BIT_NV = 0x00800000_u32
  FONT_MAX_ADVANCE_WIDTH_BIT_NV = 0x01000000_u32
  FONT_MAX_ADVANCE_HEIGHT_BIT_NV = 0x02000000_u32
  FONT_UNDERLINE_POSITION_BIT_NV = 0x04000000_u32
  FONT_UNDERLINE_THICKNESS_BIT_NV = 0x08000000_u32
  FONT_HAS_KERNING_BIT_NV = 0x10000000_u32
  PRIMARY_COLOR_NV = 0x852C_u32
  SECONDARY_COLOR_NV = 0x852D_u32
  ROUNDED_RECT_NV = 0xE8_u32
  RELATIVE_ROUNDED_RECT_NV = 0xE9_u32
  ROUNDED_RECT2_NV = 0xEA_u32
  RELATIVE_ROUNDED_RECT2_NV = 0xEB_u32
  ROUNDED_RECT4_NV = 0xEC_u32
  RELATIVE_ROUNDED_RECT4_NV = 0xED_u32
  ROUNDED_RECT8_NV = 0xEE_u32
  RELATIVE_ROUNDED_RECT8_NV = 0xEF_u32
  RELATIVE_RECT_NV = 0xF7_u32
  FONT_GLYPHS_AVAILABLE_NV = 0x9368_u32
  FONT_TARGET_UNAVAILABLE_NV = 0x9369_u32
  FONT_UNAVAILABLE_NV = 0x936A_u32
  FONT_UNINTELLIGIBLE_NV = 0x936B_u32
  CONIC_CURVE_TO_NV = 0x1A_u32
  RELATIVE_CONIC_CURVE_TO_NV = 0x1B_u32
  FONT_NUM_GLYPH_INDICES_BIT_NV = 0x20000000_u32
  STANDARD_FONT_FORMAT_NV = 0x936C_u32
  GL_2_BYTES_NV = 0x1407_u32
  GL_3_BYTES_NV = 0x1408_u32
  GL_4_BYTES_NV = 0x1409_u32
  EYE_LINEAR_NV = 0x2400_u32
  OBJECT_LINEAR_NV = 0x2401_u32
  CONSTANT_NV = 0x8576_u32
  PATH_PROJECTION_NV = 0x1701_u32
  PATH_MODELVIEW_NV = 0x1700_u32
  PATH_MODELVIEW_STACK_DEPTH_NV = 0x0BA3_u32
  PATH_MODELVIEW_MATRIX_NV = 0x0BA6_u32
  PATH_MAX_MODELVIEW_STACK_DEPTH_NV = 0x0D36_u32
  PATH_TRANSPOSE_MODELVIEW_MATRIX_NV = 0x84E3_u32
  PATH_PROJECTION_STACK_DEPTH_NV = 0x0BA4_u32
  PATH_PROJECTION_MATRIX_NV = 0x0BA7_u32
  PATH_MAX_PROJECTION_STACK_DEPTH_NV = 0x0D38_u32
  PATH_TRANSPOSE_PROJECTION_MATRIX_NV = 0x84E4_u32
  FRAGMENT_INPUT_NV = 0x936D_u32
  alias PFNGLGENPATHSNVPROC = Sizei -> Uint
  alias PFNGLDELETEPATHSNVPROC = (Uint, Sizei) -> Void
  alias PFNGLISPATHNVPROC = Uint -> Boolean
  alias PFNGLPATHCOMMANDSNVPROC = (Uint, Sizei, Ubyte*, Sizei, Enum, Void*) -> Void
  alias PFNGLPATHCOORDSNVPROC = (Uint, Sizei, Enum, Void*) -> Void
  alias PFNGLPATHSUBCOMMANDSNVPROC = (Uint, Sizei, Sizei, Sizei, Ubyte*, Sizei, Enum, Void*) -> Void
  alias PFNGLPATHSUBCOORDSNVPROC = (Uint, Sizei, Sizei, Enum, Void*) -> Void
  alias PFNGLPATHSTRINGNVPROC = (Uint, Enum, Sizei, Void*) -> Void
  alias PFNGLPATHGLYPHSNVPROC = (Uint, Enum, Void*, Bitfield, Sizei, Enum, Void*, Enum, Uint, Float) -> Void
  alias PFNGLPATHGLYPHRANGENVPROC = (Uint, Enum, Void*, Bitfield, Uint, Sizei, Enum, Uint, Float) -> Void
  alias PFNGLWEIGHTPATHSNVPROC = (Uint, Sizei, Uint*, Float*) -> Void
  alias PFNGLCOPYPATHNVPROC = (Uint, Uint) -> Void
  alias PFNGLINTERPOLATEPATHSNVPROC = (Uint, Uint, Uint, Float) -> Void
  alias PFNGLTRANSFORMPATHNVPROC = (Uint, Uint, Enum, Float*) -> Void
  alias PFNGLPATHPARAMETERIVNVPROC = (Uint, Enum, Int*) -> Void
  alias PFNGLPATHPARAMETERINVPROC = (Uint, Enum, Int) -> Void
  alias PFNGLPATHPARAMETERFVNVPROC = (Uint, Enum, Float*) -> Void
  alias PFNGLPATHPARAMETERFNVPROC = (Uint, Enum, Float) -> Void
  alias PFNGLPATHDASHARRAYNVPROC = (Uint, Sizei, Float*) -> Void
  alias PFNGLPATHSTENCILFUNCNVPROC = (Enum, Int, Uint) -> Void
  alias PFNGLPATHSTENCILDEPTHOFFSETNVPROC = (Float, Float) -> Void
  alias PFNGLSTENCILFILLPATHNVPROC = (Uint, Enum, Uint) -> Void
  alias PFNGLSTENCILSTROKEPATHNVPROC = (Uint, Int, Uint) -> Void
  alias PFNGLSTENCILFILLPATHINSTANCEDNVPROC = (Sizei, Enum, Void*, Uint, Enum, Uint, Enum, Float*) -> Void
  alias PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC = (Sizei, Enum, Void*, Uint, Int, Uint, Enum, Float*) -> Void
  alias PFNGLPATHCOVERDEPTHFUNCNVPROC = Enum -> Void
  alias PFNGLPATHCOLORGENNVPROC = (Enum, Enum, Enum, Float*) -> Void
  alias PFNGLPATHTEXGENNVPROC = (Enum, Enum, Int, Float*) -> Void
  alias PFNGLPATHFOGGENNVPROC = Enum -> Void
  alias PFNGLCOVERFILLPATHNVPROC = (Uint, Enum) -> Void
  alias PFNGLCOVERSTROKEPATHNVPROC = (Uint, Enum) -> Void
  alias PFNGLCOVERFILLPATHINSTANCEDNVPROC = (Sizei, Enum, Void*, Uint, Enum, Enum, Float*) -> Void
  alias PFNGLCOVERSTROKEPATHINSTANCEDNVPROC = (Sizei, Enum, Void*, Uint, Enum, Enum, Float*) -> Void
  alias PFNGLGETPATHPARAMETERIVNVPROC = (Uint, Enum, Int*) -> Void
  alias PFNGLGETPATHPARAMETERFVNVPROC = (Uint, Enum, Float*) -> Void
  alias PFNGLGETPATHCOMMANDSNVPROC = (Uint, Ubyte*) -> Void
  alias PFNGLGETPATHCOORDSNVPROC = (Uint, Float*) -> Void
  alias PFNGLGETPATHDASHARRAYNVPROC = (Uint, Float*) -> Void
  alias PFNGLGETPATHMETRICSNVPROC = (Bitfield, Sizei, Enum, Void*, Uint, Sizei, Float*) -> Void
  alias PFNGLGETPATHMETRICRANGENVPROC = (Bitfield, Uint, Sizei, Sizei, Float*) -> Void
  alias PFNGLGETPATHSPACINGNVPROC = (Enum, Sizei, Enum, Void*, Uint, Float, Float, Enum, Float*) -> Void
  alias PFNGLGETPATHCOLORGENIVNVPROC = (Enum, Enum, Int*) -> Void
  alias PFNGLGETPATHCOLORGENFVNVPROC = (Enum, Enum, Float*) -> Void
  alias PFNGLGETPATHTEXGENIVNVPROC = (Enum, Enum, Int*) -> Void
  alias PFNGLGETPATHTEXGENFVNVPROC = (Enum, Enum, Float*) -> Void
  alias PFNGLISPOINTINFILLPATHNVPROC = (Uint, Uint, Float, Float) -> Boolean
  alias PFNGLISPOINTINSTROKEPATHNVPROC = (Uint, Float, Float) -> Boolean
  alias PFNGLGETPATHLENGTHNVPROC = (Uint, Sizei, Sizei) -> Float
  alias PFNGLPOINTALONGPATHNVPROC = (Uint, Sizei, Sizei, Float, Float*, Float*, Float*, Float*) -> Boolean
  alias PFNGLMATRIXLOAD3X2FNVPROC = (Enum, Float*) -> Void
  alias PFNGLMATRIXLOAD3X3FNVPROC = (Enum, Float*) -> Void
  alias PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC = (Enum, Float*) -> Void
  alias PFNGLMATRIXMULT3X2FNVPROC = (Enum, Float*) -> Void
  alias PFNGLMATRIXMULT3X3FNVPROC = (Enum, Float*) -> Void
  alias PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC = (Enum, Float*) -> Void
  alias PFNGLSTENCILTHENCOVERFILLPATHNVPROC = (Uint, Enum, Uint, Enum) -> Void
  alias PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC = (Uint, Int, Uint, Enum) -> Void
  alias PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC = (Sizei, Enum, Void*, Uint, Enum, Uint, Enum, Enum, Float*) -> Void
  alias PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC = (Sizei, Enum, Void*, Uint, Int, Uint, Enum, Enum, Float*) -> Void
  alias PFNGLPATHGLYPHINDEXRANGENVPROC = (Enum, Void*, Bitfield, Uint, Float, Uint[2]) -> Enum
  alias PFNGLPATHGLYPHINDEXARRAYNVPROC = (Uint, Enum, Void*, Bitfield, Uint, Sizei, Uint, Float) -> Enum
  alias PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC = (Uint, Enum, Sizeiptr, Void*, Sizei, Uint, Sizei, Uint, Float) -> Enum
  alias PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC = (Uint, Int, Enum, Int, Float*) -> Void
  alias PFNGLGETPROGRAMRESOURCEFVNVPROC = (Uint, Enum, Uint, Sizei, Enum*, Sizei, Sizei*, Float*) -> Void
  NV_PIXEL_DATA_RANGE = 1
  WRITE_PIXEL_DATA_RANGE_NV = 0x8878_u32
  READ_PIXEL_DATA_RANGE_NV = 0x8879_u32
  WRITE_PIXEL_DATA_RANGE_LENGTH_NV = 0x887A_u32
  READ_PIXEL_DATA_RANGE_LENGTH_NV = 0x887B_u32
  WRITE_PIXEL_DATA_RANGE_POINTER_NV = 0x887C_u32
  READ_PIXEL_DATA_RANGE_POINTER_NV = 0x887D_u32
  alias PFNGLPIXELDATARANGENVPROC = (Enum, Sizei, Void*) -> Void
  alias PFNGLFLUSHPIXELDATARANGENVPROC = Enum -> Void
  NV_POINT_SPRITE = 1
  POINT_SPRITE_NV = 0x8861_u32
  COORD_REPLACE_NV = 0x8862_u32
  POINT_SPRITE_R_MODE_NV = 0x8863_u32
  alias PFNGLPOINTPARAMETERINVPROC = (Enum, Int) -> Void
  alias PFNGLPOINTPARAMETERIVNVPROC = (Enum, Int*) -> Void
  NV_PRESENT_VIDEO = 1
  FRAME_NV = 0x8E26_u32
  FIELDS_NV = 0x8E27_u32
  CURRENT_TIME_NV = 0x8E28_u32
  NUM_FILL_STREAMS_NV = 0x8E29_u32
  PRESENT_TIME_NV = 0x8E2A_u32
  PRESENT_DURATION_NV = 0x8E2B_u32
  alias PFNGLPRESENTFRAMEKEYEDNVPROC = (Uint, Uint64EXT, Uint, Uint, Enum, Enum, Uint, Uint, Enum, Uint, Uint) -> Void
  alias PFNGLPRESENTFRAMEDUALFILLNVPROC = (Uint, Uint64EXT, Uint, Uint, Enum, Enum, Uint, Enum, Uint, Enum, Uint, Enum, Uint) -> Void
  alias PFNGLGETVIDEOIVNVPROC = (Uint, Enum, Int*) -> Void
  alias PFNGLGETVIDEOUIVNVPROC = (Uint, Enum, Uint*) -> Void
  alias PFNGLGETVIDEOI64VNVPROC = (Uint, Enum, Int64EXT*) -> Void
  alias PFNGLGETVIDEOUI64VNVPROC = (Uint, Enum, Uint64EXT*) -> Void
  NV_PRIMITIVE_RESTART = 1
  PRIMITIVE_RESTART_NV = 0x8558_u32
  PRIMITIVE_RESTART_INDEX_NV = 0x8559_u32
  alias PFNGLPRIMITIVERESTARTNVPROC = -> Void
  alias PFNGLPRIMITIVERESTARTINDEXNVPROC = Uint -> Void
  NV_REGISTER_COMBINERS = 1
  REGISTER_COMBINERS_NV = 0x8522_u32
  VARIABLE_A_NV = 0x8523_u32
  VARIABLE_B_NV = 0x8524_u32
  VARIABLE_C_NV = 0x8525_u32
  VARIABLE_D_NV = 0x8526_u32
  VARIABLE_E_NV = 0x8527_u32
  VARIABLE_F_NV = 0x8528_u32
  VARIABLE_G_NV = 0x8529_u32
  CONSTANT_COLOR0_NV = 0x852A_u32
  CONSTANT_COLOR1_NV = 0x852B_u32
  SPARE0_NV = 0x852E_u32
  SPARE1_NV = 0x852F_u32
  DISCARD_NV = 0x8530_u32
  E_TIMES_F_NV = 0x8531_u32
  SPARE0_PLUS_SECONDARY_COLOR_NV = 0x8532_u32
  UNSIGNED_IDENTITY_NV = 0x8536_u32
  UNSIGNED_INVERT_NV = 0x8537_u32
  EXPAND_NORMAL_NV = 0x8538_u32
  EXPAND_NEGATE_NV = 0x8539_u32
  HALF_BIAS_NORMAL_NV = 0x853A_u32
  HALF_BIAS_NEGATE_NV = 0x853B_u32
  SIGNED_IDENTITY_NV = 0x853C_u32
  SIGNED_NEGATE_NV = 0x853D_u32
  SCALE_BY_TWO_NV = 0x853E_u32
  SCALE_BY_FOUR_NV = 0x853F_u32
  SCALE_BY_ONE_HALF_NV = 0x8540_u32
  BIAS_BY_NEGATIVE_ONE_HALF_NV = 0x8541_u32
  COMBINER_INPUT_NV = 0x8542_u32
  COMBINER_MAPPING_NV = 0x8543_u32
  COMBINER_COMPONENT_USAGE_NV = 0x8544_u32
  COMBINER_AB_DOT_PRODUCT_NV = 0x8545_u32
  COMBINER_CD_DOT_PRODUCT_NV = 0x8546_u32
  COMBINER_MUX_SUM_NV = 0x8547_u32
  COMBINER_SCALE_NV = 0x8548_u32
  COMBINER_BIAS_NV = 0x8549_u32
  COMBINER_AB_OUTPUT_NV = 0x854A_u32
  COMBINER_CD_OUTPUT_NV = 0x854B_u32
  COMBINER_SUM_OUTPUT_NV = 0x854C_u32
  MAX_GENERAL_COMBINERS_NV = 0x854D_u32
  NUM_GENERAL_COMBINERS_NV = 0x854E_u32
  COLOR_SUM_CLAMP_NV = 0x854F_u32
  COMBINER0_NV = 0x8550_u32
  COMBINER1_NV = 0x8551_u32
  COMBINER2_NV = 0x8552_u32
  COMBINER3_NV = 0x8553_u32
  COMBINER4_NV = 0x8554_u32
  COMBINER5_NV = 0x8555_u32
  COMBINER6_NV = 0x8556_u32
  COMBINER7_NV = 0x8557_u32
  alias PFNGLCOMBINERPARAMETERFVNVPROC = (Enum, Float*) -> Void
  alias PFNGLCOMBINERPARAMETERFNVPROC = (Enum, Float) -> Void
  alias PFNGLCOMBINERPARAMETERIVNVPROC = (Enum, Int*) -> Void
  alias PFNGLCOMBINERPARAMETERINVPROC = (Enum, Int) -> Void
  alias PFNGLCOMBINERINPUTNVPROC = (Enum, Enum, Enum, Enum, Enum, Enum) -> Void
  alias PFNGLCOMBINEROUTPUTNVPROC = (Enum, Enum, Enum, Enum, Enum, Enum, Enum, Boolean, Boolean, Boolean) -> Void
  alias PFNGLFINALCOMBINERINPUTNVPROC = (Enum, Enum, Enum, Enum) -> Void
  alias PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC = (Enum, Enum, Enum, Enum, Float*) -> Void
  alias PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC = (Enum, Enum, Enum, Enum, Int*) -> Void
  alias PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC = (Enum, Enum, Enum, Float*) -> Void
  alias PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC = (Enum, Enum, Enum, Int*) -> Void
  alias PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC = (Enum, Enum, Float*) -> Void
  alias PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC = (Enum, Enum, Int*) -> Void
  NV_REGISTER_COMBINERS2 = 1
  PER_STAGE_CONSTANTS_NV = 0x8535_u32
  alias PFNGLCOMBINERSTAGEPARAMETERFVNVPROC = (Enum, Enum, Float*) -> Void
  alias PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC = (Enum, Enum, Float*) -> Void
  NV_SHADER_ATOMIC_COUNTERS = 1
  NV_SHADER_ATOMIC_FLOAT = 1
  NV_SHADER_ATOMIC_INT64 = 1
  NV_SHADER_BUFFER_LOAD = 1
  BUFFER_GPU_ADDRESS_NV = 0x8F1D_u32
  GPU_ADDRESS_NV = 0x8F34_u32
  MAX_SHADER_BUFFER_ADDRESS_NV = 0x8F35_u32
  alias PFNGLMAKEBUFFERRESIDENTNVPROC = (Enum, Enum) -> Void
  alias PFNGLMAKEBUFFERNONRESIDENTNVPROC = Enum -> Void
  alias PFNGLISBUFFERRESIDENTNVPROC = Enum -> Boolean
  alias PFNGLMAKENAMEDBUFFERRESIDENTNVPROC = (Uint, Enum) -> Void
  alias PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC = Uint -> Void
  alias PFNGLISNAMEDBUFFERRESIDENTNVPROC = Uint -> Boolean
  alias PFNGLGETBUFFERPARAMETERUI64VNVPROC = (Enum, Enum, Uint64EXT*) -> Void
  alias PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC = (Uint, Enum, Uint64EXT*) -> Void
  alias PFNGLGETINTEGERUI64VNVPROC = (Enum, Uint64EXT*) -> Void
  alias PFNGLUNIFORMUI64NVPROC = (Int, Uint64EXT) -> Void
  alias PFNGLUNIFORMUI64VNVPROC = (Int, Sizei, Uint64EXT*) -> Void
  alias PFNGLPROGRAMUNIFORMUI64NVPROC = (Uint, Int, Uint64EXT) -> Void
  alias PFNGLPROGRAMUNIFORMUI64VNVPROC = (Uint, Int, Sizei, Uint64EXT*) -> Void
  NV_SHADER_BUFFER_STORE = 1
  SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV = 0x00000010_u32
  NV_SHADER_STORAGE_BUFFER_OBJECT = 1
  NV_SHADER_THREAD_GROUP = 1
  WARP_SIZE_NV = 0x9339_u32
  WARPS_PER_SM_NV = 0x933A_u32
  SM_COUNT_NV = 0x933B_u32
  NV_SHADER_THREAD_SHUFFLE = 1
  NV_TESSELLATION_PROGRAM5 = 1
  MAX_PROGRAM_PATCH_ATTRIBS_NV = 0x86D8_u32
  TESS_CONTROL_PROGRAM_NV = 0x891E_u32
  TESS_EVALUATION_PROGRAM_NV = 0x891F_u32
  TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV = 0x8C74_u32
  TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV = 0x8C75_u32
  NV_TEXGEN_EMBOSS = 1
  EMBOSS_LIGHT_NV = 0x855D_u32
  EMBOSS_CONSTANT_NV = 0x855E_u32
  EMBOSS_MAP_NV = 0x855F_u32
  NV_TEXGEN_REFLECTION = 1
  NORMAL_MAP_NV = 0x8511_u32
  REFLECTION_MAP_NV = 0x8512_u32
  NV_TEXTURE_BARRIER = 1
  alias PFNGLTEXTUREBARRIERNVPROC = -> Void
  NV_TEXTURE_COMPRESSION_VTC = 1
  NV_TEXTURE_ENV_COMBINE4 = 1
  COMBINE4_NV = 0x8503_u32
  SOURCE3_RGB_NV = 0x8583_u32
  SOURCE3_ALPHA_NV = 0x858B_u32
  OPERAND3_RGB_NV = 0x8593_u32
  OPERAND3_ALPHA_NV = 0x859B_u32
  NV_TEXTURE_EXPAND_NORMAL = 1
  TEXTURE_UNSIGNED_REMAP_MODE_NV = 0x888F_u32
  NV_TEXTURE_MULTISAMPLE = 1
  TEXTURE_COVERAGE_SAMPLES_NV = 0x9045_u32
  TEXTURE_COLOR_SAMPLES_NV = 0x9046_u32
  alias PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC = (Enum, Sizei, Sizei, Int, Sizei, Sizei, Boolean) -> Void
  alias PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC = (Enum, Sizei, Sizei, Int, Sizei, Sizei, Sizei, Boolean) -> Void
  alias PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC = (Uint, Enum, Sizei, Int, Sizei, Sizei, Boolean) -> Void
  alias PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC = (Uint, Enum, Sizei, Int, Sizei, Sizei, Sizei, Boolean) -> Void
  alias PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC = (Uint, Enum, Sizei, Sizei, Int, Sizei, Sizei, Boolean) -> Void
  alias PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC = (Uint, Enum, Sizei, Sizei, Int, Sizei, Sizei, Sizei, Boolean) -> Void
  NV_TEXTURE_RECTANGLE = 1
  TEXTURE_RECTANGLE_NV = 0x84F5_u32
  TEXTURE_BINDING_RECTANGLE_NV = 0x84F6_u32
  PROXY_TEXTURE_RECTANGLE_NV = 0x84F7_u32
  MAX_RECTANGLE_TEXTURE_SIZE_NV = 0x84F8_u32
  NV_TEXTURE_SHADER = 1
  OFFSET_TEXTURE_RECTANGLE_NV = 0x864C_u32
  OFFSET_TEXTURE_RECTANGLE_SCALE_NV = 0x864D_u32
  DOT_PRODUCT_TEXTURE_RECTANGLE_NV = 0x864E_u32
  RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV = 0x86D9_u32
  UNSIGNED_INT_S8_S8_8_8_NV = 0x86DA_u32
  UNSIGNED_INT_8_8_S8_S8_REV_NV = 0x86DB_u32
  DSDT_MAG_INTENSITY_NV = 0x86DC_u32
  SHADER_CONSISTENT_NV = 0x86DD_u32
  TEXTURE_SHADER_NV = 0x86DE_u32
  SHADER_OPERATION_NV = 0x86DF_u32
  CULL_MODES_NV = 0x86E0_u32
  OFFSET_TEXTURE_MATRIX_NV = 0x86E1_u32
  OFFSET_TEXTURE_SCALE_NV = 0x86E2_u32
  OFFSET_TEXTURE_BIAS_NV = 0x86E3_u32
  OFFSET_TEXTURE_2D_MATRIX_NV = 0x86E1_u32
  OFFSET_TEXTURE_2D_SCALE_NV = 0x86E2_u32
  OFFSET_TEXTURE_2D_BIAS_NV = 0x86E3_u32
  PREVIOUS_TEXTURE_INPUT_NV = 0x86E4_u32
  CONST_EYE_NV = 0x86E5_u32
  PASS_THROUGH_NV = 0x86E6_u32
  CULL_FRAGMENT_NV = 0x86E7_u32
  OFFSET_TEXTURE_2D_NV = 0x86E8_u32
  DEPENDENT_AR_TEXTURE_2D_NV = 0x86E9_u32
  DEPENDENT_GB_TEXTURE_2D_NV = 0x86EA_u32
  DOT_PRODUCT_NV = 0x86EC_u32
  DOT_PRODUCT_DEPTH_REPLACE_NV = 0x86ED_u32
  DOT_PRODUCT_TEXTURE_2D_NV = 0x86EE_u32
  DOT_PRODUCT_TEXTURE_CUBE_MAP_NV = 0x86F0_u32
  DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV = 0x86F1_u32
  DOT_PRODUCT_REFLECT_CUBE_MAP_NV = 0x86F2_u32
  DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV = 0x86F3_u32
  HILO_NV = 0x86F4_u32
  DSDT_NV = 0x86F5_u32
  DSDT_MAG_NV = 0x86F6_u32
  DSDT_MAG_VIB_NV = 0x86F7_u32
  HILO16_NV = 0x86F8_u32
  SIGNED_HILO_NV = 0x86F9_u32
  SIGNED_HILO16_NV = 0x86FA_u32
  SIGNED_RGBA_NV = 0x86FB_u32
  SIGNED_RGBA8_NV = 0x86FC_u32
  SIGNED_RGB_NV = 0x86FE_u32
  SIGNED_RGB8_NV = 0x86FF_u32
  SIGNED_LUMINANCE_NV = 0x8701_u32
  SIGNED_LUMINANCE8_NV = 0x8702_u32
  SIGNED_LUMINANCE_ALPHA_NV = 0x8703_u32
  SIGNED_LUMINANCE8_ALPHA8_NV = 0x8704_u32
  SIGNED_ALPHA_NV = 0x8705_u32
  SIGNED_ALPHA8_NV = 0x8706_u32
  SIGNED_INTENSITY_NV = 0x8707_u32
  SIGNED_INTENSITY8_NV = 0x8708_u32
  DSDT8_NV = 0x8709_u32
  DSDT8_MAG8_NV = 0x870A_u32
  DSDT8_MAG8_INTENSITY8_NV = 0x870B_u32
  SIGNED_RGB_UNSIGNED_ALPHA_NV = 0x870C_u32
  SIGNED_RGB8_UNSIGNED_ALPHA8_NV = 0x870D_u32
  HI_SCALE_NV = 0x870E_u32
  LO_SCALE_NV = 0x870F_u32
  DS_SCALE_NV = 0x8710_u32
  DT_SCALE_NV = 0x8711_u32
  MAGNITUDE_SCALE_NV = 0x8712_u32
  VIBRANCE_SCALE_NV = 0x8713_u32
  HI_BIAS_NV = 0x8714_u32
  LO_BIAS_NV = 0x8715_u32
  DS_BIAS_NV = 0x8716_u32
  DT_BIAS_NV = 0x8717_u32
  MAGNITUDE_BIAS_NV = 0x8718_u32
  VIBRANCE_BIAS_NV = 0x8719_u32
  TEXTURE_BORDER_VALUES_NV = 0x871A_u32
  TEXTURE_HI_SIZE_NV = 0x871B_u32
  TEXTURE_LO_SIZE_NV = 0x871C_u32
  TEXTURE_DS_SIZE_NV = 0x871D_u32
  TEXTURE_DT_SIZE_NV = 0x871E_u32
  TEXTURE_MAG_SIZE_NV = 0x871F_u32
  NV_TEXTURE_SHADER2 = 1
  DOT_PRODUCT_TEXTURE_3D_NV = 0x86EF_u32
  NV_TEXTURE_SHADER3 = 1
  OFFSET_PROJECTIVE_TEXTURE_2D_NV = 0x8850_u32
  OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV = 0x8851_u32
  OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV = 0x8852_u32
  OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV = 0x8853_u32
  OFFSET_HILO_TEXTURE_2D_NV = 0x8854_u32
  OFFSET_HILO_TEXTURE_RECTANGLE_NV = 0x8855_u32
  OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV = 0x8856_u32
  OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV = 0x8857_u32
  DEPENDENT_HILO_TEXTURE_2D_NV = 0x8858_u32
  DEPENDENT_RGB_TEXTURE_3D_NV = 0x8859_u32
  DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV = 0x885A_u32
  DOT_PRODUCT_PASS_THROUGH_NV = 0x885B_u32
  DOT_PRODUCT_TEXTURE_1D_NV = 0x885C_u32
  DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV = 0x885D_u32
  HILO8_NV = 0x885E_u32
  SIGNED_HILO8_NV = 0x885F_u32
  FORCE_BLUE_TO_ONE_NV = 0x8860_u32
  NV_TRANSFORM_FEEDBACK = 1
  BACK_PRIMARY_COLOR_NV = 0x8C77_u32
  BACK_SECONDARY_COLOR_NV = 0x8C78_u32
  TEXTURE_COORD_NV = 0x8C79_u32
  CLIP_DISTANCE_NV = 0x8C7A_u32
  VERTEX_ID_NV = 0x8C7B_u32
  PRIMITIVE_ID_NV = 0x8C7C_u32
  GENERIC_ATTRIB_NV = 0x8C7D_u32
  TRANSFORM_FEEDBACK_ATTRIBS_NV = 0x8C7E_u32
  TRANSFORM_FEEDBACK_BUFFER_MODE_NV = 0x8C7F_u32
  MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV = 0x8C80_u32
  ACTIVE_VARYINGS_NV = 0x8C81_u32
  ACTIVE_VARYING_MAX_LENGTH_NV = 0x8C82_u32
  TRANSFORM_FEEDBACK_VARYINGS_NV = 0x8C83_u32
  TRANSFORM_FEEDBACK_BUFFER_START_NV = 0x8C84_u32
  TRANSFORM_FEEDBACK_BUFFER_SIZE_NV = 0x8C85_u32
  TRANSFORM_FEEDBACK_RECORD_NV = 0x8C86_u32
  PRIMITIVES_GENERATED_NV = 0x8C87_u32
  TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV = 0x8C88_u32
  RASTERIZER_DISCARD_NV = 0x8C89_u32
  MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV = 0x8C8A_u32
  MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV = 0x8C8B_u32
  INTERLEAVED_ATTRIBS_NV = 0x8C8C_u32
  SEPARATE_ATTRIBS_NV = 0x8C8D_u32
  TRANSFORM_FEEDBACK_BUFFER_NV = 0x8C8E_u32
  TRANSFORM_FEEDBACK_BUFFER_BINDING_NV = 0x8C8F_u32
  LAYER_NV = 0x8DAA_u32
  NEXT_BUFFER_NV = -2
  SKIP_COMPONENTS4_NV = -3
  SKIP_COMPONENTS3_NV = -4
  SKIP_COMPONENTS2_NV = -5
  SKIP_COMPONENTS1_NV = -6
  alias PFNGLBEGINTRANSFORMFEEDBACKNVPROC = Enum -> Void
  alias PFNGLENDTRANSFORMFEEDBACKNVPROC = -> Void
  alias PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC = (Sizei, Int*, Enum) -> Void
  alias PFNGLBINDBUFFERRANGENVPROC = (Enum, Uint, Uint, Intptr, Sizeiptr) -> Void
  alias PFNGLBINDBUFFEROFFSETNVPROC = (Enum, Uint, Uint, Intptr) -> Void
  alias PFNGLBINDBUFFERBASENVPROC = (Enum, Uint, Uint) -> Void
  alias PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC = (Uint, Sizei, Int*, Enum) -> Void
  alias PFNGLACTIVEVARYINGNVPROC = (Uint, Char*) -> Void
  alias PFNGLGETVARYINGLOCATIONNVPROC = (Uint, Char*) -> Int
  alias PFNGLGETACTIVEVARYINGNVPROC = (Uint, Uint, Sizei, Sizei*, Sizei*, Enum*, Char*) -> Void
  alias PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC = (Uint, Uint, Int*) -> Void
  alias PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC = (Sizei, Int*, Sizei, Int*, Enum) -> Void
  NV_TRANSFORM_FEEDBACK2 = 1
  TRANSFORM_FEEDBACK_NV = 0x8E22_u32
  TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV = 0x8E23_u32
  TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV = 0x8E24_u32
  TRANSFORM_FEEDBACK_BINDING_NV = 0x8E25_u32
  alias PFNGLBINDTRANSFORMFEEDBACKNVPROC = (Enum, Uint) -> Void
  alias PFNGLDELETETRANSFORMFEEDBACKSNVPROC = (Sizei, Uint*) -> Void
  alias PFNGLGENTRANSFORMFEEDBACKSNVPROC = (Sizei, Uint*) -> Void
  alias PFNGLISTRANSFORMFEEDBACKNVPROC = Uint -> Boolean
  alias PFNGLPAUSETRANSFORMFEEDBACKNVPROC = -> Void
  alias PFNGLRESUMETRANSFORMFEEDBACKNVPROC = -> Void
  alias PFNGLDRAWTRANSFORMFEEDBACKNVPROC = (Enum, Uint) -> Void
  NV_VDPAU_INTEROP = 1
  alias VdpauSurfaceNV = Intptr
  SURFACE_STATE_NV = 0x86EB_u32
  SURFACE_REGISTERED_NV = 0x86FD_u32
  SURFACE_MAPPED_NV = 0x8700_u32
  WRITE_DISCARD_NV = 0x88BE_u32
  alias PFNGLVDPAUINITNVPROC = (Void*, Void*) -> Void
  alias PFNGLVDPAUFININVPROC = -> Void
  alias PFNGLVDPAUREGISTERVIDEOSURFACENVPROC = (Void*, Enum, Sizei, Uint*) -> VdpauSurfaceNV
  alias PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC = (Void*, Enum, Sizei, Uint*) -> VdpauSurfaceNV
  alias PFNGLVDPAUISSURFACENVPROC = VdpauSurfaceNV -> Boolean
  alias PFNGLVDPAUUNREGISTERSURFACENVPROC = VdpauSurfaceNV -> Void
  alias PFNGLVDPAUGETSURFACEIVNVPROC = (VdpauSurfaceNV, Enum, Sizei, Sizei*, Int*) -> Void
  alias PFNGLVDPAUSURFACEACCESSNVPROC = (VdpauSurfaceNV, Enum) -> Void
  alias PFNGLVDPAUMAPSURFACESNVPROC = (Sizei, VdpauSurfaceNV*) -> Void
  alias PFNGLVDPAUUNMAPSURFACESNVPROC = (Sizei, VdpauSurfaceNV*) -> Void
  NV_VERTEX_ARRAY_RANGE = 1
  VERTEX_ARRAY_RANGE_NV = 0x851D_u32
  VERTEX_ARRAY_RANGE_LENGTH_NV = 0x851E_u32
  VERTEX_ARRAY_RANGE_VALID_NV = 0x851F_u32
  MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV = 0x8520_u32
  VERTEX_ARRAY_RANGE_POINTER_NV = 0x8521_u32
  alias PFNGLFLUSHVERTEXARRAYRANGENVPROC = -> Void
  alias PFNGLVERTEXARRAYRANGENVPROC = (Sizei, Void*) -> Void
  NV_VERTEX_ARRAY_RANGE2 = 1
  VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV = 0x8533_u32
  NV_VERTEX_ATTRIB_INTEGER_64BIT = 1
  alias PFNGLVERTEXATTRIBL1I64NVPROC = (Uint, Int64EXT) -> Void
  alias PFNGLVERTEXATTRIBL2I64NVPROC = (Uint, Int64EXT, Int64EXT) -> Void
  alias PFNGLVERTEXATTRIBL3I64NVPROC = (Uint, Int64EXT, Int64EXT, Int64EXT) -> Void
  alias PFNGLVERTEXATTRIBL4I64NVPROC = (Uint, Int64EXT, Int64EXT, Int64EXT, Int64EXT) -> Void
  alias PFNGLVERTEXATTRIBL1I64VNVPROC = (Uint, Int64EXT*) -> Void
  alias PFNGLVERTEXATTRIBL2I64VNVPROC = (Uint, Int64EXT*) -> Void
  alias PFNGLVERTEXATTRIBL3I64VNVPROC = (Uint, Int64EXT*) -> Void
  alias PFNGLVERTEXATTRIBL4I64VNVPROC = (Uint, Int64EXT*) -> Void
  alias PFNGLVERTEXATTRIBL1UI64NVPROC = (Uint, Uint64EXT) -> Void
  alias PFNGLVERTEXATTRIBL2UI64NVPROC = (Uint, Uint64EXT, Uint64EXT) -> Void
  alias PFNGLVERTEXATTRIBL3UI64NVPROC = (Uint, Uint64EXT, Uint64EXT, Uint64EXT) -> Void
  alias PFNGLVERTEXATTRIBL4UI64NVPROC = (Uint, Uint64EXT, Uint64EXT, Uint64EXT, Uint64EXT) -> Void
  alias PFNGLVERTEXATTRIBL1UI64VNVPROC = (Uint, Uint64EXT*) -> Void
  alias PFNGLVERTEXATTRIBL2UI64VNVPROC = (Uint, Uint64EXT*) -> Void
  alias PFNGLVERTEXATTRIBL3UI64VNVPROC = (Uint, Uint64EXT*) -> Void
  alias PFNGLVERTEXATTRIBL4UI64VNVPROC = (Uint, Uint64EXT*) -> Void
  alias PFNGLGETVERTEXATTRIBLI64VNVPROC = (Uint, Enum, Int64EXT*) -> Void
  alias PFNGLGETVERTEXATTRIBLUI64VNVPROC = (Uint, Enum, Uint64EXT*) -> Void
  alias PFNGLVERTEXATTRIBLFORMATNVPROC = (Uint, Int, Enum, Sizei) -> Void
  NV_VERTEX_BUFFER_UNIFIED_MEMORY = 1
  VERTEX_ATTRIB_ARRAY_UNIFIED_NV = 0x8F1E_u32
  ELEMENT_ARRAY_UNIFIED_NV = 0x8F1F_u32
  VERTEX_ATTRIB_ARRAY_ADDRESS_NV = 0x8F20_u32
  VERTEX_ARRAY_ADDRESS_NV = 0x8F21_u32
  NORMAL_ARRAY_ADDRESS_NV = 0x8F22_u32
  COLOR_ARRAY_ADDRESS_NV = 0x8F23_u32
  INDEX_ARRAY_ADDRESS_NV = 0x8F24_u32
  TEXTURE_COORD_ARRAY_ADDRESS_NV = 0x8F25_u32
  EDGE_FLAG_ARRAY_ADDRESS_NV = 0x8F26_u32
  SECONDARY_COLOR_ARRAY_ADDRESS_NV = 0x8F27_u32
  FOG_COORD_ARRAY_ADDRESS_NV = 0x8F28_u32
  ELEMENT_ARRAY_ADDRESS_NV = 0x8F29_u32
  VERTEX_ATTRIB_ARRAY_LENGTH_NV = 0x8F2A_u32
  VERTEX_ARRAY_LENGTH_NV = 0x8F2B_u32
  NORMAL_ARRAY_LENGTH_NV = 0x8F2C_u32
  COLOR_ARRAY_LENGTH_NV = 0x8F2D_u32
  INDEX_ARRAY_LENGTH_NV = 0x8F2E_u32
  TEXTURE_COORD_ARRAY_LENGTH_NV = 0x8F2F_u32
  EDGE_FLAG_ARRAY_LENGTH_NV = 0x8F30_u32
  SECONDARY_COLOR_ARRAY_LENGTH_NV = 0x8F31_u32
  FOG_COORD_ARRAY_LENGTH_NV = 0x8F32_u32
  ELEMENT_ARRAY_LENGTH_NV = 0x8F33_u32
  DRAW_INDIRECT_UNIFIED_NV = 0x8F40_u32
  DRAW_INDIRECT_ADDRESS_NV = 0x8F41_u32
  DRAW_INDIRECT_LENGTH_NV = 0x8F42_u32
  alias PFNGLBUFFERADDRESSRANGENVPROC = (Enum, Uint, Uint64EXT, Sizeiptr) -> Void
  alias PFNGLVERTEXFORMATNVPROC = (Int, Enum, Sizei) -> Void
  alias PFNGLNORMALFORMATNVPROC = (Enum, Sizei) -> Void
  alias PFNGLCOLORFORMATNVPROC = (Int, Enum, Sizei) -> Void
  alias PFNGLINDEXFORMATNVPROC = (Enum, Sizei) -> Void
  alias PFNGLTEXCOORDFORMATNVPROC = (Int, Enum, Sizei) -> Void
  alias PFNGLEDGEFLAGFORMATNVPROC = Sizei -> Void
  alias PFNGLSECONDARYCOLORFORMATNVPROC = (Int, Enum, Sizei) -> Void
  alias PFNGLFOGCOORDFORMATNVPROC = (Enum, Sizei) -> Void
  alias PFNGLVERTEXATTRIBFORMATNVPROC = (Uint, Int, Enum, Boolean, Sizei) -> Void
  alias PFNGLVERTEXATTRIBIFORMATNVPROC = (Uint, Int, Enum, Sizei) -> Void
  alias PFNGLGETINTEGERUI64IVNVPROC = (Enum, Uint, Uint64EXT*) -> Void
  NV_VERTEX_PROGRAM = 1
  VERTEX_PROGRAM_NV = 0x8620_u32
  VERTEX_STATE_PROGRAM_NV = 0x8621_u32
  ATTRIB_ARRAY_SIZE_NV = 0x8623_u32
  ATTRIB_ARRAY_STRIDE_NV = 0x8624_u32
  ATTRIB_ARRAY_TYPE_NV = 0x8625_u32
  CURRENT_ATTRIB_NV = 0x8626_u32
  PROGRAM_LENGTH_NV = 0x8627_u32
  PROGRAM_STRING_NV = 0x8628_u32
  MODELVIEW_PROJECTION_NV = 0x8629_u32
  IDENTITY_NV = 0x862A_u32
  INVERSE_NV = 0x862B_u32
  TRANSPOSE_NV = 0x862C_u32
  INVERSE_TRANSPOSE_NV = 0x862D_u32
  MAX_TRACK_MATRIX_STACK_DEPTH_NV = 0x862E_u32
  MAX_TRACK_MATRICES_NV = 0x862F_u32
  MATRIX0_NV = 0x8630_u32
  MATRIX1_NV = 0x8631_u32
  MATRIX2_NV = 0x8632_u32
  MATRIX3_NV = 0x8633_u32
  MATRIX4_NV = 0x8634_u32
  MATRIX5_NV = 0x8635_u32
  MATRIX6_NV = 0x8636_u32
  MATRIX7_NV = 0x8637_u32
  CURRENT_MATRIX_STACK_DEPTH_NV = 0x8640_u32
  CURRENT_MATRIX_NV = 0x8641_u32
  VERTEX_PROGRAM_POINT_SIZE_NV = 0x8642_u32
  VERTEX_PROGRAM_TWO_SIDE_NV = 0x8643_u32
  PROGRAM_PARAMETER_NV = 0x8644_u32
  ATTRIB_ARRAY_POINTER_NV = 0x8645_u32
  PROGRAM_TARGET_NV = 0x8646_u32
  PROGRAM_RESIDENT_NV = 0x8647_u32
  TRACK_MATRIX_NV = 0x8648_u32
  TRACK_MATRIX_TRANSFORM_NV = 0x8649_u32
  VERTEX_PROGRAM_BINDING_NV = 0x864A_u32
  PROGRAM_ERROR_POSITION_NV = 0x864B_u32
  VERTEX_ATTRIB_ARRAY0_NV = 0x8650_u32
  VERTEX_ATTRIB_ARRAY1_NV = 0x8651_u32
  VERTEX_ATTRIB_ARRAY2_NV = 0x8652_u32
  VERTEX_ATTRIB_ARRAY3_NV = 0x8653_u32
  VERTEX_ATTRIB_ARRAY4_NV = 0x8654_u32
  VERTEX_ATTRIB_ARRAY5_NV = 0x8655_u32
  VERTEX_ATTRIB_ARRAY6_NV = 0x8656_u32
  VERTEX_ATTRIB_ARRAY7_NV = 0x8657_u32
  VERTEX_ATTRIB_ARRAY8_NV = 0x8658_u32
  VERTEX_ATTRIB_ARRAY9_NV = 0x8659_u32
  VERTEX_ATTRIB_ARRAY10_NV = 0x865A_u32
  VERTEX_ATTRIB_ARRAY11_NV = 0x865B_u32
  VERTEX_ATTRIB_ARRAY12_NV = 0x865C_u32
  VERTEX_ATTRIB_ARRAY13_NV = 0x865D_u32
  VERTEX_ATTRIB_ARRAY14_NV = 0x865E_u32
  VERTEX_ATTRIB_ARRAY15_NV = 0x865F_u32
  MAP1_VERTEX_ATTRIB0_4_NV = 0x8660_u32
  MAP1_VERTEX_ATTRIB1_4_NV = 0x8661_u32
  MAP1_VERTEX_ATTRIB2_4_NV = 0x8662_u32
  MAP1_VERTEX_ATTRIB3_4_NV = 0x8663_u32
  MAP1_VERTEX_ATTRIB4_4_NV = 0x8664_u32
  MAP1_VERTEX_ATTRIB5_4_NV = 0x8665_u32
  MAP1_VERTEX_ATTRIB6_4_NV = 0x8666_u32
  MAP1_VERTEX_ATTRIB7_4_NV = 0x8667_u32
  MAP1_VERTEX_ATTRIB8_4_NV = 0x8668_u32
  MAP1_VERTEX_ATTRIB9_4_NV = 0x8669_u32
  MAP1_VERTEX_ATTRIB10_4_NV = 0x866A_u32
  MAP1_VERTEX_ATTRIB11_4_NV = 0x866B_u32
  MAP1_VERTEX_ATTRIB12_4_NV = 0x866C_u32
  MAP1_VERTEX_ATTRIB13_4_NV = 0x866D_u32
  MAP1_VERTEX_ATTRIB14_4_NV = 0x866E_u32
  MAP1_VERTEX_ATTRIB15_4_NV = 0x866F_u32
  MAP2_VERTEX_ATTRIB0_4_NV = 0x8670_u32
  MAP2_VERTEX_ATTRIB1_4_NV = 0x8671_u32
  MAP2_VERTEX_ATTRIB2_4_NV = 0x8672_u32
  MAP2_VERTEX_ATTRIB3_4_NV = 0x8673_u32
  MAP2_VERTEX_ATTRIB4_4_NV = 0x8674_u32
  MAP2_VERTEX_ATTRIB5_4_NV = 0x8675_u32
  MAP2_VERTEX_ATTRIB6_4_NV = 0x8676_u32
  MAP2_VERTEX_ATTRIB7_4_NV = 0x8677_u32
  MAP2_VERTEX_ATTRIB8_4_NV = 0x8678_u32
  MAP2_VERTEX_ATTRIB9_4_NV = 0x8679_u32
  MAP2_VERTEX_ATTRIB10_4_NV = 0x867A_u32
  MAP2_VERTEX_ATTRIB11_4_NV = 0x867B_u32
  MAP2_VERTEX_ATTRIB12_4_NV = 0x867C_u32
  MAP2_VERTEX_ATTRIB13_4_NV = 0x867D_u32
  MAP2_VERTEX_ATTRIB14_4_NV = 0x867E_u32
  MAP2_VERTEX_ATTRIB15_4_NV = 0x867F_u32
  alias PFNGLAREPROGRAMSRESIDENTNVPROC = (Sizei, Uint*, Boolean*) -> Boolean
  alias PFNGLBINDPROGRAMNVPROC = (Enum, Uint) -> Void
  alias PFNGLDELETEPROGRAMSNVPROC = (Sizei, Uint*) -> Void
  alias PFNGLEXECUTEPROGRAMNVPROC = (Enum, Uint, Float*) -> Void
  alias PFNGLGENPROGRAMSNVPROC = (Sizei, Uint*) -> Void
  alias PFNGLGETPROGRAMPARAMETERDVNVPROC = (Enum, Uint, Enum, Double*) -> Void
  alias PFNGLGETPROGRAMPARAMETERFVNVPROC = (Enum, Uint, Enum, Float*) -> Void
  alias PFNGLGETPROGRAMIVNVPROC = (Uint, Enum, Int*) -> Void
  alias PFNGLGETPROGRAMSTRINGNVPROC = (Uint, Enum, Ubyte*) -> Void
  alias PFNGLGETTRACKMATRIXIVNVPROC = (Enum, Uint, Enum, Int*) -> Void
  alias PFNGLGETVERTEXATTRIBDVNVPROC = (Uint, Enum, Double*) -> Void
  alias PFNGLGETVERTEXATTRIBFVNVPROC = (Uint, Enum, Float*) -> Void
  alias PFNGLGETVERTEXATTRIBIVNVPROC = (Uint, Enum, Int*) -> Void
  alias PFNGLGETVERTEXATTRIBPOINTERVNVPROC = (Uint, Enum, Void**) -> Void
  alias PFNGLISPROGRAMNVPROC = Uint -> Boolean
  alias PFNGLLOADPROGRAMNVPROC = (Enum, Uint, Sizei, Ubyte*) -> Void
  alias PFNGLPROGRAMPARAMETER4DNVPROC = (Enum, Uint, Double, Double, Double, Double) -> Void
  alias PFNGLPROGRAMPARAMETER4DVNVPROC = (Enum, Uint, Double*) -> Void
  alias PFNGLPROGRAMPARAMETER4FNVPROC = (Enum, Uint, Float, Float, Float, Float) -> Void
  alias PFNGLPROGRAMPARAMETER4FVNVPROC = (Enum, Uint, Float*) -> Void
  alias PFNGLPROGRAMPARAMETERS4DVNVPROC = (Enum, Uint, Sizei, Double*) -> Void
  alias PFNGLPROGRAMPARAMETERS4FVNVPROC = (Enum, Uint, Sizei, Float*) -> Void
  alias PFNGLREQUESTRESIDENTPROGRAMSNVPROC = (Sizei, Uint*) -> Void
  alias PFNGLTRACKMATRIXNVPROC = (Enum, Uint, Enum, Enum) -> Void
  alias PFNGLVERTEXATTRIBPOINTERNVPROC = (Uint, Int, Enum, Sizei, Void*) -> Void
  alias PFNGLVERTEXATTRIB1DNVPROC = (Uint, Double) -> Void
  alias PFNGLVERTEXATTRIB1DVNVPROC = (Uint, Double*) -> Void
  alias PFNGLVERTEXATTRIB1FNVPROC = (Uint, Float) -> Void
  alias PFNGLVERTEXATTRIB1FVNVPROC = (Uint, Float*) -> Void
  alias PFNGLVERTEXATTRIB1SNVPROC = (Uint, Short) -> Void
  alias PFNGLVERTEXATTRIB1SVNVPROC = (Uint, Short*) -> Void
  alias PFNGLVERTEXATTRIB2DNVPROC = (Uint, Double, Double) -> Void
  alias PFNGLVERTEXATTRIB2DVNVPROC = (Uint, Double*) -> Void
  alias PFNGLVERTEXATTRIB2FNVPROC = (Uint, Float, Float) -> Void
  alias PFNGLVERTEXATTRIB2FVNVPROC = (Uint, Float*) -> Void
  alias PFNGLVERTEXATTRIB2SNVPROC = (Uint, Short, Short) -> Void
  alias PFNGLVERTEXATTRIB2SVNVPROC = (Uint, Short*) -> Void
  alias PFNGLVERTEXATTRIB3DNVPROC = (Uint, Double, Double, Double) -> Void
  alias PFNGLVERTEXATTRIB3DVNVPROC = (Uint, Double*) -> Void
  alias PFNGLVERTEXATTRIB3FNVPROC = (Uint, Float, Float, Float) -> Void
  alias PFNGLVERTEXATTRIB3FVNVPROC = (Uint, Float*) -> Void
  alias PFNGLVERTEXATTRIB3SNVPROC = (Uint, Short, Short, Short) -> Void
  alias PFNGLVERTEXATTRIB3SVNVPROC = (Uint, Short*) -> Void
  alias PFNGLVERTEXATTRIB4DNVPROC = (Uint, Double, Double, Double, Double) -> Void
  alias PFNGLVERTEXATTRIB4DVNVPROC = (Uint, Double*) -> Void
  alias PFNGLVERTEXATTRIB4FNVPROC = (Uint, Float, Float, Float, Float) -> Void
  alias PFNGLVERTEXATTRIB4FVNVPROC = (Uint, Float*) -> Void
  alias PFNGLVERTEXATTRIB4SNVPROC = (Uint, Short, Short, Short, Short) -> Void
  alias PFNGLVERTEXATTRIB4SVNVPROC = (Uint, Short*) -> Void
  alias PFNGLVERTEXATTRIB4UBNVPROC = (Uint, Ubyte, Ubyte, Ubyte, Ubyte) -> Void
  alias PFNGLVERTEXATTRIB4UBVNVPROC = (Uint, Ubyte*) -> Void
  alias PFNGLVERTEXATTRIBS1DVNVPROC = (Uint, Sizei, Double*) -> Void
  alias PFNGLVERTEXATTRIBS1FVNVPROC = (Uint, Sizei, Float*) -> Void
  alias PFNGLVERTEXATTRIBS1SVNVPROC = (Uint, Sizei, Short*) -> Void
  alias PFNGLVERTEXATTRIBS2DVNVPROC = (Uint, Sizei, Double*) -> Void
  alias PFNGLVERTEXATTRIBS2FVNVPROC = (Uint, Sizei, Float*) -> Void
  alias PFNGLVERTEXATTRIBS2SVNVPROC = (Uint, Sizei, Short*) -> Void
  alias PFNGLVERTEXATTRIBS3DVNVPROC = (Uint, Sizei, Double*) -> Void
  alias PFNGLVERTEXATTRIBS3FVNVPROC = (Uint, Sizei, Float*) -> Void
  alias PFNGLVERTEXATTRIBS3SVNVPROC = (Uint, Sizei, Short*) -> Void
  alias PFNGLVERTEXATTRIBS4DVNVPROC = (Uint, Sizei, Double*) -> Void
  alias PFNGLVERTEXATTRIBS4FVNVPROC = (Uint, Sizei, Float*) -> Void
  alias PFNGLVERTEXATTRIBS4SVNVPROC = (Uint, Sizei, Short*) -> Void
  alias PFNGLVERTEXATTRIBS4UBVNVPROC = (Uint, Sizei, Ubyte*) -> Void
  NV_VERTEX_PROGRAM1_1 = 1
  NV_VERTEX_PROGRAM2 = 1
  NV_VERTEX_PROGRAM2_OPTION = 1
  NV_VERTEX_PROGRAM3 = 1
  NV_VERTEX_PROGRAM4 = 1
  VERTEX_ATTRIB_ARRAY_INTEGER_NV = 0x88FD_u32
  alias PFNGLVERTEXATTRIBI1IEXTPROC = (Uint, Int) -> Void
  alias PFNGLVERTEXATTRIBI2IEXTPROC = (Uint, Int, Int) -> Void
  alias PFNGLVERTEXATTRIBI3IEXTPROC = (Uint, Int, Int, Int) -> Void
  alias PFNGLVERTEXATTRIBI4IEXTPROC = (Uint, Int, Int, Int, Int) -> Void
  alias PFNGLVERTEXATTRIBI1UIEXTPROC = (Uint, Uint) -> Void
  alias PFNGLVERTEXATTRIBI2UIEXTPROC = (Uint, Uint, Uint) -> Void
  alias PFNGLVERTEXATTRIBI3UIEXTPROC = (Uint, Uint, Uint, Uint) -> Void
  alias PFNGLVERTEXATTRIBI4UIEXTPROC = (Uint, Uint, Uint, Uint, Uint) -> Void
  alias PFNGLVERTEXATTRIBI1IVEXTPROC = (Uint, Int*) -> Void
  alias PFNGLVERTEXATTRIBI2IVEXTPROC = (Uint, Int*) -> Void
  alias PFNGLVERTEXATTRIBI3IVEXTPROC = (Uint, Int*) -> Void
  alias PFNGLVERTEXATTRIBI4IVEXTPROC = (Uint, Int*) -> Void
  alias PFNGLVERTEXATTRIBI1UIVEXTPROC = (Uint, Uint*) -> Void
  alias PFNGLVERTEXATTRIBI2UIVEXTPROC = (Uint, Uint*) -> Void
  alias PFNGLVERTEXATTRIBI3UIVEXTPROC = (Uint, Uint*) -> Void
  alias PFNGLVERTEXATTRIBI4UIVEXTPROC = (Uint, Uint*) -> Void
  alias PFNGLVERTEXATTRIBI4BVEXTPROC = (Uint, Byte*) -> Void
  alias PFNGLVERTEXATTRIBI4SVEXTPROC = (Uint, Short*) -> Void
  alias PFNGLVERTEXATTRIBI4UBVEXTPROC = (Uint, Ubyte*) -> Void
  alias PFNGLVERTEXATTRIBI4USVEXTPROC = (Uint, Ushort*) -> Void
  alias PFNGLVERTEXATTRIBIPOINTEREXTPROC = (Uint, Int, Enum, Sizei, Void*) -> Void
  alias PFNGLGETVERTEXATTRIBIIVEXTPROC = (Uint, Enum, Int*) -> Void
  alias PFNGLGETVERTEXATTRIBIUIVEXTPROC = (Uint, Enum, Uint*) -> Void
  NV_VIDEO_CAPTURE = 1
  VIDEO_BUFFER_NV = 0x9020_u32
  VIDEO_BUFFER_BINDING_NV = 0x9021_u32
  FIELD_UPPER_NV = 0x9022_u32
  FIELD_LOWER_NV = 0x9023_u32
  NUM_VIDEO_CAPTURE_STREAMS_NV = 0x9024_u32
  NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV = 0x9025_u32
  VIDEO_CAPTURE_TO_422_SUPPORTED_NV = 0x9026_u32
  LAST_VIDEO_CAPTURE_STATUS_NV = 0x9027_u32
  VIDEO_BUFFER_PITCH_NV = 0x9028_u32
  VIDEO_COLOR_CONVERSION_MATRIX_NV = 0x9029_u32
  VIDEO_COLOR_CONVERSION_MAX_NV = 0x902A_u32
  VIDEO_COLOR_CONVERSION_MIN_NV = 0x902B_u32
  VIDEO_COLOR_CONVERSION_OFFSET_NV = 0x902C_u32
  VIDEO_BUFFER_INTERNAL_FORMAT_NV = 0x902D_u32
  PARTIAL_SUCCESS_NV = 0x902E_u32
  SUCCESS_NV = 0x902F_u32
  FAILURE_NV = 0x9030_u32
  YCBYCR8_422_NV = 0x9031_u32
  YCBAYCR8A_4224_NV = 0x9032_u32
  Z6Y10Z6CB10Z6Y10Z6CR10_422_NV = 0x9033_u32
  Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV = 0x9034_u32
  Z4Y12Z4CB12Z4Y12Z4CR12_422_NV = 0x9035_u32
  Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV = 0x9036_u32
  Z4Y12Z4CB12Z4CR12_444_NV = 0x9037_u32
  VIDEO_CAPTURE_FRAME_WIDTH_NV = 0x9038_u32
  VIDEO_CAPTURE_FRAME_HEIGHT_NV = 0x9039_u32
  VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV = 0x903A_u32
  VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV = 0x903B_u32
  VIDEO_CAPTURE_SURFACE_ORIGIN_NV = 0x903C_u32
  alias PFNGLBEGINVIDEOCAPTURENVPROC = Uint -> Void
  alias PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC = (Uint, Uint, Enum, IntptrARB) -> Void
  alias PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC = (Uint, Uint, Enum, Enum, Uint) -> Void
  alias PFNGLENDVIDEOCAPTURENVPROC = Uint -> Void
  alias PFNGLGETVIDEOCAPTUREIVNVPROC = (Uint, Enum, Int*) -> Void
  alias PFNGLGETVIDEOCAPTURESTREAMIVNVPROC = (Uint, Uint, Enum, Int*) -> Void
  alias PFNGLGETVIDEOCAPTURESTREAMFVNVPROC = (Uint, Uint, Enum, Float*) -> Void
  alias PFNGLGETVIDEOCAPTURESTREAMDVNVPROC = (Uint, Uint, Enum, Double*) -> Void
  alias PFNGLVIDEOCAPTURENVPROC = (Uint, Uint*, Uint64EXT*) -> Enum
  alias PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC = (Uint, Uint, Enum, Int*) -> Void
  alias PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC = (Uint, Uint, Enum, Float*) -> Void
  alias PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC = (Uint, Uint, Enum, Double*) -> Void
  OML_INTERLACE = 1
  INTERLACE_OML = 0x8980_u32
  INTERLACE_READ_OML = 0x8981_u32
  OML_RESAMPLE = 1
  PACK_RESAMPLE_OML = 0x8984_u32
  UNPACK_RESAMPLE_OML = 0x8985_u32
  RESAMPLE_REPLICATE_OML = 0x8986_u32
  RESAMPLE_ZERO_FILL_OML = 0x8987_u32
  RESAMPLE_AVERAGE_OML = 0x8988_u32
  RESAMPLE_DECIMATE_OML = 0x8989_u32
  OML_SUBSAMPLE = 1
  FORMAT_SUBSAMPLE_24_24_OML = 0x8982_u32
  FORMAT_SUBSAMPLE_244_244_OML = 0x8983_u32
  PGI_MISC_HINTS = 1
  PREFER_DOUBLEBUFFER_HINT_PGI = 0x1A1F8_u32
  CONSERVE_MEMORY_HINT_PGI = 0x1A1FD_u32
  RECLAIM_MEMORY_HINT_PGI = 0x1A1FE_u32
  NATIVE_GRAPHICS_HANDLE_PGI = 0x1A202_u32
  NATIVE_GRAPHICS_BEGIN_HINT_PGI = 0x1A203_u32
  NATIVE_GRAPHICS_END_HINT_PGI = 0x1A204_u32
  ALWAYS_FAST_HINT_PGI = 0x1A20C_u32
  ALWAYS_SOFT_HINT_PGI = 0x1A20D_u32
  ALLOW_DRAW_OBJ_HINT_PGI = 0x1A20E_u32
  ALLOW_DRAW_WIN_HINT_PGI = 0x1A20F_u32
  ALLOW_DRAW_FRG_HINT_PGI = 0x1A210_u32
  ALLOW_DRAW_MEM_HINT_PGI = 0x1A211_u32
  STRICT_DEPTHFUNC_HINT_PGI = 0x1A216_u32
  STRICT_LIGHTING_HINT_PGI = 0x1A217_u32
  STRICT_SCISSOR_HINT_PGI = 0x1A218_u32
  FULL_STIPPLE_HINT_PGI = 0x1A219_u32
  CLIP_NEAR_HINT_PGI = 0x1A220_u32
  CLIP_FAR_HINT_PGI = 0x1A221_u32
  WIDE_LINE_HINT_PGI = 0x1A222_u32
  BACK_NORMALS_HINT_PGI = 0x1A223_u32
  alias PFNGLHINTPGIPROC = (Enum, Int) -> Void
  PGI_VERTEX_HINTS = 1
  VERTEX_DATA_HINT_PGI = 0x1A22A_u32
  VERTEX_CONSISTENT_HINT_PGI = 0x1A22B_u32
  MATERIAL_SIDE_HINT_PGI = 0x1A22C_u32
  MAX_VERTEX_HINT_PGI = 0x1A22D_u32
  COLOR3_BIT_PGI = 0x00010000_u32
  COLOR4_BIT_PGI = 0x00020000_u32
  EDGEFLAG_BIT_PGI = 0x00040000_u32
  INDEX_BIT_PGI = 0x00080000_u32
  MAT_AMBIENT_BIT_PGI = 0x00100000_u32
  MAT_AMBIENT_AND_DIFFUSE_BIT_PGI = 0x00200000_u32
  MAT_DIFFUSE_BIT_PGI = 0x00400000_u32
  MAT_EMISSION_BIT_PGI = 0x00800000_u32
  MAT_COLOR_INDEXES_BIT_PGI = 0x01000000_u32
  MAT_SHININESS_BIT_PGI = 0x02000000_u32
  MAT_SPECULAR_BIT_PGI = 0x04000000_u32
  NORMAL_BIT_PGI = 0x08000000_u32
  TEXCOORD1_BIT_PGI = 0x10000000_u32
  TEXCOORD2_BIT_PGI = 0x20000000_u32
  TEXCOORD3_BIT_PGI = 0x40000000_u32
  TEXCOORD4_BIT_PGI = 0x80000000_u32
  VERTEX23_BIT_PGI = 0x00000004_u32
  VERTEX4_BIT_PGI = 0x00000008_u32
  REND_SCREEN_COORDINATES = 1
  SCREEN_COORDINATES_REND = 0x8490_u32
  INVERTED_SCREEN_W_REND = 0x8491_u32
  S_3_S3TC = 1
  RGB_S3TC = 0x83A0_u32
  RGB4_S3TC = 0x83A1_u32
  RGBA_S3TC = 0x83A2_u32
  RGBA4_S3TC = 0x83A3_u32
  RGBA_DXT5_S3TC = 0x83A4_u32
  RGBA4_DXT5_S3TC = 0x83A5_u32
  SGIS_DETAIL_TEXTURE = 1
  DETAIL_TEXTURE_2D_SGIS = 0x8095_u32
  DETAIL_TEXTURE_2D_BINDING_SGIS = 0x8096_u32
  LINEAR_DETAIL_SGIS = 0x8097_u32
  LINEAR_DETAIL_ALPHA_SGIS = 0x8098_u32
  LINEAR_DETAIL_COLOR_SGIS = 0x8099_u32
  DETAIL_TEXTURE_LEVEL_SGIS = 0x809A_u32
  DETAIL_TEXTURE_MODE_SGIS = 0x809B_u32
  DETAIL_TEXTURE_FUNC_POINTS_SGIS = 0x809C_u32
  alias PFNGLDETAILTEXFUNCSGISPROC = (Enum, Sizei, Float*) -> Void
  alias PFNGLGETDETAILTEXFUNCSGISPROC = (Enum, Float*) -> Void
  SGIS_FOG_FUNCTION = 1
  FOG_FUNC_SGIS = 0x812A_u32
  FOG_FUNC_POINTS_SGIS = 0x812B_u32
  MAX_FOG_FUNC_POINTS_SGIS = 0x812C_u32
  alias PFNGLFOGFUNCSGISPROC = (Sizei, Float*) -> Void
  alias PFNGLGETFOGFUNCSGISPROC = Float* -> Void
  SGIS_GENERATE_MIPMAP = 1
  GENERATE_MIPMAP_SGIS = 0x8191_u32
  GENERATE_MIPMAP_HINT_SGIS = 0x8192_u32
  SGIS_MULTISAMPLE = 1
  MULTISAMPLE_SGIS = 0x809D_u32
  SAMPLE_ALPHA_TO_MASK_SGIS = 0x809E_u32
  SAMPLE_ALPHA_TO_ONE_SGIS = 0x809F_u32
  SAMPLE_MASK_SGIS = 0x80A0_u32
  GL_1PASS_SGIS = 0x80A1_u32
  GL_2PASS_0_SGIS = 0x80A2_u32
  GL_2PASS_1_SGIS = 0x80A3_u32
  GL_4PASS_0_SGIS = 0x80A4_u32
  GL_4PASS_1_SGIS = 0x80A5_u32
  GL_4PASS_2_SGIS = 0x80A6_u32
  GL_4PASS_3_SGIS = 0x80A7_u32
  SAMPLE_BUFFERS_SGIS = 0x80A8_u32
  SAMPLES_SGIS = 0x80A9_u32
  SAMPLE_MASK_VALUE_SGIS = 0x80AA_u32
  SAMPLE_MASK_INVERT_SGIS = 0x80AB_u32
  SAMPLE_PATTERN_SGIS = 0x80AC_u32
  alias PFNGLSAMPLEMASKSGISPROC = (Clampf, Boolean) -> Void
  alias PFNGLSAMPLEPATTERNSGISPROC = Enum -> Void
  SGIS_PIXEL_TEXTURE = 1
  PIXEL_TEXTURE_SGIS = 0x8353_u32
  PIXEL_FRAGMENT_RGB_SOURCE_SGIS = 0x8354_u32
  PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS = 0x8355_u32
  PIXEL_GROUP_COLOR_SGIS = 0x8356_u32
  alias PFNGLPIXELTEXGENPARAMETERISGISPROC = (Enum, Int) -> Void
  alias PFNGLPIXELTEXGENPARAMETERIVSGISPROC = (Enum, Int*) -> Void
  alias PFNGLPIXELTEXGENPARAMETERFSGISPROC = (Enum, Float) -> Void
  alias PFNGLPIXELTEXGENPARAMETERFVSGISPROC = (Enum, Float*) -> Void
  alias PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC = (Enum, Int*) -> Void
  alias PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC = (Enum, Float*) -> Void
  SGIS_POINT_LINE_TEXGEN = 1
  EYE_DISTANCE_TO_POINT_SGIS = 0x81F0_u32
  OBJECT_DISTANCE_TO_POINT_SGIS = 0x81F1_u32
  EYE_DISTANCE_TO_LINE_SGIS = 0x81F2_u32
  OBJECT_DISTANCE_TO_LINE_SGIS = 0x81F3_u32
  EYE_POINT_SGIS = 0x81F4_u32
  OBJECT_POINT_SGIS = 0x81F5_u32
  EYE_LINE_SGIS = 0x81F6_u32
  OBJECT_LINE_SGIS = 0x81F7_u32
  SGIS_POINT_PARAMETERS = 1
  POINT_SIZE_MIN_SGIS = 0x8126_u32
  POINT_SIZE_MAX_SGIS = 0x8127_u32
  POINT_FADE_THRESHOLD_SIZE_SGIS = 0x8128_u32
  DISTANCE_ATTENUATION_SGIS = 0x8129_u32
  alias PFNGLPOINTPARAMETERFSGISPROC = (Enum, Float) -> Void
  alias PFNGLPOINTPARAMETERFVSGISPROC = (Enum, Float*) -> Void
  SGIS_SHARPEN_TEXTURE = 1
  LINEAR_SHARPEN_SGIS = 0x80AD_u32
  LINEAR_SHARPEN_ALPHA_SGIS = 0x80AE_u32
  LINEAR_SHARPEN_COLOR_SGIS = 0x80AF_u32
  SHARPEN_TEXTURE_FUNC_POINTS_SGIS = 0x80B0_u32
  alias PFNGLSHARPENTEXFUNCSGISPROC = (Enum, Sizei, Float*) -> Void
  alias PFNGLGETSHARPENTEXFUNCSGISPROC = (Enum, Float*) -> Void
  SGIS_TEXTURE4_D = 1
  PACK_SKIP_VOLUMES_SGIS = 0x8130_u32
  PACK_IMAGE_DEPTH_SGIS = 0x8131_u32
  UNPACK_SKIP_VOLUMES_SGIS = 0x8132_u32
  UNPACK_IMAGE_DEPTH_SGIS = 0x8133_u32
  TEXTURE_4D_SGIS = 0x8134_u32
  PROXY_TEXTURE_4D_SGIS = 0x8135_u32
  TEXTURE_4DSIZE_SGIS = 0x8136_u32
  TEXTURE_WRAP_Q_SGIS = 0x8137_u32
  MAX_4D_TEXTURE_SIZE_SGIS = 0x8138_u32
  TEXTURE_4D_BINDING_SGIS = 0x814F_u32
  alias PFNGLTEXIMAGE4DSGISPROC = (Enum, Int, Enum, Sizei, Sizei, Sizei, Sizei, Int, Enum, Enum, Void*) -> Void
  alias PFNGLTEXSUBIMAGE4DSGISPROC = (Enum, Int, Int, Int, Int, Int, Sizei, Sizei, Sizei, Sizei, Enum, Enum, Void*) -> Void
  SGIS_TEXTURE_BORDER_CLAMP = 1
  CLAMP_TO_BORDER_SGIS = 0x812D_u32
  SGIS_TEXTURE_COLOR_MASK = 1
  TEXTURE_COLOR_WRITEMASK_SGIS = 0x81EF_u32
  alias PFNGLTEXTURECOLORMASKSGISPROC = (Boolean, Boolean, Boolean, Boolean) -> Void
  SGIS_TEXTURE_EDGE_CLAMP = 1
  CLAMP_TO_EDGE_SGIS = 0x812F_u32
  SGIS_TEXTURE_FILTER4 = 1
  FILTER4_SGIS = 0x8146_u32
  TEXTURE_FILTER4_SIZE_SGIS = 0x8147_u32
  alias PFNGLGETTEXFILTERFUNCSGISPROC = (Enum, Enum, Float*) -> Void
  alias PFNGLTEXFILTERFUNCSGISPROC = (Enum, Enum, Sizei, Float*) -> Void
  SGIS_TEXTURE_LOD = 1
  TEXTURE_MIN_LOD_SGIS = 0x813A_u32
  TEXTURE_MAX_LOD_SGIS = 0x813B_u32
  TEXTURE_BASE_LEVEL_SGIS = 0x813C_u32
  TEXTURE_MAX_LEVEL_SGIS = 0x813D_u32
  SGIS_TEXTURE_SELECT = 1
  DUAL_ALPHA4_SGIS = 0x8110_u32
  DUAL_ALPHA8_SGIS = 0x8111_u32
  DUAL_ALPHA12_SGIS = 0x8112_u32
  DUAL_ALPHA16_SGIS = 0x8113_u32
  DUAL_LUMINANCE4_SGIS = 0x8114_u32
  DUAL_LUMINANCE8_SGIS = 0x8115_u32
  DUAL_LUMINANCE12_SGIS = 0x8116_u32
  DUAL_LUMINANCE16_SGIS = 0x8117_u32
  DUAL_INTENSITY4_SGIS = 0x8118_u32
  DUAL_INTENSITY8_SGIS = 0x8119_u32
  DUAL_INTENSITY12_SGIS = 0x811A_u32
  DUAL_INTENSITY16_SGIS = 0x811B_u32
  DUAL_LUMINANCE_ALPHA4_SGIS = 0x811C_u32
  DUAL_LUMINANCE_ALPHA8_SGIS = 0x811D_u32
  QUAD_ALPHA4_SGIS = 0x811E_u32
  QUAD_ALPHA8_SGIS = 0x811F_u32
  QUAD_LUMINANCE4_SGIS = 0x8120_u32
  QUAD_LUMINANCE8_SGIS = 0x8121_u32
  QUAD_INTENSITY4_SGIS = 0x8122_u32
  QUAD_INTENSITY8_SGIS = 0x8123_u32
  DUAL_TEXTURE_SELECT_SGIS = 0x8124_u32
  QUAD_TEXTURE_SELECT_SGIS = 0x8125_u32
  SGIX_ASYNC = 1
  ASYNC_MARKER_SGIX = 0x8329_u32
  alias PFNGLASYNCMARKERSGIXPROC = Uint -> Void
  alias PFNGLFINISHASYNCSGIXPROC = Uint* -> Int
  alias PFNGLPOLLASYNCSGIXPROC = Uint* -> Int
  alias PFNGLGENASYNCMARKERSSGIXPROC = Sizei -> Uint
  alias PFNGLDELETEASYNCMARKERSSGIXPROC = (Uint, Sizei) -> Void
  alias PFNGLISASYNCMARKERSGIXPROC = Uint -> Boolean
  SGIX_ASYNC_HISTOGRAM = 1
  ASYNC_HISTOGRAM_SGIX = 0x832C_u32
  MAX_ASYNC_HISTOGRAM_SGIX = 0x832D_u32
  SGIX_ASYNC_PIXEL = 1
  ASYNC_TEX_IMAGE_SGIX = 0x835C_u32
  ASYNC_DRAW_PIXELS_SGIX = 0x835D_u32
  ASYNC_READ_PIXELS_SGIX = 0x835E_u32
  MAX_ASYNC_TEX_IMAGE_SGIX = 0x835F_u32
  MAX_ASYNC_DRAW_PIXELS_SGIX = 0x8360_u32
  MAX_ASYNC_READ_PIXELS_SGIX = 0x8361_u32
  SGIX_BLEND_ALPHA_MINMAX = 1
  ALPHA_MIN_SGIX = 0x8320_u32
  ALPHA_MAX_SGIX = 0x8321_u32
  SGIX_CALLIGRAPHIC_FRAGMENT = 1
  CALLIGRAPHIC_FRAGMENT_SGIX = 0x8183_u32
  SGIX_CLIPMAP = 1
  LINEAR_CLIPMAP_LINEAR_SGIX = 0x8170_u32
  TEXTURE_CLIPMAP_CENTER_SGIX = 0x8171_u32
  TEXTURE_CLIPMAP_FRAME_SGIX = 0x8172_u32
  TEXTURE_CLIPMAP_OFFSET_SGIX = 0x8173_u32
  TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX = 0x8174_u32
  TEXTURE_CLIPMAP_LOD_OFFSET_SGIX = 0x8175_u32
  TEXTURE_CLIPMAP_DEPTH_SGIX = 0x8176_u32
  MAX_CLIPMAP_DEPTH_SGIX = 0x8177_u32
  MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX = 0x8178_u32
  NEAREST_CLIPMAP_NEAREST_SGIX = 0x844D_u32
  NEAREST_CLIPMAP_LINEAR_SGIX = 0x844E_u32
  LINEAR_CLIPMAP_NEAREST_SGIX = 0x844F_u32
  SGIX_CONVOLUTION_ACCURACY = 1
  CONVOLUTION_HINT_SGIX = 0x8316_u32
  SGIX_DEPTH_PASS_INSTRUMENT = 1
  SGIX_DEPTH_TEXTURE = 1
  DEPTH_COMPONENT16_SGIX = 0x81A5_u32
  DEPTH_COMPONENT24_SGIX = 0x81A6_u32
  DEPTH_COMPONENT32_SGIX = 0x81A7_u32
  SGIX_FLUSH_RASTER = 1
  alias PFNGLFLUSHRASTERSGIXPROC = -> Void
  SGIX_FOG_OFFSET = 1
  FOG_OFFSET_SGIX = 0x8198_u32
  FOG_OFFSET_VALUE_SGIX = 0x8199_u32
  SGIX_FRAGMENT_LIGHTING = 1
  FRAGMENT_LIGHTING_SGIX = 0x8400_u32
  FRAGMENT_COLOR_MATERIAL_SGIX = 0x8401_u32
  FRAGMENT_COLOR_MATERIAL_FACE_SGIX = 0x8402_u32
  FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX = 0x8403_u32
  MAX_FRAGMENT_LIGHTS_SGIX = 0x8404_u32
  MAX_ACTIVE_LIGHTS_SGIX = 0x8405_u32
  CURRENT_RASTER_NORMAL_SGIX = 0x8406_u32
  LIGHT_ENV_MODE_SGIX = 0x8407_u32
  FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX = 0x8408_u32
  FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX = 0x8409_u32
  FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX = 0x840A_u32
  FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX = 0x840B_u32
  FRAGMENT_LIGHT0_SGIX = 0x840C_u32
  FRAGMENT_LIGHT1_SGIX = 0x840D_u32
  FRAGMENT_LIGHT2_SGIX = 0x840E_u32
  FRAGMENT_LIGHT3_SGIX = 0x840F_u32
  FRAGMENT_LIGHT4_SGIX = 0x8410_u32
  FRAGMENT_LIGHT5_SGIX = 0x8411_u32
  FRAGMENT_LIGHT6_SGIX = 0x8412_u32
  FRAGMENT_LIGHT7_SGIX = 0x8413_u32
  alias PFNGLFRAGMENTCOLORMATERIALSGIXPROC = (Enum, Enum) -> Void
  alias PFNGLFRAGMENTLIGHTFSGIXPROC = (Enum, Enum, Float) -> Void
  alias PFNGLFRAGMENTLIGHTFVSGIXPROC = (Enum, Enum, Float*) -> Void
  alias PFNGLFRAGMENTLIGHTISGIXPROC = (Enum, Enum, Int) -> Void
  alias PFNGLFRAGMENTLIGHTIVSGIXPROC = (Enum, Enum, Int*) -> Void
  alias PFNGLFRAGMENTLIGHTMODELFSGIXPROC = (Enum, Float) -> Void
  alias PFNGLFRAGMENTLIGHTMODELFVSGIXPROC = (Enum, Float*) -> Void
  alias PFNGLFRAGMENTLIGHTMODELISGIXPROC = (Enum, Int) -> Void
  alias PFNGLFRAGMENTLIGHTMODELIVSGIXPROC = (Enum, Int*) -> Void
  alias PFNGLFRAGMENTMATERIALFSGIXPROC = (Enum, Enum, Float) -> Void
  alias PFNGLFRAGMENTMATERIALFVSGIXPROC = (Enum, Enum, Float*) -> Void
  alias PFNGLFRAGMENTMATERIALISGIXPROC = (Enum, Enum, Int) -> Void
  alias PFNGLFRAGMENTMATERIALIVSGIXPROC = (Enum, Enum, Int*) -> Void
  alias PFNGLGETFRAGMENTLIGHTFVSGIXPROC = (Enum, Enum, Float*) -> Void
  alias PFNGLGETFRAGMENTLIGHTIVSGIXPROC = (Enum, Enum, Int*) -> Void
  alias PFNGLGETFRAGMENTMATERIALFVSGIXPROC = (Enum, Enum, Float*) -> Void
  alias PFNGLGETFRAGMENTMATERIALIVSGIXPROC = (Enum, Enum, Int*) -> Void
  alias PFNGLLIGHTENVISGIXPROC = (Enum, Int) -> Void
  SGIX_FRAMEZOOM = 1
  FRAMEZOOM_SGIX = 0x818B_u32
  FRAMEZOOM_FACTOR_SGIX = 0x818C_u32
  MAX_FRAMEZOOM_FACTOR_SGIX = 0x818D_u32
  alias PFNGLFRAMEZOOMSGIXPROC = Int -> Void
  SGIX_IGLOO_INTERFACE = 1
  alias PFNGLIGLOOINTERFACESGIXPROC = (Enum, Void*) -> Void
  SGIX_INSTRUMENTS = 1
  INSTRUMENT_BUFFER_POINTER_SGIX = 0x8180_u32
  INSTRUMENT_MEASUREMENTS_SGIX = 0x8181_u32
  alias PFNGLGETINSTRUMENTSSGIXPROC = -> Int
  alias PFNGLINSTRUMENTSBUFFERSGIXPROC = (Sizei, Int*) -> Void
  alias PFNGLPOLLINSTRUMENTSSGIXPROC = Int* -> Int
  alias PFNGLREADINSTRUMENTSSGIXPROC = Int -> Void
  alias PFNGLSTARTINSTRUMENTSSGIXPROC = -> Void
  alias PFNGLSTOPINSTRUMENTSSGIXPROC = Int -> Void
  SGIX_INTERLACE = 1
  INTERLACE_SGIX = 0x8094_u32
  SGIX_IR_INSTRUMENT1 = 1
  IR_INSTRUMENT1_SGIX = 0x817F_u32
  SGIX_LIST_PRIORITY = 1
  LIST_PRIORITY_SGIX = 0x8182_u32
  alias PFNGLGETLISTPARAMETERFVSGIXPROC = (Uint, Enum, Float*) -> Void
  alias PFNGLGETLISTPARAMETERIVSGIXPROC = (Uint, Enum, Int*) -> Void
  alias PFNGLLISTPARAMETERFSGIXPROC = (Uint, Enum, Float) -> Void
  alias PFNGLLISTPARAMETERFVSGIXPROC = (Uint, Enum, Float*) -> Void
  alias PFNGLLISTPARAMETERISGIXPROC = (Uint, Enum, Int) -> Void
  alias PFNGLLISTPARAMETERIVSGIXPROC = (Uint, Enum, Int*) -> Void
  SGIX_PIXEL_TEXTURE = 1
  PIXEL_TEX_GEN_SGIX = 0x8139_u32
  PIXEL_TEX_GEN_MODE_SGIX = 0x832B_u32
  alias PFNGLPIXELTEXGENSGIXPROC = Enum -> Void
  SGIX_PIXEL_TILES = 1
  PIXEL_TILE_BEST_ALIGNMENT_SGIX = 0x813E_u32
  PIXEL_TILE_CACHE_INCREMENT_SGIX = 0x813F_u32
  PIXEL_TILE_WIDTH_SGIX = 0x8140_u32
  PIXEL_TILE_HEIGHT_SGIX = 0x8141_u32
  PIXEL_TILE_GRID_WIDTH_SGIX = 0x8142_u32
  PIXEL_TILE_GRID_HEIGHT_SGIX = 0x8143_u32
  PIXEL_TILE_GRID_DEPTH_SGIX = 0x8144_u32
  PIXEL_TILE_CACHE_SIZE_SGIX = 0x8145_u32
  SGIX_POLYNOMIAL_FFD = 1
  TEXTURE_DEFORMATION_BIT_SGIX = 0x00000001_u32
  GEOMETRY_DEFORMATION_BIT_SGIX = 0x00000002_u32
  GEOMETRY_DEFORMATION_SGIX = 0x8194_u32
  TEXTURE_DEFORMATION_SGIX = 0x8195_u32
  DEFORMATIONS_MASK_SGIX = 0x8196_u32
  MAX_DEFORMATION_ORDER_SGIX = 0x8197_u32
  alias PFNGLDEFORMATIONMAP3DSGIXPROC = (Enum, Double, Double, Int, Int, Double, Double, Int, Int, Double, Double, Int, Int, Double*) -> Void
  alias PFNGLDEFORMATIONMAP3FSGIXPROC = (Enum, Float, Float, Int, Int, Float, Float, Int, Int, Float, Float, Int, Int, Float*) -> Void
  alias PFNGLDEFORMSGIXPROC = Bitfield -> Void
  alias PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC = Bitfield -> Void
  SGIX_REFERENCE_PLANE = 1
  REFERENCE_PLANE_SGIX = 0x817D_u32
  REFERENCE_PLANE_EQUATION_SGIX = 0x817E_u32
  alias PFNGLREFERENCEPLANESGIXPROC = Double* -> Void
  SGIX_RESAMPLE = 1
  PACK_RESAMPLE_SGIX = 0x842C_u32
  UNPACK_RESAMPLE_SGIX = 0x842D_u32
  RESAMPLE_REPLICATE_SGIX = 0x842E_u32
  RESAMPLE_ZERO_FILL_SGIX = 0x842F_u32
  RESAMPLE_DECIMATE_SGIX = 0x8430_u32
  SGIX_SCALEBIAS_HINT = 1
  SCALEBIAS_HINT_SGIX = 0x8322_u32
  SGIX_SHADOW = 1
  TEXTURE_COMPARE_SGIX = 0x819A_u32
  TEXTURE_COMPARE_OPERATOR_SGIX = 0x819B_u32
  TEXTURE_LEQUAL_R_SGIX = 0x819C_u32
  TEXTURE_GEQUAL_R_SGIX = 0x819D_u32
  SGIX_SHADOW_AMBIENT = 1
  SHADOW_AMBIENT_SGIX = 0x80BF_u32
  SGIX_SPRITE = 1
  SPRITE_SGIX = 0x8148_u32
  SPRITE_MODE_SGIX = 0x8149_u32
  SPRITE_AXIS_SGIX = 0x814A_u32
  SPRITE_TRANSLATION_SGIX = 0x814B_u32
  SPRITE_AXIAL_SGIX = 0x814C_u32
  SPRITE_OBJECT_ALIGNED_SGIX = 0x814D_u32
  SPRITE_EYE_ALIGNED_SGIX = 0x814E_u32
  alias PFNGLSPRITEPARAMETERFSGIXPROC = (Enum, Float) -> Void
  alias PFNGLSPRITEPARAMETERFVSGIXPROC = (Enum, Float*) -> Void
  alias PFNGLSPRITEPARAMETERISGIXPROC = (Enum, Int) -> Void
  alias PFNGLSPRITEPARAMETERIVSGIXPROC = (Enum, Int*) -> Void
  SGIX_SUBSAMPLE = 1
  PACK_SUBSAMPLE_RATE_SGIX = 0x85A0_u32
  UNPACK_SUBSAMPLE_RATE_SGIX = 0x85A1_u32
  PIXEL_SUBSAMPLE_4444_SGIX = 0x85A2_u32
  PIXEL_SUBSAMPLE_2424_SGIX = 0x85A3_u32
  PIXEL_SUBSAMPLE_4242_SGIX = 0x85A4_u32
  SGIX_TAG_SAMPLE_BUFFER = 1
  alias PFNGLTAGSAMPLEBUFFERSGIXPROC = -> Void
  SGIX_TEXTURE_ADD_ENV = 1
  TEXTURE_ENV_BIAS_SGIX = 0x80BE_u32
  SGIX_TEXTURE_COORDINATE_CLAMP = 1
  TEXTURE_MAX_CLAMP_S_SGIX = 0x8369_u32
  TEXTURE_MAX_CLAMP_T_SGIX = 0x836A_u32
  TEXTURE_MAX_CLAMP_R_SGIX = 0x836B_u32
  SGIX_TEXTURE_LOD_BIAS = 1
  TEXTURE_LOD_BIAS_S_SGIX = 0x818E_u32
  TEXTURE_LOD_BIAS_T_SGIX = 0x818F_u32
  TEXTURE_LOD_BIAS_R_SGIX = 0x8190_u32
  SGIX_TEXTURE_MULTI_BUFFER = 1
  TEXTURE_MULTI_BUFFER_HINT_SGIX = 0x812E_u32
  SGIX_TEXTURE_SCALE_BIAS = 1
  POST_TEXTURE_FILTER_BIAS_SGIX = 0x8179_u32
  POST_TEXTURE_FILTER_SCALE_SGIX = 0x817A_u32
  POST_TEXTURE_FILTER_BIAS_RANGE_SGIX = 0x817B_u32
  POST_TEXTURE_FILTER_SCALE_RANGE_SGIX = 0x817C_u32
  SGIX_VERTEX_PRECLIP = 1
  VERTEX_PRECLIP_SGIX = 0x83EE_u32
  VERTEX_PRECLIP_HINT_SGIX = 0x83EF_u32
  SGIX_YCRCB = 1
  YCRCB_422_SGIX = 0x81BB_u32
  YCRCB_444_SGIX = 0x81BC_u32
  SGIX_YCRCB_SUBSAMPLE = 1
  SGIX_YCRCBA = 1
  YCRCB_SGIX = 0x8318_u32
  YCRCBA_SGIX = 0x8319_u32
  SGI_COLOR_MATRIX = 1
  COLOR_MATRIX_SGI = 0x80B1_u32
  COLOR_MATRIX_STACK_DEPTH_SGI = 0x80B2_u32
  MAX_COLOR_MATRIX_STACK_DEPTH_SGI = 0x80B3_u32
  POST_COLOR_MATRIX_RED_SCALE_SGI = 0x80B4_u32
  POST_COLOR_MATRIX_GREEN_SCALE_SGI = 0x80B5_u32
  POST_COLOR_MATRIX_BLUE_SCALE_SGI = 0x80B6_u32
  POST_COLOR_MATRIX_ALPHA_SCALE_SGI = 0x80B7_u32
  POST_COLOR_MATRIX_RED_BIAS_SGI = 0x80B8_u32
  POST_COLOR_MATRIX_GREEN_BIAS_SGI = 0x80B9_u32
  POST_COLOR_MATRIX_BLUE_BIAS_SGI = 0x80BA_u32
  POST_COLOR_MATRIX_ALPHA_BIAS_SGI = 0x80BB_u32
  SGI_COLOR_TABLE = 1
  COLOR_TABLE_SGI = 0x80D0_u32
  POST_CONVOLUTION_COLOR_TABLE_SGI = 0x80D1_u32
  POST_COLOR_MATRIX_COLOR_TABLE_SGI = 0x80D2_u32
  PROXY_COLOR_TABLE_SGI = 0x80D3_u32
  PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI = 0x80D4_u32
  PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI = 0x80D5_u32
  COLOR_TABLE_SCALE_SGI = 0x80D6_u32
  COLOR_TABLE_BIAS_SGI = 0x80D7_u32
  COLOR_TABLE_FORMAT_SGI = 0x80D8_u32
  COLOR_TABLE_WIDTH_SGI = 0x80D9_u32
  COLOR_TABLE_RED_SIZE_SGI = 0x80DA_u32
  COLOR_TABLE_GREEN_SIZE_SGI = 0x80DB_u32
  COLOR_TABLE_BLUE_SIZE_SGI = 0x80DC_u32
  COLOR_TABLE_ALPHA_SIZE_SGI = 0x80DD_u32
  COLOR_TABLE_LUMINANCE_SIZE_SGI = 0x80DE_u32
  COLOR_TABLE_INTENSITY_SIZE_SGI = 0x80DF_u32
  alias PFNGLCOLORTABLESGIPROC = (Enum, Enum, Sizei, Enum, Enum, Void*) -> Void
  alias PFNGLCOLORTABLEPARAMETERFVSGIPROC = (Enum, Enum, Float*) -> Void
  alias PFNGLCOLORTABLEPARAMETERIVSGIPROC = (Enum, Enum, Int*) -> Void
  alias PFNGLCOPYCOLORTABLESGIPROC = (Enum, Enum, Int, Int, Sizei) -> Void
  alias PFNGLGETCOLORTABLESGIPROC = (Enum, Enum, Enum, Void*) -> Void
  alias PFNGLGETCOLORTABLEPARAMETERFVSGIPROC = (Enum, Enum, Float*) -> Void
  alias PFNGLGETCOLORTABLEPARAMETERIVSGIPROC = (Enum, Enum, Int*) -> Void
  SGI_TEXTURE_COLOR_TABLE = 1
  TEXTURE_COLOR_TABLE_SGI = 0x80BC_u32
  PROXY_TEXTURE_COLOR_TABLE_SGI = 0x80BD_u32
  SUNX_CONSTANT_DATA = 1
  UNPACK_CONSTANT_DATA_SUNX = 0x81D5_u32
  TEXTURE_CONSTANT_DATA_SUNX = 0x81D6_u32
  alias PFNGLFINISHTEXTURESUNXPROC = -> Void
  SUN_CONVOLUTION_BORDER_MODES = 1
  WRAP_BORDER_SUN = 0x81D4_u32
  SUN_GLOBAL_ALPHA = 1
  GLOBAL_ALPHA_SUN = 0x81D9_u32
  GLOBAL_ALPHA_FACTOR_SUN = 0x81DA_u32
  alias PFNGLGLOBALALPHAFACTORBSUNPROC = Byte -> Void
  alias PFNGLGLOBALALPHAFACTORSSUNPROC = Short -> Void
  alias PFNGLGLOBALALPHAFACTORISUNPROC = Int -> Void
  alias PFNGLGLOBALALPHAFACTORFSUNPROC = Float -> Void
  alias PFNGLGLOBALALPHAFACTORDSUNPROC = Double -> Void
  alias PFNGLGLOBALALPHAFACTORUBSUNPROC = Ubyte -> Void
  alias PFNGLGLOBALALPHAFACTORUSSUNPROC = Ushort -> Void
  alias PFNGLGLOBALALPHAFACTORUISUNPROC = Uint -> Void
  SUN_MESH_ARRAY = 1
  QUAD_MESH_SUN = 0x8614_u32
  TRIANGLE_MESH_SUN = 0x8615_u32
  alias PFNGLDRAWMESHARRAYSSUNPROC = (Enum, Int, Sizei, Sizei) -> Void
  SUN_SLICE_ACCUM = 1
  SLICE_ACCUM_SUN = 0x85CC_u32
  SUN_TRIANGLE_LIST = 1
  RESTART_SUN = 0x0001_u32
  REPLACE_MIDDLE_SUN = 0x0002_u32
  REPLACE_OLDEST_SUN = 0x0003_u32
  TRIANGLE_LIST_SUN = 0x81D7_u32
  REPLACEMENT_CODE_SUN = 0x81D8_u32
  REPLACEMENT_CODE_ARRAY_SUN = 0x85C0_u32
  REPLACEMENT_CODE_ARRAY_TYPE_SUN = 0x85C1_u32
  REPLACEMENT_CODE_ARRAY_STRIDE_SUN = 0x85C2_u32
  REPLACEMENT_CODE_ARRAY_POINTER_SUN = 0x85C3_u32
  R1UI_V3F_SUN = 0x85C4_u32
  R1UI_C4UB_V3F_SUN = 0x85C5_u32
  R1UI_C3F_V3F_SUN = 0x85C6_u32
  R1UI_N3F_V3F_SUN = 0x85C7_u32
  R1UI_C4F_N3F_V3F_SUN = 0x85C8_u32
  R1UI_T2F_V3F_SUN = 0x85C9_u32
  R1UI_T2F_N3F_V3F_SUN = 0x85CA_u32
  R1UI_T2F_C4F_N3F_V3F_SUN = 0x85CB_u32
  alias PFNGLREPLACEMENTCODEUISUNPROC = Uint -> Void
  alias PFNGLREPLACEMENTCODEUSSUNPROC = Ushort -> Void
  alias PFNGLREPLACEMENTCODEUBSUNPROC = Ubyte -> Void
  alias PFNGLREPLACEMENTCODEUIVSUNPROC = Uint* -> Void
  alias PFNGLREPLACEMENTCODEUSVSUNPROC = Ushort* -> Void
  alias PFNGLREPLACEMENTCODEUBVSUNPROC = Ubyte* -> Void
  alias PFNGLREPLACEMENTCODEPOINTERSUNPROC = (Enum, Sizei, Void**) -> Void
  SUN_VERTEX = 1
  alias PFNGLCOLOR4UBVERTEX2FSUNPROC = (Ubyte, Ubyte, Ubyte, Ubyte, Float, Float) -> Void
  alias PFNGLCOLOR4UBVERTEX2FVSUNPROC = (Ubyte*, Float*) -> Void
  alias PFNGLCOLOR4UBVERTEX3FSUNPROC = (Ubyte, Ubyte, Ubyte, Ubyte, Float, Float, Float) -> Void
  alias PFNGLCOLOR4UBVERTEX3FVSUNPROC = (Ubyte*, Float*) -> Void
  alias PFNGLCOLOR3FVERTEX3FSUNPROC = (Float, Float, Float, Float, Float, Float) -> Void
  alias PFNGLCOLOR3FVERTEX3FVSUNPROC = (Float*, Float*) -> Void
  alias PFNGLNORMAL3FVERTEX3FSUNPROC = (Float, Float, Float, Float, Float, Float) -> Void
  alias PFNGLNORMAL3FVERTEX3FVSUNPROC = (Float*, Float*) -> Void
  alias PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC = (Float, Float, Float, Float, Float, Float, Float, Float, Float, Float) -> Void
  alias PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC = (Float*, Float*, Float*) -> Void
  alias PFNGLTEXCOORD2FVERTEX3FSUNPROC = (Float, Float, Float, Float, Float) -> Void
  alias PFNGLTEXCOORD2FVERTEX3FVSUNPROC = (Float*, Float*) -> Void
  alias PFNGLTEXCOORD4FVERTEX4FSUNPROC = (Float, Float, Float, Float, Float, Float, Float, Float) -> Void
  alias PFNGLTEXCOORD4FVERTEX4FVSUNPROC = (Float*, Float*) -> Void
  alias PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC = (Float, Float, Ubyte, Ubyte, Ubyte, Ubyte, Float, Float, Float) -> Void
  alias PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC = (Float*, Ubyte*, Float*) -> Void
  alias PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC = (Float, Float, Float, Float, Float, Float, Float, Float) -> Void
  alias PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC = (Float*, Float*, Float*) -> Void
  alias PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC = (Float, Float, Float, Float, Float, Float, Float, Float) -> Void
  alias PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC = (Float*, Float*, Float*) -> Void
  alias PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC = (Float, Float, Float, Float, Float, Float, Float, Float, Float, Float, Float, Float) -> Void
  alias PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC = (Float*, Float*, Float*, Float*) -> Void
  alias PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC = (Float, Float, Float, Float, Float, Float, Float, Float, Float, Float, Float, Float, Float, Float, Float) -> Void
  alias PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC = (Float*, Float*, Float*, Float*) -> Void
  alias PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC = (Uint, Float, Float, Float) -> Void
  alias PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC = (Uint*, Float*) -> Void
  alias PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC = (Uint, Ubyte, Ubyte, Ubyte, Ubyte, Float, Float, Float) -> Void
  alias PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC = (Uint*, Ubyte*, Float*) -> Void
  alias PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC = (Uint, Float, Float, Float, Float, Float, Float) -> Void
  alias PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC = (Uint*, Float*, Float*) -> Void
  alias PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC = (Uint, Float, Float, Float, Float, Float, Float) -> Void
  alias PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC = (Uint*, Float*, Float*) -> Void
  alias PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC = (Uint, Float, Float, Float, Float, Float, Float, Float, Float, Float, Float) -> Void
  alias PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC = (Uint*, Float*, Float*, Float*) -> Void
  alias PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC = (Uint, Float, Float, Float, Float, Float) -> Void
  alias PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC = (Uint*, Float*, Float*) -> Void
  alias PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC = (Uint, Float, Float, Float, Float, Float, Float, Float, Float) -> Void
  alias PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC = (Uint*, Float*, Float*, Float*) -> Void
  alias PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC = (Uint, Float, Float, Float, Float, Float, Float, Float, Float, Float, Float, Float, Float) -> Void
  alias PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC = (Uint*, Float*, Float*, Float*, Float*) -> Void
  WIN_PHONG_SHADING = 1
  PHONG_WIN = 0x80EA_u32
  PHONG_HINT_WIN = 0x80EB_u32
  WIN_SPECULAR_FOG = 1
  FOG_SPECULAR_TEXTURE_WIN = 0x80EC_u32
  MESA_PACKED_DEPTH_STENCIL = 1
  DEPTH_STENCIL_MESA = 0x8750_u32
  UNSIGNED_INT_24_8_MESA = 0x8751_u32
  UNSIGNED_INT_8_24_REV_MESA = 0x8752_u32
  UNSIGNED_SHORT_15_1_MESA = 0x8753_u32
  UNSIGNED_SHORT_1_15_REV_MESA = 0x8754_u32
  ATI_BLEND_EQUATION_SEPARATE = 1
  ALPHA_BLEND_EQUATION_ATI = 0x883D_u32
  fun blend_equation_separate_ati = "glBlendEquationSeparateATI"(mode_rgb : Enum, mode_a : Enum) : Void
  alias PFNGLBLENDEQUATIONSEPARATEATIPROC = (Enum, Enum) -> Void
  alias EglImageOES = Void*
  OES_EGL_IMAGE = 1
  alias PFNGLEGLIMAGETARGETTEXTURE2DOESPROC = (Enum, EglImageOES) -> Void
  alias PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC = (Enum, EglImageOES) -> Void
end
